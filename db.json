{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/apollo/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/apollo/source/css/apollo.css","path":"css/apollo.css","modified":0,"renderable":1},{"_id":"themes/apollo/source/scss/apollo.scss","path":"scss/apollo.scss","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"d9d79841e87143cc7783a428d97fd7cc10b81cca","modified":1463106537000},{"_id":"public/atom.xml","hash":"fad1179b55ba7939bb01efef0895f12a38b325fb","modified":1463188179094},{"_id":"public/sitemap.xml","hash":"ab4e8bb2b88739dc151cbbe411ba3582aa8f4191","modified":1463188179097},{"_id":"public/2016/05/12/hello-world/index.html","hash":"4966db4218224751a762a1aa3e6fae6a0001e997","modified":1463106482301},{"_id":"public/archives/index.html","hash":"3ae410dd13f0f10eca710f2bf19edd3668f9a0a9","modified":1463188179166},{"_id":"public/index.html","hash":"8d1d837724a1aee8c0af75ce00bdb317833873bd","modified":1463188179166},{"_id":"themes/apollo/LICENSE","hash":"6e31ac9076bfc8f09ae47977419eee4edfb63e5b","modified":1463018493000},{"_id":"themes/apollo/.gitignore","hash":"a006beea0877a0aa3610ee00e73f62cb1d45125b","modified":1463018493000},{"_id":"themes/apollo/README.md","hash":"24578c41ed4c22aed948bdd975e7ce25479cb4a9","modified":1463018493000},{"_id":"themes/apollo/_config.yml","hash":"bd0e5cd3449b0f4a1c6d2bdb1968b061522d4fae","modified":1463018493000},{"_id":"themes/apollo/gulpfile.js","hash":"857a026b6643a2cd52c65d4ae0dc7fe9618206ee","modified":1463018493000},{"_id":"themes/apollo/package.json","hash":"9426138c09ebb95969021d951590c0c54b187a43","modified":1463018493000},{"_id":"themes/apollo/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1463018493000},{"_id":"themes/apollo/.git/config","hash":"e8486e77527181934f2dda23e50b879ab7641244","modified":1463018493000},{"_id":"themes/apollo/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1463018489000},{"_id":"themes/apollo/.git/index","hash":"8de9fec9880ebcef969ffb6388f7085b437d729b","modified":1463018493000},{"_id":"themes/apollo/.git/packed-refs","hash":"9d45aadf9378328557ab06e505efa0d0cafc0e8d","modified":1463018493000},{"_id":"themes/apollo/doc/doc-en.md","hash":"d6d9756b2085cdd8ee51eb5594427e2abf170e94","modified":1463018493000},{"_id":"themes/apollo/doc/doc-zh.md","hash":"d43c1f6bff66426744a2c6f031d19ff09cdeb2d1","modified":1463018493000},{"_id":"themes/apollo/languages/en.yml","hash":"40292f2a48e4e6361132033a47c516cb33127b6c","modified":1463018493000},{"_id":"themes/apollo/languages/zh-cn.yml","hash":"9e4b03e14c094000257ea254fd660dde4c7af63c","modified":1463018493000},{"_id":"themes/apollo/layout/archive.jade","hash":"62797414355bf4474092bc3a32726c8340820ffb","modified":1463018493000},{"_id":"themes/apollo/layout/index.jade","hash":"55f2f1b4b5364a0e09cb18e1112664c6415fb881","modified":1463018493000},{"_id":"themes/apollo/layout/post.jade","hash":"245c26244c075c3632d1545c3b228ee9d112f15d","modified":1463018493000},{"_id":"themes/apollo/source/favicon.png","hash":"a9cdcb22d1e74d5480323e19d1983de5a6873b8c","modified":1463018493000},{"_id":"themes/apollo/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1463018489000},{"_id":"themes/apollo/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1463018489000},{"_id":"themes/apollo/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1463018489000},{"_id":"themes/apollo/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1463018489000},{"_id":"themes/apollo/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1463018489000},{"_id":"themes/apollo/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1463018489000},{"_id":"themes/apollo/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1463018489000},{"_id":"themes/apollo/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1463018489000},{"_id":"themes/apollo/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1463018489000},{"_id":"themes/apollo/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1463018489000},{"_id":"themes/apollo/.git/logs/HEAD","hash":"375e6224e94f13642dbbf8acd87e76115843bb38","modified":1463018493000},{"_id":"themes/apollo/layout/mixins/paginator.jade","hash":"f4ee2fb61a32e199b48cf93771749edc8a007391","modified":1463018493000},{"_id":"themes/apollo/layout/mixins/post.jade","hash":"cd9447e9b0ad22213e6a17d9a9b948f9f998f921","modified":1463018493000},{"_id":"themes/apollo/layout/partial/comment.jade","hash":"ff0a2c269c2434da2ac5529872f1d6184a71f96d","modified":1463018493000},{"_id":"themes/apollo/layout/partial/copyright.jade","hash":"1ac04b9dbcff6cc5c1ac8304d5ec86ffeed12183","modified":1463018493000},{"_id":"themes/apollo/layout/partial/head.jade","hash":"51b2ba6a1cebb275730eb7131eea211c91f0986a","modified":1463018493000},{"_id":"themes/apollo/layout/partial/layout.jade","hash":"eb15573ff66bdbb110ac77cf360b740170cee738","modified":1463018493000},{"_id":"themes/apollo/layout/partial/nav.jade","hash":"c35d3061da4b053b73150d9741c542d660798270","modified":1463018493000},{"_id":"themes/apollo/layout/partial/scripts.jade","hash":"aec16d074567d0e408b864a42fd11d107c10f10b","modified":1463018493000},{"_id":"themes/apollo/source/css/apollo.css","hash":"9a5ff2fbb383beb4451b98d2c516f10590e30ca0","modified":1463018493000},{"_id":"themes/apollo/source/scss/apollo.scss","hash":"a3153dfedbaff08c20930b2bde95f2db49f6d518","modified":1463018493000},{"_id":"themes/apollo/.git/objects/pack/pack-a3c5f54d9929af8ef65524e94b653e6ebb9881f6.idx","hash":"0880613624391b389a370441562bf717fcb791c3","modified":1463018493000},{"_id":"themes/apollo/.git/refs/heads/master","hash":"bcc5571f275112b0d1f203c321fe80795462d8b5","modified":1463018493000},{"_id":"themes/apollo/source/scss/_partial/archive-post-list.scss","hash":"d2f740a7d48349b7536777c795f82ab740836d0f","modified":1463018493000},{"_id":"themes/apollo/source/scss/_partial/base.scss","hash":"187315928040112ac5b9b2c0c6b2f406cf45813b","modified":1463018493000},{"_id":"themes/apollo/source/scss/_partial/copyright.scss","hash":"1309667e3000037170cfbb5b8c9c65f4ffcf6814","modified":1463018493000},{"_id":"themes/apollo/source/scss/_partial/footer.scss","hash":"094aca6e52f11b139ac7980ca03fa7b9d8fc7b2f","modified":1463018493000},{"_id":"themes/apollo/source/scss/_partial/header.scss","hash":"153bde88bf8ffeae4ffd813d8cc694dd83d33d94","modified":1463018493000},{"_id":"themes/apollo/source/scss/_partial/home-post-list.scss","hash":"6b5c59f3d2295944f934aee2c1156012a3306d5d","modified":1463018493000},{"_id":"themes/apollo/source/scss/_partial/mq.scss","hash":"b5eb0fb35fb275cbb6452b5d98702d461af3e6d5","modified":1463018493000},{"_id":"themes/apollo/source/scss/_partial/normalize.scss","hash":"fd0b27bed6f103ea95b08f698ea663ff576dbcf1","modified":1463018493000},{"_id":"themes/apollo/source/scss/_partial/post.scss","hash":"aec29b69af865249617624e1ee849792fd524cf9","modified":1463018493000},{"_id":"themes/apollo/.git/logs/refs/heads/master","hash":"375e6224e94f13642dbbf8acd87e76115843bb38","modified":1463018493000},{"_id":"themes/apollo/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1463018493000},{"_id":"themes/apollo/.git/objects/pack/pack-a3c5f54d9929af8ef65524e94b653e6ebb9881f6.pack","hash":"6812af3042b0400fed86574ced7bb36fe40b6d1c","modified":1463018493000},{"_id":"themes/apollo/.git/logs/refs/remotes/origin/HEAD","hash":"375e6224e94f13642dbbf8acd87e76115843bb38","modified":1463018493000},{"_id":"public/favicon.png","hash":"a9cdcb22d1e74d5480323e19d1983de5a6873b8c","modified":1463018498312},{"_id":"public/scss/apollo.scss","hash":"a3153dfedbaff08c20930b2bde95f2db49f6d518","modified":1463018498312},{"_id":"public/css/apollo.css","hash":"9a5ff2fbb383beb4451b98d2c516f10590e30ca0","modified":1463018498313},{"_id":"source/_posts/Makefile","hash":"476585b6761a994051c96729b7bc9d7805c15dec","modified":1463018779000},{"_id":"source/_posts/2011/12/5/Hello world!.rst","hash":"a706e70ae4dd613012b6c6e0a741eb064bf42052","modified":1463018779000},{"_id":"source/_posts/2013/1/1/2012年终总结.rst","hash":"902c78bea9c69be1f36219878d9219eaaaa199ca","modified":1463018779000},{"_id":"source/_posts/2013/10/21/使用PhantomJS进行网页截图.rst","hash":"b913b9a9bbdf972fcb63783d9e7ad8eb8f826da3","modified":1463018779000},{"_id":"source/_posts/2013/12/1/debian7安装fcitx输入法.rst","hash":"6d80345313624e4a6487bb2349de3c7b86a447bf","modified":1463018779000},{"_id":"source/_posts/2013/12/1/debian7安装无线网卡驱动.rst","hash":"13d86ce2d38a6d574cd56edbbe1ebbfaac6cc37e","modified":1463018779000},{"_id":"source/_posts/2013/2/23/程序员应该如何免费使用印象笔记离线android版.rst","hash":"fb86571ab1387b36a07f01214135592010583f0d","modified":1463018779000},{"_id":"source/_posts/2013/4/8/jQuery发送POST请求.rst","hash":"849f39e9df2048d6ff8fb4855b299131dbb0df56","modified":1463018779000},{"_id":"source/_posts/2013/7/18/XPath和CSS选择器.rst","hash":"b977bae312e87c2d4b7283d7ef0717f540f7528f","modified":1463018779000},{"_id":"source/_posts/2012/10/2/MySQL远程登录.rst","hash":"f08ba719101dbdf5b1f10922ebf5086a63c1ed49","modified":1463018779000},{"_id":"source/_posts/2012/10/31/累.rst","hash":"5ac42825b2ec012e35ffe5582f655f4f1af72897","modified":1463018779000},{"_id":"source/_posts/2012/3/12/ubuntu 10.04 安装阿里旺旺.rst","hash":"9538e1e82bf15fbcdd9053de99aee0ee807fa77a","modified":1463018779000},{"_id":"source/_posts/2012/10/9/Ubuntu安装MySQL-python.rst","hash":"84bb41e1cea390bd458acb703d03a8cacbe78d78","modified":1463018779000},{"_id":"source/_posts/2012/3/2/记录生活，记录人生.rst","hash":"397fcb4214e37e263f9a17d33b3d75aceb4c5439","modified":1463018779000},{"_id":"source/_posts/2012/3/24/Ubuntu下修改Mysql默认编码.rst","hash":"0a5ae65b74378de473e30d00a68fd740fa4867a5","modified":1463018779000},{"_id":"source/_posts/2012/3/26/Linux VPS SSH出国.rst","hash":"d33bf27e91ae7e279f38b73791987509e1954f93","modified":1463018779000},{"_id":"source/_posts/2012/3/26/Ubuntu10.04安装语言岛智能记单词.rst","hash":"77b0d9abd6309f5118779cec276c78770eb8bcc0","modified":1463018779000},{"_id":"source/_posts/2012/3/26/用Python Pip安装uWsgi.rst","hash":"4e479a9b695208e062f5e4450c6c07b6e54308d1","modified":1463018779000},{"_id":"source/_posts/2012/3/3/ubuntu 10.04 乱码总动员.rst","hash":"e1a9351bc5e36a01d9b83ecd86dbe8a49a1ec93f","modified":1463018779000},{"_id":"source/_posts/2012/3/30/禁止Google搜索结果跳转的chrome插件.rst","hash":"34dd3102d4fb9c8239e8f54a4d134902bd577841","modified":1463018779000},{"_id":"source/_posts/2012/3/31/爱饭否，爱生活.rst","hash":"bbd79dd254713f18fd97350dea70e0871f7b67c2","modified":1463018779000},{"_id":"source/_posts/2012/3/4/Ubuntu 10.04 通过DVD iso镜像源安装软件.rst","hash":"cf9ac4ef9b556de4c7a2a41ced13fbc3275b461e","modified":1463018779000},{"_id":"source/_posts/2012/3/4/使用Dropbox同步Linux配置文件.rst","hash":"6ca5df0b0797958aab76b0ae86bd7444129c0eed","modified":1463018779000},{"_id":"source/_posts/2012/3/5/Unix高手的10个习惯.rst","hash":"c5131ea571916bba1cad89debdf54491e5e6a931","modified":1463018779000},{"_id":"source/_posts/2012/3/6/Ubuntu 去优酷、奇艺广告.rst","hash":"134e03e7c0d2d19743c1443b08e2f56f7d7f322f","modified":1463018779000},{"_id":"source/_posts/2012/3/8/使用sqlalchemy遇到的一个问题.rst","hash":"0686026bdf0486b2fb9c1c448a3739f4623b3784","modified":1463018779000},{"_id":"source/_posts/2012/4/6/怀念阿桑.rst","hash":"ea5f8ab85835a8602eeac45046048c036d5bdd94","modified":1463018779000},{"_id":"source/_posts/2012/4/10/Debian VPS安装php-fpm.rst","hash":"d1cd0b68074a236c043891467c409a861f35c04b","modified":1463018779000},{"_id":"source/_posts/2012/5/20/wordpress好难用啊.rst","hash":"8c9db3d36220c1847f02bd33cb5a71750fcf693a","modified":1463018779000},{"_id":"source/_posts/2012/7/16/MySQL修改密码.rst","hash":"6eca911329628e9308c7af6b80bfdf740457750e","modified":1463018779000},{"_id":"source/_posts/2012/7/31/Javascript datetime函数.rst","hash":"103b46f557b1cde6c17655211be670153a5ae79e","modified":1463018779000},{"_id":"source/_posts/2014/1/22/regexdict基于正则表达式的词典.rst","hash":"53e56b8dd5942f3dcd8b51da67fe038336a0d2f8","modified":1463018779000},{"_id":"source/_posts/2014/2/22/2013年终总结.rst","hash":"1c13f6714c201803aa72e34dd8a967bbf9ecb266","modified":1463018779000},{"_id":"source/_posts/2014/9/10/IE不支持Object.keys的解决办法.rst","hash":"d1de8903a29f3bd6f9994c2305bcdb8f51e25111","modified":1463018779000},{"_id":"source/_posts/2015/12/20/Motor的一个bug.rst","hash":"4ca5c3c1094594809c48d022c3ac4c08ccea1819","modified":1463018779000},{"_id":"source/_posts/2015/4/25/根据经纬度估算距离.rst","hash":"cec49f42fdf1fce3290b4a42bf66cacaf409c95b","modified":1463018779000},{"_id":"source/_posts/2015/3/27/怎样判断一个点在多边形内.rst","hash":"c86c5bd5a8b3e47184cd9c8a7dc01605ac536631","modified":1463018779000},{"_id":"source/_posts/2015/2/11/tornado静态文件增加header.rst","hash":"1bf7ecc569d624d0e47d91c524e63137e7c90e39","modified":1463018779000},{"_id":"source/_posts/2015/9/10/MongoDB 3.0 auth配置.rst","hash":"ad78ec8504408f496ac59489e3cb7e51ed45de86","modified":1463018779000},{"_id":"source/_posts/2015/5/20/xml转json.rst","hash":"93874765c765f5a512d3301c6004ad8d405c609b","modified":1463018779000},{"_id":"source/_posts/2015/5/22/Sphinx中文搜索.rst","hash":"13b211d4d85479e6f5bff70e98c72dd41bf8c608","modified":1463018779000},{"_id":"source/_posts/2015/5/29/Postfix邮件服务器的搭建.rst","hash":"55f01ce551586cee53404c3b8e8985bf9090277b","modified":1463018779000},{"_id":"source/_posts/2015/5/6/Mac终端使用shadowsocks代理.rst","hash":"087b515b848a95d2769408d2d44432d61a8db94e","modified":1463018779000},{"_id":"source/_posts/2016/4/10/MongoDB 3.0用户权限访问控制.rst","hash":"4bc8bf902752b8151af003e0045830aa5c211839","modified":1463018779000},{"_id":"source/_posts/2016/4/18/Javascript中如何合并两个Object.rst","hash":"7bd32c6f3f7af5710014b58c8ffc7d748b14d6aa","modified":1463018779000},{"_id":"source/_posts/2016/4/2/go语言如何使用关键字参数.rst","hash":"741ed0f6fbb3d4e0330bb10c66ec1ccc0689ba38","modified":1463018779000},{"_id":"source/_posts/2016/4/6/go语言创建、解析JSON.md","hash":"81e682dc3cfee81f04bbe44c652ddc181cc2b5d0","modified":1463106475000},{"_id":"source/_posts/2016/4/19/Swift语言学习笔记.rst","hash":"33c4f3e8e7e1b5745bb8ed5196c83b854370f4f0","modified":1463018779000},{"_id":"public/2016/05/12/2016/4/6/go语言创建、解析JSON/index.html","hash":"a888ee66bc05fefd5a4d5684244d1c3bb32e7ab6","modified":1463106072656},{"_id":"source/_posts/2016/5/12/test.md","hash":"80e7059898226ab06618af4897324d2aa1396a88","modified":1463019248000},{"_id":"public/2015/09/28/2016/5/12/test/index.html","hash":"ab6035c8c24002ee56d11980f7171af5224c735a","modified":1463188179166},{"_id":"public/categories/Hexo/index.html","hash":"525c04666ff8c03ecc9fc1ed7cb237c98e0231e7","modified":1463106072656},{"_id":"public/categories/Hexo/GitHub/index.html","hash":"525c04666ff8c03ecc9fc1ed7cb237c98e0231e7","modified":1463106072672},{"_id":"public/tags/Hexo/index.html","hash":"525c04666ff8c03ecc9fc1ed7cb237c98e0231e7","modified":1463106072672},{"_id":"public/tags/GitHub/index.html","hash":"525c04666ff8c03ecc9fc1ed7cb237c98e0231e7","modified":1463106072672},{"_id":"source/.DS_Store","hash":"a3f2bb8bc971a8fbd8a9f4ac7a17e7fb65c597ae","modified":1463104809000},{"_id":"source/_posts/test.md","hash":"affe9d387c4181a1e8ffc0010a200e958b844670","modified":1463108580000},{"_id":"source/_posts/2012/.DS_Store","hash":"c4a331cdfdfa92678360d66c8ea228cbd77a3f1a","modified":1463315378000},{"_id":"source/_posts/2011/12/Hello world!.md","hash":"ba6e4fc60cdb709c2e2147f5d6c6af805e1be1b7","modified":1463104994000},{"_id":"source/_posts/2012/3/Linux VPS SSH出国.md","hash":"ff7a0668f050cddac60dfbcef7e4b08f0ae233af","modified":1463188861000},{"_id":"source/_posts/2012/3/Ubuntu 10.04 通过DVD iso镜像源安装软件.md","hash":"4a5323b5c28ead79e4a47c03587079027e902dfd","modified":1463188862000},{"_id":"source/_posts/2012/3/Ubuntu 去优酷、奇艺广告.md","hash":"134e03e7c0d2d19743c1443b08e2f56f7d7f322f","modified":1463105511000},{"_id":"source/_posts/2012/3/Ubuntu10.04安装语言岛智能记单词.md","hash":"cf1b7f27f771ebb21f5f61c2016cd68df60d4939","modified":1463188867000},{"_id":"source/_posts/2012/3/Ubuntu下修改Mysql默认编码.md","hash":"81b54d65dd040faaf7647dbd6e8926387805e026","modified":1463188869000},{"_id":"source/_posts/2012/3/Unix高手的10个习惯.md","hash":"a3138bc6b1f552c7566cdc45a5400397485f28b7","modified":1463188871000},{"_id":"source/_posts/2012/3/ubuntu 10.04 乱码总动员.md","hash":"e1a9351bc5e36a01d9b83ecd86dbe8a49a1ec93f","modified":1463105817000},{"_id":"source/_posts/2012/3/ubuntu 10.04 安装阿里旺旺.md","hash":"9538e1e82bf15fbcdd9053de99aee0ee807fa77a","modified":1463105819000},{"_id":"source/_posts/2012/3/使用Dropbox同步Linux配置文件.md","hash":"7546774bec1c845168b236738874a10e588a566f","modified":1463188902000},{"_id":"source/_posts/2012/3/使用sqlalchemy遇到的一个问题.md","hash":"d714244439ccb9a9c75b24979fa8ce0203806023","modified":1463188904000},{"_id":"source/_posts/2012/3/爱饭否，爱生活.md","hash":"255616cd3fb665c1e7f07f09dd005169d81eca05","modified":1463188991000},{"_id":"source/_posts/2012/3/用Python Pip安装uWsgi.md","hash":"4e479a9b695208e062f5e4450c6c07b6e54308d1","modified":1463105835000},{"_id":"source/_posts/2012/3/禁止Google搜索结果跳转的chrome插件.md","hash":"34dd3102d4fb9c8239e8f54a4d134902bd577841","modified":1463105837000},{"_id":"source/_posts/2012/3/记录生活，记录人生.md","hash":"b1a9296a844928bd0657cab8ede2f6cd40d7fb1d","modified":1463189060000},{"_id":"public/2016/05/13/2012/3/用Python Pip安装uWsgi/index.html","hash":"f9a13c0d3ee29dbc66ab2a1267b0ed4f5553c30c","modified":1463106545727},{"_id":"public/2016/05/13/2012/3/爱饭否，爱生活/index.html","hash":"02dfbdd24845f0decda290c1c849d9f1632bdc45","modified":1463106545727},{"_id":"public/2016/05/13/2012/3/使用sqlalchemy遇到的一个问题/index.html","hash":"9e6277b959ba7a4ddc9b50876a9d92632947885c","modified":1463106545727},{"_id":"public/2016/05/13/2012/3/ubuntu 10.04 安装阿里旺旺/index.html","hash":"5d331414cddedb3573745bb5ed8e42d4db869feb","modified":1463106545727},{"_id":"public/2016/05/13/2012/3/ubuntu 10.04 乱码总动员/index.html","hash":"40003be5ba857310e38a96282acf1bf8e985ec62","modified":1463106545727},{"_id":"public/2016/05/13/2012/3/Ubuntu 去优酷、奇艺广告/index.html","hash":"f4501f9facfc86b3853ecc96aa8c676eec4c9656","modified":1463106545728},{"_id":"public/2016/05/13/2012/3/记录生活，记录人生/index.html","hash":"ebae8770fa1f4f7bb1dbee0d34117a561ae382e9","modified":1463188179144},{"_id":"public/2016/05/13/2012/3/禁止Google搜索结果跳转的chrome插件/index.html","hash":"3ce78e0ceb22261e131d81a9c0ffc7f8383d478d","modified":1463106545727},{"_id":"public/2016/05/12/2012/3/使用Dropbox同步Linux配置文件/index.html","hash":"d96339c6847c99384aa44ff547a659a153dffe3e","modified":1463188179165},{"_id":"public/2015/09/28/2012/3/Unix高手的10个习惯/index.html","hash":"c309881cdc404d96e6a58072b657a0a04687a35c","modified":1463188179165},{"_id":"public/2015/09/28/2012/3/Ubuntu10.04安装语言岛智能记单词/index.html","hash":"07e13ea8e067784cab1852f85c9db2a9814eecf6","modified":1463188179165},{"_id":"public/2015/09/28/2012/3/Ubuntu 10.04 通过DVD iso镜像源安装软件/index.html","hash":"0eeec17a30c38f532b5b182972c2c2ed5fa38318","modified":1463188179165},{"_id":"public/2015/09/28/2011/12/Hello world!/index.html","hash":"445a083877006ff37d0d181df284a53bd32fb1b3","modified":1463188179165},{"_id":"public/2015/09/28/2012/3/Linux VPS SSH出国/index.html","hash":"ca85e0ffab4f102b9229f18f90e0792bbefade8d","modified":1463188179165},{"_id":"public/2015/09/28/test/index.html","hash":"0ec873ea38dcdbe8df0b782edb4cefa85b8a56fb","modified":1463188179165},{"_id":"public/2015/09/28/2012/3/Ubuntu下修改Mysql默认编码/index.html","hash":"557a6583ce071f89b436991f91ba8ccf4617ab51","modified":1463188179165},{"_id":"public/categories/Linux/index.html","hash":"112e35a509bb38c0ec7a08af5b5f670913c1a02b","modified":1463188179166},{"_id":"public/categories/C/index.html","hash":"e236d7c9996597922f0add542c8c5bd00f29e353","modified":1463106072672},{"_id":"public/categories/C/Unix/index.html","hash":"e236d7c9996597922f0add542c8c5bd00f29e353","modified":1463106072672},{"_id":"public/page/2/index.html","hash":"d436478b87d337f1313b40a3123f611cf24b35ad","modified":1463188179166},{"_id":"public/tags/Linux/index.html","hash":"3d8ede163edbc168b36ca74108ed3838a139ddfa","modified":1463106072679},{"_id":"public/tags/SSH/index.html","hash":"2fcd6d442d436143c452a16cb3b82319276b3e2b","modified":1463106072679},{"_id":"public/tags/翻墙/index.html","hash":"2fcd6d442d436143c452a16cb3b82319276b3e2b","modified":1463106072680},{"_id":"public/tags/C语言/index.html","hash":"e236d7c9996597922f0add542c8c5bd00f29e353","modified":1463106072680},{"_id":"public/tags/Dennis-Ritchie/index.html","hash":"e236d7c9996597922f0add542c8c5bd00f29e353","modified":1463106072680},{"_id":"public/tags/Ubuntu/index.html","hash":"2fc0650de7bfdcaa8a1b4358b6ee9d6464cee932","modified":1463106072681},{"_id":"public/tags/ISO镜像源/index.html","hash":"f7e12acdef2d321e52213be1755bde73dff8048d","modified":1463106072681},{"_id":"public/tags/背单词/index.html","hash":"c6751e8ae899decb0f38bbeb31e1217c96c4e0dd","modified":1463106072681},{"_id":"public/tags/语言岛/index.html","hash":"c6751e8ae899decb0f38bbeb31e1217c96c4e0dd","modified":1463106072681},{"_id":"public/tags/编码/index.html","hash":"1819587fd159d9e7db3eec0d097177bb14f95741","modified":1463106072681},{"_id":"public/tags/Unix/index.html","hash":"045d82be44f5a251ca1b884f1875e7d9471a2b46","modified":1463106072681},{"_id":"public/tags/MySQL/index.html","hash":"76ae3ac7e174c07356ea45bc1317a7cc1e11ca24","modified":1463188179166},{"_id":"public/2016/06/06/2016/4/6/go语言创建、解析JSON/index.html","hash":"e9c26b4c5a28867ab508182669d5b28bd277651a","modified":1463188179139},{"_id":"public/categories/Go/index.html","hash":"7fc75f016f55baacff20a60cf0a4fcfd7654b779","modified":1463106482304},{"_id":"public/tags/Go/index.html","hash":"7fc75f016f55baacff20a60cf0a4fcfd7654b779","modified":1463106482304},{"_id":"public/tags/Json/index.html","hash":"7fc75f016f55baacff20a60cf0a4fcfd7654b779","modified":1463106482304},{"_id":"public/2015/09/28/hello-world/index.html","hash":"594476c3b25862eb9059d65e5a205a7fe5e4212a","modified":1463188179166},{"_id":"public/tags/Hello/index.html","hash":"764b8f5eb9e2b1a8137bf1508b530c0073cba14e","modified":1463106545730},{"_id":"source/_posts/2012/10/MySQL远程登录.md","hash":"deedcadc374b86f38ec69078fa8f896406b40143","modified":1463108516000},{"_id":"source/_posts/2012/10/累.md","hash":"3071af12e081741c7941d34a43c130910a92d5ef","modified":1463108606000},{"_id":"source/_posts/2012/4/Debian VPS安装php-fpm.md","hash":"3073e05210c735b387d6b3a4295e66093c7d8bc6","modified":1463106967000},{"_id":"source/_posts/2012/4/怀念阿桑.md","hash":"0f0938f73057e9d7c4f755ae6f96ff8b19de48e4","modified":1463107128000},{"_id":"source/_posts/2012/7/Javascript datetime函数.rst","hash":"c6f7a958d24ebf1557db5a99ddff4b6ffbe588d5","modified":1463107269000},{"_id":"source/_posts/2012/7/MySQL修改密码.rst","hash":"83ce1794592d1d71853e02044593d5477c777a42","modified":1463107745000},{"_id":"public/2016/05/13/2012/4/怀念阿桑/index.html","hash":"0747c47111f6abe3e820c9f3db5b721e271265ce","modified":1463188179165},{"_id":"public/2012/10/31/2012/10/累/index.html","hash":"7f508169d0fcbac330eef33d67062fa91faca34b","modified":1463188179168},{"_id":"public/2012/04/10/2012/4/Debian VPS安装php-fpm/index.html","hash":"52727852c3997fe06183251b9e296a12485f37b2","modified":1463188179168},{"_id":"public/2012/10/28/2012/10/MySQL远程登录/index.html","hash":"c5d114d2f48c5563ce6d64527713d7f3de8b0f3e","modified":1463188179168},{"_id":"public/categories/MySQL/index.html","hash":"7f08cf719314bf85b42c807f45cb568cf2149893","modified":1463188179168},{"_id":"public/categories/随想/index.html","hash":"8739d9b14b3fc680c7162a0a9e43926a89d1c1b5","modified":1463188179168},{"_id":"public/page/3/index.html","hash":"7d7c4b87a984bf9140dc731767b13169f07ad485","modified":1463188179168},{"_id":"public/tags/远程登录/index.html","hash":"7f08cf719314bf85b42c807f45cb568cf2149893","modified":1463188179168},{"_id":"public/tags/随想/index.html","hash":"8739d9b14b3fc680c7162a0a9e43926a89d1c1b5","modified":1463188179169},{"_id":"public/tags/感悟/index.html","hash":"8739d9b14b3fc680c7162a0a9e43926a89d1c1b5","modified":1463188179169},{"_id":"public/tags/Debian/index.html","hash":"ec99ec6bf46b8599c577ee4e1f0b048a15327467","modified":1463188179169},{"_id":"public/tags/VPS/index.html","hash":"ec99ec6bf46b8599c577ee4e1f0b048a15327467","modified":1463188179169},{"_id":"public/tags/php-fpm/index.html","hash":"ec99ec6bf46b8599c577ee4e1f0b048a15327467","modified":1463188179169},{"_id":"source/_posts/Postfix邮件服务器的搭建.rst","hash":"55f01ce551586cee53404c3b8e8985bf9090277b","modified":1463316893000},{"_id":"source/_posts/2012/3/.DS_Store","hash":"6b1edbd010e33ebfcfc4769b5b03e0f667d27cfb","modified":1463189157000},{"_id":"source/_posts/2012/7/MySQL修改密码.md","hash":"83ce1794592d1d71853e02044593d5477c777a42","modified":1463189239000},{"_id":"source/_posts/2012/7/Javascript datetime函数.md","hash":"c6f7a958d24ebf1557db5a99ddff4b6ffbe588d5","modified":1463107269000},{"_id":"source/_posts/2015/2/tornado静态文件增加header.md","hash":"481ced13878e27052ed4a403688a447c5cae1cbe","modified":1463316152000},{"_id":"source/_posts/2015/12/Motor的一个bug.rst","hash":"757af41e0cbd944b8d06f7a675ca26740f54ed6d","modified":1463317155000},{"_id":"source/_posts/2015/5/Mac终端使用shadowsocks代理.md","hash":"543e1f360d8eb380da3cbdbdbd6e3255a2c4d583","modified":1463316627000},{"_id":"source/_posts/2015/4/根据经纬度估算距离.rst","hash":"971d6dc493b4397426ba35051eef4e1ee22695d2","modified":1463316477000},{"_id":"source/_posts/2015/3/怎样判断一个点在多边形内.md","hash":"77e8a5cde33a6fb259625634a7f205f7985c0f87","modified":1463316358000},{"_id":"source/_posts/2015/5/Sphinx中文搜索.md","hash":"72c7f5f4f56b3ff831bdc8e3e2ce6c266908a27e","modified":1463316879000},{"_id":"source/_posts/2015/5/xml转json.md","hash":"67bfb9633bf9a79e6b968d6260ead8fccfb1ba0c","modified":1465526652000},{"_id":"source/_posts/2014/2/2013年终总结.md","hash":"fb63a6da341a749a14948dc5c05ea81421301326","modified":1463315869000},{"_id":"source/_posts/2014/9/IE不支持Object.keys的解决办法.md","hash":"494aba54ff38ced9051141fa5d8ef1c6bb3256f5","modified":1463315986000},{"_id":"source/_posts/2014/1/regexdict基于正则表达式的词典.md","hash":"85c574aa23853e855498b5067b1b9227149a49c7","modified":1463315772000},{"_id":"source/_posts/2013/12/debian7安装fcitx输入法.rst","hash":"8f9fedd149f634272001f5772aadbbda0299d29f","modified":1463190103000},{"_id":"source/_posts/2013/10/使用PhantomJS进行网页截图.rst","hash":"2dd2f7126b3453f358ccea377183373c7cbffedd","modified":1463189957000},{"_id":"source/_posts/2013/1/2012年终总结.rst","hash":"38e38d77c56225ef9ca65aba81937235bf440b57","modified":1463189361000},{"_id":"source/_posts/2013/12/debian7安装无线网卡驱动.rst","hash":"5986d4327646e912dbd07067ea98983460926043","modified":1463190997000},{"_id":"source/_posts/2013/2/程序员应该如何免费使用印象笔记离线android版.rst","hash":"da5280b37109655302518c944b5ea9c24e5d2749","modified":1463189470000},{"_id":"source/_posts/2013/7/XPath和CSS选择器.rst","hash":"0f36fa523a3fe6e1a7a9db03a8fb4028a4a14de0","modified":1463189687000},{"_id":"source/_posts/2016/4/Javascript中如何合并两个Object.md","hash":"d18848a0c61647f57cdcf6a7bbdc9c99df742770","modified":1465527418000},{"_id":"source/_posts/2016/4/MongoDB 3.0用户权限访问控制.md","hash":"962a25431b1da49ecac3d2a65a769a72e72e29f1","modified":1465527315000},{"_id":"source/_posts/2016/4/go语言创建、解析JSON.md","hash":"99be0b02822807a6cff2366afc6b86dccb341959","modified":1465527541000},{"_id":"source/_posts/2016/4/Swift语言学习笔记.md","hash":"0c2b43f4dca712965367ebcee831e0da9dd8a60f","modified":1465696341000},{"_id":"source/_posts/2016/4/go语言如何使用关键字参数.md","hash":"77540dbfaaeb373f35008688f124f1e7fb135d54","modified":1465527065000}],"Category":[{"name":"Hexo","_id":"cio3nw6u50002wcbjn6cc59xn"},{"name":"GitHub","parent":"cio3nw6u50002wcbjn6cc59xn","_id":"cio3nw6u60004wcbjn0z2mg56"},{"name":"Linux","_id":"cio53kukv0008kcbjzek2m6lw"},{"name":"C","_id":"cio53kul3000dkcbj5a6l0y29"},{"name":"Unix","parent":"cio53kul3000dkcbj5a6l0y29","_id":"cio53kulf000nkcbj726hc5cn"},{"name":"Go","_id":"cio53tmqu0001pqbj3fc4pr7o"},{"name":"MySQL","_id":"cio6ggodw0003yqbj6cjxnxms"},{"name":"随想","_id":"cio6ggoe30007yqbjnn3qnm9c"},{"name":"Python","_id":"cio6gt44w00093mbjpxbun2t8"},{"name":"杂乱","_id":"cio6gxcw8000h3mbjkwa8t53h"},{"name":"Javascript","_id":"cio6h38n0000o3mbj14efzzi2"},{"name":"感悟","_id":"cio8kkj4e00143mi41ryztlqi"},{"name":"tornado","_id":"cio8kmq0b001f3mi4lut55fn1"},{"name":"python","_id":"cio8knlgs001m3mi46tdeg3ve"},{"name":"go","_id":"cio8kp0xb001q3mi45kc739io"},{"name":"python","parent":"cio8kp0xb001q3mi45kc739io","_id":"cio8kp0xc001s3mi4pwuquluu"},{"name":"shadowsocks","_id":"cio8l3vni00213mi4wnigvoux"},{"name":"MongoDB","_id":"cip9548yk000bc5bjagpgw0wn"},{"name":"Swift","_id":"cip959m2i000nc5bjc82m8jwl"}],"Data":[],"Page":[],"Post":[{"title":"Hello World","date":"2015-09-28T12:29:48.000Z","comments":1,"_content":"\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2015-09-28 20:29:48\ncomments: true\ntags:\n    - Hello\n---\n\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2016-05-13T02:28:57.000Z","_id":"cio3nd2le00004zbjculqipyf","layout":"post","photos":[],"link":"","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n"},{"title":"test","date":"2015-09-28T12:29:48.000Z","comments":1,"description":"hello, hexo, test test","_content":"","source":"_posts/test.md","raw":"---\ntitle: test\ndate: 2015-09-28 20:29:48\ncomments: true\ntags:\n    - Hexo\n    - GitHub\ncategories:\n    - Hexo\n    - GitHub\ndescription: \n    hello, hexo, test\n    test\n---\n","slug":"test","published":1,"updated":"2016-05-15T12:58:53.000Z","_id":"cio53ku4p0000kcbj6v8coppi","layout":"post","photos":[],"link":"","content":"","excerpt":"","more":""},{"title":"Linux VPS SSH出国","date":"2012-03-25T16:00:00.000Z","comments":1,"_content":"\n\n在服务器上建一个username的ssh帐号执行：\n\n``` bash\nuseradd -s /bin/false username \n```\n\n将用户的shell设置成/bin/false，这样用户就无法与系统进行交互。\n\n设置密码，执行：\n``` bash\npasswd username \n```\n\n试试在客户机ssh终端里面输入\n``` bash\nssh -qTfnN -D 7070 username@remote_server\n```\n\n然后在浏览器的代理服务器中，socks代理中添加：localhost 7070,其它为空。\n\n``` bash\nSSH Options \n\nAll the added options are for a ssh  session that’s used for tunneling.\n\n- -q :- be very quite, we are  acting only as a tunnel.\n- -T :- Do not allocate a pseudo tty, we are  only acting a tunnel.\n- -f :- move the ssh process to background, as  we don’t want to interact with this ssh session directly.\n- -N :- Do  not execute remote command.\n- -n :- redirect standard input to  /dev/null.\n\nIn addition on a slow line you can gain performance by  enabling compression with the -C option. \n```\n\n搭配Chrome插件Proxy SwitchySharp使用更方便，musca桌面不支持，好可怜。。。\n\nPS: Windows下可以使用mytunnel，此乃居家旅行杀人越货必备良品。\n","source":"_posts/2012/3/Linux VPS SSH出国.md","raw":"---\ntitle: Linux VPS SSH出国\ndate: 2012-03-26 00:00:00\ncomments: true\ntags:\n    - Linux\n    - SSH\n    - 翻墙\ncategories:\n    - Linux\n---\n\n\n在服务器上建一个username的ssh帐号执行：\n\n``` bash\nuseradd -s /bin/false username \n```\n\n将用户的shell设置成/bin/false，这样用户就无法与系统进行交互。\n\n设置密码，执行：\n``` bash\npasswd username \n```\n\n试试在客户机ssh终端里面输入\n``` bash\nssh -qTfnN -D 7070 username@remote_server\n```\n\n然后在浏览器的代理服务器中，socks代理中添加：localhost 7070,其它为空。\n\n``` bash\nSSH Options \n\nAll the added options are for a ssh  session that’s used for tunneling.\n\n- -q :- be very quite, we are  acting only as a tunnel.\n- -T :- Do not allocate a pseudo tty, we are  only acting a tunnel.\n- -f :- move the ssh process to background, as  we don’t want to interact with this ssh session directly.\n- -N :- Do  not execute remote command.\n- -n :- redirect standard input to  /dev/null.\n\nIn addition on a slow line you can gain performance by  enabling compression with the -C option. \n```\n\n搭配Chrome插件Proxy SwitchySharp使用更方便，musca桌面不支持，好可怜。。。\n\nPS: Windows下可以使用mytunnel，此乃居家旅行杀人越货必备良品。\n","slug":"2012/3/Linux VPS SSH出国","published":1,"updated":"2016-05-14T01:21:01.000Z","_id":"cio53kukh0005kcbjoqdo27gi","layout":"post","photos":[],"link":"","content":"<p>在服务器上建一个username的ssh帐号执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useradd <span class=\"_\">-s</span> /bin/<span class=\"literal\">false</span> username</span><br></pre></td></tr></table></figure>\n<p>将用户的shell设置成/bin/false，这样用户就无法与系统进行交互。</p>\n<p>设置密码，执行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passwd username</span><br></pre></td></tr></table></figure></p>\n<p>试试在客户机ssh终端里面输入<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -qTfnN -D 7070 username@remote_server</span><br></pre></td></tr></table></figure></p>\n<p>然后在浏览器的代理服务器中，socks代理中添加：localhost 7070,其它为空。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SSH Options </span><br><span class=\"line\"></span><br><span class=\"line\">All the added options are <span class=\"keyword\">for</span> a ssh  session that’s used <span class=\"keyword\">for</span> tunneling.</span><br><span class=\"line\"></span><br><span class=\"line\">- -q :- be very quite, we are  acting only as a tunnel.</span><br><span class=\"line\">- -T :- Do not allocate a pseudo tty, we are  only acting a tunnel.</span><br><span class=\"line\">- <span class=\"_\">-f</span> :- move the ssh process to background, as  we don’t want to interact with this ssh session directly.</span><br><span class=\"line\">- -N :- Do  not execute remote command.</span><br><span class=\"line\">- -n :- redirect standard input to  /dev/null.</span><br><span class=\"line\"></span><br><span class=\"line\">In addition on a slow line you can gain performance by  enabling compression with the -C option.</span><br></pre></td></tr></table></figure>\n<p>搭配Chrome插件Proxy SwitchySharp使用更方便，musca桌面不支持，好可怜。。。</p>\n<p>PS: Windows下可以使用mytunnel，此乃居家旅行杀人越货必备良品。</p>\n","excerpt":"","more":"<p>在服务器上建一个username的ssh帐号执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useradd <span class=\"_\">-s</span> /bin/<span class=\"literal\">false</span> username</span><br></pre></td></tr></table></figure>\n<p>将用户的shell设置成/bin/false，这样用户就无法与系统进行交互。</p>\n<p>设置密码，执行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passwd username</span><br></pre></td></tr></table></figure></p>\n<p>试试在客户机ssh终端里面输入<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -qTfnN -D 7070 username@remote_server</span><br></pre></td></tr></table></figure></p>\n<p>然后在浏览器的代理服务器中，socks代理中添加：localhost 7070,其它为空。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SSH Options </span><br><span class=\"line\"></span><br><span class=\"line\">All the added options are <span class=\"keyword\">for</span> a ssh  session that’s used <span class=\"keyword\">for</span> tunneling.</span><br><span class=\"line\"></span><br><span class=\"line\">- -q :- be very quite, we are  acting only as a tunnel.</span><br><span class=\"line\">- -T :- Do not allocate a pseudo tty, we are  only acting a tunnel.</span><br><span class=\"line\">- <span class=\"_\">-f</span> :- move the ssh process to background, as  we don’t want to interact with this ssh session directly.</span><br><span class=\"line\">- -N :- Do  not execute remote command.</span><br><span class=\"line\">- -n :- redirect standard input to  /dev/null.</span><br><span class=\"line\"></span><br><span class=\"line\">In addition on a slow line you can gain performance by  enabling compression with the -C option.</span><br></pre></td></tr></table></figure>\n<p>搭配Chrome插件Proxy SwitchySharp使用更方便，musca桌面不支持，好可怜。。。</p>\n<p>PS: Windows下可以使用mytunnel，此乃居家旅行杀人越货必备良品。</p>\n"},{"title":"Hello, world!","date":"2015-09-28T12:29:48.000Z","updated":"2015-09-28T12:29:49.000Z","comments":1,"description":"Hello, world!","_content":"\n每当看到“Hello World”便想起C语言和UNIX的发明者之一丹尼斯里奇（Dennis Ritchie），经典的“Hello World” tutorial 就是他发明的，他于去年10月8日去世，享年70岁，有关他的介绍请参看维基百科条目 `https://zh.wikipedia.org/zh/丹尼斯·里奇`  ，他终生未娶，一直在贝尔实验室工作，没跳过槽，非常低调却总是干大事，一如C语言，令人敬仰，在此深深缅怀一下，安息吧，Ritchie。\n","source":"_posts/2011/12/Hello world!.md","raw":"---\ntitle: Hello, world!\ndate: 2015-09-28 20:29:48\nupdated: 2015-09-28 20:29:49\ncomments: true\ntags:\n    - C语言\n    - Dennis Ritchie\n    - Unix\ncategories:\n    - C\n    - Unix\ndescription: \n    Hello, world!\n\n---\n\n每当看到“Hello World”便想起C语言和UNIX的发明者之一丹尼斯里奇（Dennis Ritchie），经典的“Hello World” tutorial 就是他发明的，他于去年10月8日去世，享年70岁，有关他的介绍请参看维基百科条目 `https://zh.wikipedia.org/zh/丹尼斯·里奇`  ，他终生未娶，一直在贝尔实验室工作，没跳过槽，非常低调却总是干大事，一如C语言，令人敬仰，在此深深缅怀一下，安息吧，Ritchie。\n","slug":"2011/12/Hello world!","published":1,"layout":"post","photos":[],"link":"","_id":"cio53kuko0006kcbjls1cjfbu","content":"<p>每当看到“Hello World”便想起C语言和UNIX的发明者之一丹尼斯里奇（Dennis Ritchie），经典的“Hello World” tutorial 就是他发明的，他于去年10月8日去世，享年70岁，有关他的介绍请参看维基百科条目 <code>https://zh.wikipedia.org/zh/丹尼斯·里奇</code>  ，他终生未娶，一直在贝尔实验室工作，没跳过槽，非常低调却总是干大事，一如C语言，令人敬仰，在此深深缅怀一下，安息吧，Ritchie。</p>\n","excerpt":"","more":"<p>每当看到“Hello World”便想起C语言和UNIX的发明者之一丹尼斯里奇（Dennis Ritchie），经典的“Hello World” tutorial 就是他发明的，他于去年10月8日去世，享年70岁，有关他的介绍请参看维基百科条目 <code>https://zh.wikipedia.org/zh/丹尼斯·里奇</code>  ，他终生未娶，一直在贝尔实验室工作，没跳过槽，非常低调却总是干大事，一如C语言，令人敬仰，在此深深缅怀一下，安息吧，Ritchie。</p>\n"},{"title":"Ubuntu 10.04 通过DVD iso镜像源安装软件","date":"2012-03-03T16:00:00.000Z","comments":1,"_content":"\n想通过DVD iso镜像更新个软件包，找了N个教程，试了N次，终于成功了。。。\n\n## 挂载iso镜像\n\n``` bash\n\n    sudo mount ./ubuntu-10.04.3-dvd-i386.iso /media/apt -o loopsudo apt-cdrom -d=/media/apt add\n\n```\n\n## 修改源列表\n\n``` bash\n\n    sudo vi /etc/apt/sources.list\n\n```\n\n## 加入以下内容：\n\n``` bash\n\n    deb file:///media/apt/ lucid main universe restricted multiverse\n    deb file:///media/apt/ stable main universe restricted multiverse\n    deb file:///media/apt/ unstable main universe restricted multiverse\n\n```\n\n## 更新软件列表 \n\n``` bash\n\n    sudo apt-get update\n\n```\n\n可以安装了，试试吧，软件包不全哦。。。\n","source":"_posts/2012/3/Ubuntu 10.04 通过DVD iso镜像源安装软件.md","raw":"---\ntitle: Ubuntu 10.04 通过DVD iso镜像源安装软件\ndate: 2012-03-04 00:00:00\ncomments: true\ntags:\n    - Ubuntu\n    - ISO镜像源\ncategories:\n    - Linux\n\n---\n\n想通过DVD iso镜像更新个软件包，找了N个教程，试了N次，终于成功了。。。\n\n## 挂载iso镜像\n\n``` bash\n\n    sudo mount ./ubuntu-10.04.3-dvd-i386.iso /media/apt -o loopsudo apt-cdrom -d=/media/apt add\n\n```\n\n## 修改源列表\n\n``` bash\n\n    sudo vi /etc/apt/sources.list\n\n```\n\n## 加入以下内容：\n\n``` bash\n\n    deb file:///media/apt/ lucid main universe restricted multiverse\n    deb file:///media/apt/ stable main universe restricted multiverse\n    deb file:///media/apt/ unstable main universe restricted multiverse\n\n```\n\n## 更新软件列表 \n\n``` bash\n\n    sudo apt-get update\n\n```\n\n可以安装了，试试吧，软件包不全哦。。。\n","slug":"2012/3/Ubuntu 10.04 通过DVD iso镜像源安装软件","published":1,"updated":"2016-05-14T01:21:02.000Z","_id":"cio53kukw0009kcbja14d28m0","layout":"post","photos":[],"link":"","content":"<p>想通过DVD iso镜像更新个软件包，找了N个教程，试了N次，终于成功了。。。</p>\n<h2 id=\"挂载iso镜像\"><a href=\"#挂载iso镜像\" class=\"headerlink\" title=\"挂载iso镜像\"></a>挂载iso镜像</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">sudo mount ./ubuntu-10.04.3-dvd-i386.iso /media/apt -o loopsudo apt-cdrom <span class=\"_\">-d</span>=/media/apt add</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改源列表\"><a href=\"#修改源列表\" class=\"headerlink\" title=\"修改源列表\"></a>修改源列表</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">sudo vi /etc/apt/sources.list</span><br></pre></td></tr></table></figure>\n<h2 id=\"加入以下内容：\"><a href=\"#加入以下内容：\" class=\"headerlink\" title=\"加入以下内容：\"></a>加入以下内容：</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">deb file:///media/apt/ lucid main universe restricted multiverse</span><br><span class=\"line\">deb file:///media/apt/ stable main universe restricted multiverse</span><br><span class=\"line\">deb file:///media/apt/ unstable main universe restricted multiverse</span><br></pre></td></tr></table></figure>\n<h2 id=\"更新软件列表\"><a href=\"#更新软件列表\" class=\"headerlink\" title=\"更新软件列表\"></a>更新软件列表</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n<p>可以安装了，试试吧，软件包不全哦。。。</p>\n","excerpt":"","more":"<p>想通过DVD iso镜像更新个软件包，找了N个教程，试了N次，终于成功了。。。</p>\n<h2 id=\"挂载iso镜像\"><a href=\"#挂载iso镜像\" class=\"headerlink\" title=\"挂载iso镜像\"></a>挂载iso镜像</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">sudo mount ./ubuntu-10.04.3-dvd-i386.iso /media/apt -o loopsudo apt-cdrom <span class=\"_\">-d</span>=/media/apt add</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改源列表\"><a href=\"#修改源列表\" class=\"headerlink\" title=\"修改源列表\"></a>修改源列表</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">sudo vi /etc/apt/sources.list</span><br></pre></td></tr></table></figure>\n<h2 id=\"加入以下内容：\"><a href=\"#加入以下内容：\" class=\"headerlink\" title=\"加入以下内容：\"></a>加入以下内容：</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">deb file:///media/apt/ lucid main universe restricted multiverse</span><br><span class=\"line\">deb file:///media/apt/ stable main universe restricted multiverse</span><br><span class=\"line\">deb file:///media/apt/ unstable main universe restricted multiverse</span><br></pre></td></tr></table></figure>\n<h2 id=\"更新软件列表\"><a href=\"#更新软件列表\" class=\"headerlink\" title=\"更新软件列表\"></a>更新软件列表</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n<p>可以安装了，试试吧，软件包不全哦。。。</p>\n"},{"title":"Ubuntu10.04安装语言岛智能记单词","date":"2012-03-25T16:00:00.000Z","comments":1,"_content":"\n安装了语言岛智能记单词，不过运行不了，原来缺一个库。。。\n\n``` bash\n\nsudo apt-get install libX11-xcb\n\n```\n","source":"_posts/2012/3/Ubuntu10.04安装语言岛智能记单词.md","raw":"---\ntitle: Ubuntu10.04安装语言岛智能记单词\ndate: 2012-03-26 00:00:00\ncomments: true\ntags:\n    - Ubuntu\n    - 背单词\n    - 语言岛\ncategories:\n    - Linux\n\n---\n\n安装了语言岛智能记单词，不过运行不了，原来缺一个库。。。\n\n``` bash\n\nsudo apt-get install libX11-xcb\n\n```\n","slug":"2012/3/Ubuntu10.04安装语言岛智能记单词","published":1,"updated":"2016-05-14T01:21:07.000Z","_id":"cio53kul1000ckcbj3hhcuvur","layout":"post","photos":[],"link":"","content":"<p>安装了语言岛智能记单词，不过运行不了，原来缺一个库。。。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">sudo apt-get install libX11-xcb</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>安装了语言岛智能记单词，不过运行不了，原来缺一个库。。。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">sudo apt-get install libX11-xcb</span><br></pre></td></tr></table></figure>\n"},{"title":"Ubuntu下修改Mysql默认编码","date":"2012-03-23T16:00:00.000Z","comments":1,"_content":"\nMySQL的默认编码是Latin1，不支持中文，在用Python框架进行WEB开发的时候，经常遇到乱码的问题。最好的解决方法就是统一使用UTF-8编码。操作步骤如下：\n\n## 中止MySQL服务\n\n``` bash\nsudo /etc/init.d/mysql stop\n\n```\n\n## 修改配置文件my.cnf（/etc/mysql/my.cnf 或者/etc/my.cnf)\n\n在[client]和[mysqld]下面加上一句default-character-set=utf8，保存并关闭\n\n## 启动MySQL服务\n\n``` bash\n\n    sudo /etc/init.d/mysql start）\n\n```\n    \n## 检查\n\n    用mysql -u root -p命令进入数据库系统，用SHOW VARIABLES LIKE ‘character_set_%’;命令查看字符集。\n","source":"_posts/2012/3/Ubuntu下修改Mysql默认编码.md","raw":"---\ntitle: Ubuntu下修改Mysql默认编码\ndate: 2012-03-24 00:00:00\ncomments: true\ntags:\n    - Ubuntu\n    - MySQL\n    - 编码\ncategories:\n    - Linux\n\n---\n\nMySQL的默认编码是Latin1，不支持中文，在用Python框架进行WEB开发的时候，经常遇到乱码的问题。最好的解决方法就是统一使用UTF-8编码。操作步骤如下：\n\n## 中止MySQL服务\n\n``` bash\nsudo /etc/init.d/mysql stop\n\n```\n\n## 修改配置文件my.cnf（/etc/mysql/my.cnf 或者/etc/my.cnf)\n\n在[client]和[mysqld]下面加上一句default-character-set=utf8，保存并关闭\n\n## 启动MySQL服务\n\n``` bash\n\n    sudo /etc/init.d/mysql start）\n\n```\n    \n## 检查\n\n    用mysql -u root -p命令进入数据库系统，用SHOW VARIABLES LIKE ‘character_set_%’;命令查看字符集。\n","slug":"2012/3/Ubuntu下修改Mysql默认编码","published":1,"updated":"2016-05-14T01:21:09.000Z","_id":"cio53kul4000ekcbjsfxpymfw","layout":"post","photos":[],"link":"","content":"<p>MySQL的默认编码是Latin1，不支持中文，在用Python框架进行WEB开发的时候，经常遇到乱码的问题。最好的解决方法就是统一使用UTF-8编码。操作步骤如下：</p>\n<h2 id=\"中止MySQL服务\"><a href=\"#中止MySQL服务\" class=\"headerlink\" title=\"中止MySQL服务\"></a>中止MySQL服务</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo /etc/init.d/mysql stop</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改配置文件my-cnf（-etc-mysql-my-cnf-或者-etc-my-cnf\"><a href=\"#修改配置文件my-cnf（-etc-mysql-my-cnf-或者-etc-my-cnf\" class=\"headerlink\" title=\"修改配置文件my.cnf（/etc/mysql/my.cnf 或者/etc/my.cnf)\"></a>修改配置文件my.cnf（/etc/mysql/my.cnf 或者/etc/my.cnf)</h2><p>在[client]和[mysqld]下面加上一句default-character-set=utf8，保存并关闭</p>\n<h2 id=\"启动MySQL服务\"><a href=\"#启动MySQL服务\" class=\"headerlink\" title=\"启动MySQL服务\"></a>启动MySQL服务</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">sudo /etc/init.d/mysql start）</span><br></pre></td></tr></table></figure>\n<h2 id=\"检查\"><a href=\"#检查\" class=\"headerlink\" title=\"检查\"></a>检查</h2><pre><code>用mysql -u root -p命令进入数据库系统，用SHOW VARIABLES LIKE ‘character_set_%’;命令查看字符集。\n</code></pre>","excerpt":"","more":"<p>MySQL的默认编码是Latin1，不支持中文，在用Python框架进行WEB开发的时候，经常遇到乱码的问题。最好的解决方法就是统一使用UTF-8编码。操作步骤如下：</p>\n<h2 id=\"中止MySQL服务\"><a href=\"#中止MySQL服务\" class=\"headerlink\" title=\"中止MySQL服务\"></a>中止MySQL服务</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo /etc/init.d/mysql stop</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改配置文件my-cnf（-etc-mysql-my-cnf-或者-etc-my-cnf\"><a href=\"#修改配置文件my-cnf（-etc-mysql-my-cnf-或者-etc-my-cnf\" class=\"headerlink\" title=\"修改配置文件my.cnf（/etc/mysql/my.cnf 或者/etc/my.cnf)\"></a>修改配置文件my.cnf（/etc/mysql/my.cnf 或者/etc/my.cnf)</h2><p>在[client]和[mysqld]下面加上一句default-character-set=utf8，保存并关闭</p>\n<h2 id=\"启动MySQL服务\"><a href=\"#启动MySQL服务\" class=\"headerlink\" title=\"启动MySQL服务\"></a>启动MySQL服务</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">sudo /etc/init.d/mysql start）</span><br></pre></td></tr></table></figure>\n<h2 id=\"检查\"><a href=\"#检查\" class=\"headerlink\" title=\"检查\"></a>检查</h2><pre><code>用mysql -u root -p命令进入数据库系统，用SHOW VARIABLES LIKE ‘character_set_%’;命令查看字符集。\n</code></pre>"},{"title":"Unix高手的10个习惯","date":"2012-03-04T16:00:00.000Z","comments":1,"_content":"\n## 在单个命令中创建目录树。\n## 更改路径；不要移动存档。\n## 将命令与控制操作符组合使用。\n## 谨慎引用变量。\n## 使用转义序列来管理较长的输入。\n## 在列表中对命令分组。\n## 在 find 之外使用 xargs 。\n## 了解何时 grep 应该执行计数——何时应该绕过。\n## 匹配输出中的某些字段，而不只是对行进行匹配。\n## 停止对 cat 使用管道。\n","source":"_posts/2012/3/Unix高手的10个习惯.md","raw":"---\ntitle: Unix高手的10个习惯\ndate: 2012-03-05 00:00:00\ncomments: true\ntags:\n    - Unix\n    - Linux\ncategories:\n    - Linux\n---\n\n## 在单个命令中创建目录树。\n## 更改路径；不要移动存档。\n## 将命令与控制操作符组合使用。\n## 谨慎引用变量。\n## 使用转义序列来管理较长的输入。\n## 在列表中对命令分组。\n## 在 find 之外使用 xargs 。\n## 了解何时 grep 应该执行计数——何时应该绕过。\n## 匹配输出中的某些字段，而不只是对行进行匹配。\n## 停止对 cat 使用管道。\n","slug":"2012/3/Unix高手的10个习惯","published":1,"updated":"2016-05-14T01:21:11.000Z","_id":"cio53kul7000gkcbjs5unrgmn","layout":"post","photos":[],"link":"","content":"<h2 id=\"在单个命令中创建目录树。\"><a href=\"#在单个命令中创建目录树。\" class=\"headerlink\" title=\"在单个命令中创建目录树。\"></a>在单个命令中创建目录树。</h2><h2 id=\"更改路径；不要移动存档。\"><a href=\"#更改路径；不要移动存档。\" class=\"headerlink\" title=\"更改路径；不要移动存档。\"></a>更改路径；不要移动存档。</h2><h2 id=\"将命令与控制操作符组合使用。\"><a href=\"#将命令与控制操作符组合使用。\" class=\"headerlink\" title=\"将命令与控制操作符组合使用。\"></a>将命令与控制操作符组合使用。</h2><h2 id=\"谨慎引用变量。\"><a href=\"#谨慎引用变量。\" class=\"headerlink\" title=\"谨慎引用变量。\"></a>谨慎引用变量。</h2><h2 id=\"使用转义序列来管理较长的输入。\"><a href=\"#使用转义序列来管理较长的输入。\" class=\"headerlink\" title=\"使用转义序列来管理较长的输入。\"></a>使用转义序列来管理较长的输入。</h2><h2 id=\"在列表中对命令分组。\"><a href=\"#在列表中对命令分组。\" class=\"headerlink\" title=\"在列表中对命令分组。\"></a>在列表中对命令分组。</h2><h2 id=\"在-find-之外使用-xargs-。\"><a href=\"#在-find-之外使用-xargs-。\" class=\"headerlink\" title=\"在 find 之外使用 xargs 。\"></a>在 find 之外使用 xargs 。</h2><h2 id=\"了解何时-grep-应该执行计数——何时应该绕过。\"><a href=\"#了解何时-grep-应该执行计数——何时应该绕过。\" class=\"headerlink\" title=\"了解何时 grep 应该执行计数——何时应该绕过。\"></a>了解何时 grep 应该执行计数——何时应该绕过。</h2><h2 id=\"匹配输出中的某些字段，而不只是对行进行匹配。\"><a href=\"#匹配输出中的某些字段，而不只是对行进行匹配。\" class=\"headerlink\" title=\"匹配输出中的某些字段，而不只是对行进行匹配。\"></a>匹配输出中的某些字段，而不只是对行进行匹配。</h2><h2 id=\"停止对-cat-使用管道。\"><a href=\"#停止对-cat-使用管道。\" class=\"headerlink\" title=\"停止对 cat 使用管道。\"></a>停止对 cat 使用管道。</h2>","excerpt":"","more":"<h2 id=\"在单个命令中创建目录树。\"><a href=\"#在单个命令中创建目录树。\" class=\"headerlink\" title=\"在单个命令中创建目录树。\"></a>在单个命令中创建目录树。</h2><h2 id=\"更改路径；不要移动存档。\"><a href=\"#更改路径；不要移动存档。\" class=\"headerlink\" title=\"更改路径；不要移动存档。\"></a>更改路径；不要移动存档。</h2><h2 id=\"将命令与控制操作符组合使用。\"><a href=\"#将命令与控制操作符组合使用。\" class=\"headerlink\" title=\"将命令与控制操作符组合使用。\"></a>将命令与控制操作符组合使用。</h2><h2 id=\"谨慎引用变量。\"><a href=\"#谨慎引用变量。\" class=\"headerlink\" title=\"谨慎引用变量。\"></a>谨慎引用变量。</h2><h2 id=\"使用转义序列来管理较长的输入。\"><a href=\"#使用转义序列来管理较长的输入。\" class=\"headerlink\" title=\"使用转义序列来管理较长的输入。\"></a>使用转义序列来管理较长的输入。</h2><h2 id=\"在列表中对命令分组。\"><a href=\"#在列表中对命令分组。\" class=\"headerlink\" title=\"在列表中对命令分组。\"></a>在列表中对命令分组。</h2><h2 id=\"在-find-之外使用-xargs-。\"><a href=\"#在-find-之外使用-xargs-。\" class=\"headerlink\" title=\"在 find 之外使用 xargs 。\"></a>在 find 之外使用 xargs 。</h2><h2 id=\"了解何时-grep-应该执行计数——何时应该绕过。\"><a href=\"#了解何时-grep-应该执行计数——何时应该绕过。\" class=\"headerlink\" title=\"了解何时 grep 应该执行计数——何时应该绕过。\"></a>了解何时 grep 应该执行计数——何时应该绕过。</h2><h2 id=\"匹配输出中的某些字段，而不只是对行进行匹配。\"><a href=\"#匹配输出中的某些字段，而不只是对行进行匹配。\" class=\"headerlink\" title=\"匹配输出中的某些字段，而不只是对行进行匹配。\"></a>匹配输出中的某些字段，而不只是对行进行匹配。</h2><h2 id=\"停止对-cat-使用管道。\"><a href=\"#停止对-cat-使用管道。\" class=\"headerlink\" title=\"停止对 cat 使用管道。\"></a>停止对 cat 使用管道。</h2>"},{"title":"使用Dropbox同步Linux配置文件","date":"2012-03-03T16:00:00.000Z","comments":1,"_content":"\n方法很简单，只需要在Dropbox 主文件夹下建一个文件夹（不要建在Public文件夹下），例如config，然后建个符号链接就行了,以后打开Dropbox就会自动同步配置文件了，Dropbox确实非常好用。\n\n## vim  \n``` bash\n    - ln -s ~/.vim  ~/Dropbox/config; \n    - ln -s ~/.vim.rc  ~/Dropbox/config\n```\n\n## 星际译王\n``` bash\n    ln -s ~/.stardict  ~/Dropbox/config\n```\n\n## KeePassX\n``` bash\n    ln -s ~/.keepassx  ~/Dropbox/config\n```\n\n## audacity\n``` bash\n    ln -s ~/.audacity-data  ~/Dropbox/config\n```\n\n## Bash\n``` bash\n    ln -s ~/.bashrc  ~/Dropbox/config ; ln -s ~/.bash_profile  ~/Dropbox/config\n```\n\n## 头像（呵呵）\n``` bash\n    ln -s ~/.face  ~/Dropbox/config\n```\n\n## Gnome桌面配置\n``` bash\n    ln -s ~/.gconf  ~/Dropbox/config\n```\n\n## Gnote笔记\n``` bash\n    ln -s ~/.gnote  ~/Dropbox/gnote\n```\n","source":"_posts/2012/3/使用Dropbox同步Linux配置文件.md","raw":"---\ntitle: 使用Dropbox同步Linux配置文件\ndate: 2012-03-04 00:00:00\ncomments: true\ntags:\n    - Dropbox\n    - Ubuntu\ncategories:\n    - Linux\n---\n\n方法很简单，只需要在Dropbox 主文件夹下建一个文件夹（不要建在Public文件夹下），例如config，然后建个符号链接就行了,以后打开Dropbox就会自动同步配置文件了，Dropbox确实非常好用。\n\n## vim  \n``` bash\n    - ln -s ~/.vim  ~/Dropbox/config; \n    - ln -s ~/.vim.rc  ~/Dropbox/config\n```\n\n## 星际译王\n``` bash\n    ln -s ~/.stardict  ~/Dropbox/config\n```\n\n## KeePassX\n``` bash\n    ln -s ~/.keepassx  ~/Dropbox/config\n```\n\n## audacity\n``` bash\n    ln -s ~/.audacity-data  ~/Dropbox/config\n```\n\n## Bash\n``` bash\n    ln -s ~/.bashrc  ~/Dropbox/config ; ln -s ~/.bash_profile  ~/Dropbox/config\n```\n\n## 头像（呵呵）\n``` bash\n    ln -s ~/.face  ~/Dropbox/config\n```\n\n## Gnome桌面配置\n``` bash\n    ln -s ~/.gconf  ~/Dropbox/config\n```\n\n## Gnote笔记\n``` bash\n    ln -s ~/.gnote  ~/Dropbox/gnote\n```\n","slug":"2012/3/使用Dropbox同步Linux配置文件","published":1,"updated":"2016-05-14T01:21:42.000Z","_id":"cio53kulh000qkcbjfzhudhkd","layout":"post","photos":[],"link":"","content":"<p>方法很简单，只需要在Dropbox 主文件夹下建一个文件夹（不要建在Public文件夹下），例如config，然后建个符号链接就行了,以后打开Dropbox就会自动同步配置文件了，Dropbox确实非常好用。</p>\n<h2 id=\"vim\"><a href=\"#vim\" class=\"headerlink\" title=\"vim\"></a>vim</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- ln <span class=\"_\">-s</span> ~/.vim  ~/Dropbox/config; </span><br><span class=\"line\">- ln <span class=\"_\">-s</span> ~/.vim.rc  ~/Dropbox/config</span><br></pre></td></tr></table></figure>\n<h2 id=\"星际译王\"><a href=\"#星际译王\" class=\"headerlink\" title=\"星际译王\"></a>星际译王</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln <span class=\"_\">-s</span> ~/.stardict  ~/Dropbox/config</span><br></pre></td></tr></table></figure>\n<h2 id=\"KeePassX\"><a href=\"#KeePassX\" class=\"headerlink\" title=\"KeePassX\"></a>KeePassX</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln <span class=\"_\">-s</span> ~/.keepassx  ~/Dropbox/config</span><br></pre></td></tr></table></figure>\n<h2 id=\"audacity\"><a href=\"#audacity\" class=\"headerlink\" title=\"audacity\"></a>audacity</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln <span class=\"_\">-s</span> ~/.audacity-data  ~/Dropbox/config</span><br></pre></td></tr></table></figure>\n<h2 id=\"Bash\"><a href=\"#Bash\" class=\"headerlink\" title=\"Bash\"></a>Bash</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln <span class=\"_\">-s</span> ~/.bashrc  ~/Dropbox/config ; ln <span class=\"_\">-s</span> ~/.bash_profile  ~/Dropbox/config</span><br></pre></td></tr></table></figure>\n<h2 id=\"头像（呵呵）\"><a href=\"#头像（呵呵）\" class=\"headerlink\" title=\"头像（呵呵）\"></a>头像（呵呵）</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln <span class=\"_\">-s</span> ~/.face  ~/Dropbox/config</span><br></pre></td></tr></table></figure>\n<h2 id=\"Gnome桌面配置\"><a href=\"#Gnome桌面配置\" class=\"headerlink\" title=\"Gnome桌面配置\"></a>Gnome桌面配置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln <span class=\"_\">-s</span> ~/.gconf  ~/Dropbox/config</span><br></pre></td></tr></table></figure>\n<h2 id=\"Gnote笔记\"><a href=\"#Gnote笔记\" class=\"headerlink\" title=\"Gnote笔记\"></a>Gnote笔记</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln <span class=\"_\">-s</span> ~/.gnote  ~/Dropbox/gnote</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>方法很简单，只需要在Dropbox 主文件夹下建一个文件夹（不要建在Public文件夹下），例如config，然后建个符号链接就行了,以后打开Dropbox就会自动同步配置文件了，Dropbox确实非常好用。</p>\n<h2 id=\"vim\"><a href=\"#vim\" class=\"headerlink\" title=\"vim\"></a>vim</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- ln <span class=\"_\">-s</span> ~/.vim  ~/Dropbox/config; </span><br><span class=\"line\">- ln <span class=\"_\">-s</span> ~/.vim.rc  ~/Dropbox/config</span><br></pre></td></tr></table></figure>\n<h2 id=\"星际译王\"><a href=\"#星际译王\" class=\"headerlink\" title=\"星际译王\"></a>星际译王</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln <span class=\"_\">-s</span> ~/.stardict  ~/Dropbox/config</span><br></pre></td></tr></table></figure>\n<h2 id=\"KeePassX\"><a href=\"#KeePassX\" class=\"headerlink\" title=\"KeePassX\"></a>KeePassX</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln <span class=\"_\">-s</span> ~/.keepassx  ~/Dropbox/config</span><br></pre></td></tr></table></figure>\n<h2 id=\"audacity\"><a href=\"#audacity\" class=\"headerlink\" title=\"audacity\"></a>audacity</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln <span class=\"_\">-s</span> ~/.audacity-data  ~/Dropbox/config</span><br></pre></td></tr></table></figure>\n<h2 id=\"Bash\"><a href=\"#Bash\" class=\"headerlink\" title=\"Bash\"></a>Bash</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln <span class=\"_\">-s</span> ~/.bashrc  ~/Dropbox/config ; ln <span class=\"_\">-s</span> ~/.bash_profile  ~/Dropbox/config</span><br></pre></td></tr></table></figure>\n<h2 id=\"头像（呵呵）\"><a href=\"#头像（呵呵）\" class=\"headerlink\" title=\"头像（呵呵）\"></a>头像（呵呵）</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln <span class=\"_\">-s</span> ~/.face  ~/Dropbox/config</span><br></pre></td></tr></table></figure>\n<h2 id=\"Gnome桌面配置\"><a href=\"#Gnome桌面配置\" class=\"headerlink\" title=\"Gnome桌面配置\"></a>Gnome桌面配置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln <span class=\"_\">-s</span> ~/.gconf  ~/Dropbox/config</span><br></pre></td></tr></table></figure>\n<h2 id=\"Gnote笔记\"><a href=\"#Gnote笔记\" class=\"headerlink\" title=\"Gnote笔记\"></a>Gnote笔记</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln <span class=\"_\">-s</span> ~/.gnote  ~/Dropbox/gnote</span><br></pre></td></tr></table></figure>\n"},{"title":"使用sqlalchemy遇到的一个问题","date":"2012-03-28T12:29:48.000Z","comments":1,"_content":"\n在使用Python WEB框架Pylons 0.9.7自带的sqlalchemy 0.5.8 创建表的时候遇到一个问题，就是如何创建MySQL的包含枚举类型的列。 经过查资料和问别人，弄明白了，分享下写法。\n\n``` python\n\n    import sqlalchemy as sa\n    from sqlalchemy import orm\n    from sqlalchemy.databases.mysql import MSEnum\n    from testapp.model import meta\n    def init_model(engine):\n        meta.Session.configure(bind=engine)\n        meta.engine = engine\n\n    test_table = sa.schema.Table('test', meta.metadata, \\\n        sa.schema.Column('id', sa.types.Integer(unsigned=True), primary_key=True), \\\n        sa.schema.Column('column2', sa.types.VARCHAR(length=255), nullable=False), \\\n        sa.schema.Column('column3', MSEnum(\"value1\", \"value2\", \"value3\")),\n    )\n\n    class Test(object):\n        pass\n    orm.mapper(Test, test_table)\n```\n\n这样就可以了，另外sqlalchemy 0.7的写法不大一样，有兴趣的同学可以看看文档。\n\n另附上sqlalchemy 0.5 support for mysql文档的地址：\n\n    [http://docs.sqlalchemy.org/en/rel_0_5/reference/dialects/mysql.html](http://docs.sqlalchemy.org/en/rel_0_5/reference/dialects/mysql.html)\n\n","source":"_posts/2012/3/使用sqlalchemy遇到的一个问题.md","raw":"---\ntitle: 使用sqlalchemy遇到的一个问题\ndate: 2012-03-28 20:29:48\ncomments: true\ntags:\n    - Python\n    - Pylons\n    - SQLAlchemy\ncategories:\n    - Python\n---\n\n在使用Python WEB框架Pylons 0.9.7自带的sqlalchemy 0.5.8 创建表的时候遇到一个问题，就是如何创建MySQL的包含枚举类型的列。 经过查资料和问别人，弄明白了，分享下写法。\n\n``` python\n\n    import sqlalchemy as sa\n    from sqlalchemy import orm\n    from sqlalchemy.databases.mysql import MSEnum\n    from testapp.model import meta\n    def init_model(engine):\n        meta.Session.configure(bind=engine)\n        meta.engine = engine\n\n    test_table = sa.schema.Table('test', meta.metadata, \\\n        sa.schema.Column('id', sa.types.Integer(unsigned=True), primary_key=True), \\\n        sa.schema.Column('column2', sa.types.VARCHAR(length=255), nullable=False), \\\n        sa.schema.Column('column3', MSEnum(\"value1\", \"value2\", \"value3\")),\n    )\n\n    class Test(object):\n        pass\n    orm.mapper(Test, test_table)\n```\n\n这样就可以了，另外sqlalchemy 0.7的写法不大一样，有兴趣的同学可以看看文档。\n\n另附上sqlalchemy 0.5 support for mysql文档的地址：\n\n    [http://docs.sqlalchemy.org/en/rel_0_5/reference/dialects/mysql.html](http://docs.sqlalchemy.org/en/rel_0_5/reference/dialects/mysql.html)\n\n","slug":"2012/3/使用sqlalchemy遇到的一个问题","published":1,"updated":"2016-05-14T01:21:44.000Z","_id":"cio53kulr000skcbjlhphtovc","layout":"post","photos":[],"link":"","content":"<p>在使用Python WEB框架Pylons 0.9.7自带的sqlalchemy 0.5.8 创建表的时候遇到一个问题，就是如何创建MySQL的包含枚举类型的列。 经过查资料和问别人，弄明白了，分享下写法。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> sqlalchemy <span class=\"keyword\">as</span> sa</span><br><span class=\"line\"><span class=\"keyword\">from</span> sqlalchemy <span class=\"keyword\">import</span> orm</span><br><span class=\"line\"><span class=\"keyword\">from</span> sqlalchemy.databases.mysql <span class=\"keyword\">import</span> MSEnum</span><br><span class=\"line\"><span class=\"keyword\">from</span> testapp.model <span class=\"keyword\">import</span> meta</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">init_model</span><span class=\"params\">(engine)</span>:</span></span><br><span class=\"line\">    meta.Session.configure(bind=engine)</span><br><span class=\"line\">    meta.engine = engine</span><br><span class=\"line\"></span><br><span class=\"line\">test_table = sa.schema.Table(<span class=\"string\">'test'</span>, meta.metadata, \\</span><br><span class=\"line\">    sa.schema.Column(<span class=\"string\">'id'</span>, sa.types.Integer(unsigned=<span class=\"keyword\">True</span>), primary_key=<span class=\"keyword\">True</span>), \\</span><br><span class=\"line\">    sa.schema.Column(<span class=\"string\">'column2'</span>, sa.types.VARCHAR(length=<span class=\"number\">255</span>), nullable=<span class=\"keyword\">False</span>), \\</span><br><span class=\"line\">    sa.schema.Column(<span class=\"string\">'column3'</span>, MSEnum(<span class=\"string\">\"value1\"</span>, <span class=\"string\">\"value2\"</span>, <span class=\"string\">\"value3\"</span>)),</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\">orm.mapper(Test, test_table)</span><br></pre></td></tr></table></figure>\n<p>这样就可以了，另外sqlalchemy 0.7的写法不大一样，有兴趣的同学可以看看文档。</p>\n<p>另附上sqlalchemy 0.5 support for mysql文档的地址：</p>\n<pre><code>[http://docs.sqlalchemy.org/en/rel_0_5/reference/dialects/mysql.html](http://docs.sqlalchemy.org/en/rel_0_5/reference/dialects/mysql.html)\n</code></pre>","excerpt":"","more":"<p>在使用Python WEB框架Pylons 0.9.7自带的sqlalchemy 0.5.8 创建表的时候遇到一个问题，就是如何创建MySQL的包含枚举类型的列。 经过查资料和问别人，弄明白了，分享下写法。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> sqlalchemy <span class=\"keyword\">as</span> sa</span><br><span class=\"line\"><span class=\"keyword\">from</span> sqlalchemy <span class=\"keyword\">import</span> orm</span><br><span class=\"line\"><span class=\"keyword\">from</span> sqlalchemy.databases.mysql <span class=\"keyword\">import</span> MSEnum</span><br><span class=\"line\"><span class=\"keyword\">from</span> testapp.model <span class=\"keyword\">import</span> meta</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">init_model</span><span class=\"params\">(engine)</span>:</span></span><br><span class=\"line\">    meta.Session.configure(bind=engine)</span><br><span class=\"line\">    meta.engine = engine</span><br><span class=\"line\"></span><br><span class=\"line\">test_table = sa.schema.Table(<span class=\"string\">'test'</span>, meta.metadata, \\</span><br><span class=\"line\">    sa.schema.Column(<span class=\"string\">'id'</span>, sa.types.Integer(unsigned=<span class=\"keyword\">True</span>), primary_key=<span class=\"keyword\">True</span>), \\</span><br><span class=\"line\">    sa.schema.Column(<span class=\"string\">'column2'</span>, sa.types.VARCHAR(length=<span class=\"number\">255</span>), nullable=<span class=\"keyword\">False</span>), \\</span><br><span class=\"line\">    sa.schema.Column(<span class=\"string\">'column3'</span>, MSEnum(<span class=\"string\">\"value1\"</span>, <span class=\"string\">\"value2\"</span>, <span class=\"string\">\"value3\"</span>)),</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\">orm.mapper(Test, test_table)</span><br></pre></td></tr></table></figure>\n<p>这样就可以了，另外sqlalchemy 0.7的写法不大一样，有兴趣的同学可以看看文档。</p>\n<p>另附上sqlalchemy 0.5 support for mysql文档的地址：</p>\n<pre><code>[http://docs.sqlalchemy.org/en/rel_0_5/reference/dialects/mysql.html](http://docs.sqlalchemy.org/en/rel_0_5/reference/dialects/mysql.html)\n</code></pre>"},{"title":"爱饭否，爱生活","date":"2012-03-30T16:00:00.000Z","comments":1,"_content":"\n- “一直以来，当他们还在为到底谁该叫做微博而争斗纠缠的时候，我常想，嗯，这其实挺好，至少只有饭否能叫做饭否，只有饭否还始终叫做饭否。饭否回归一周年，感谢你又和我做了一年朋友。”-[@地下天鹅绒]\n\n- 曲兄，今日你我兄弟二人用Google doodle琴箫合奏这曲《笑傲江湖》，它日Google被墙，这《笑傲江湖》怕也成了人间绝响了罢？ –@和菜头\n\n- ﻿鲁豫采访方滨兴校长，问如何断定一个网友是否正常。方校长说我们一般会给网友一个自由门，一个VPN，看他怎么上twitter。鲁豫问：什么是自由门，什么是VPN，什么是twitter？方校长微微一笑：恭喜你，你是正常的 –@马舸.pl\n\n- 「如果有个很漂亮的女生害羞地跟你告白，还是犹豫很久好不容易才鼓起勇气的那种，你会怎么做？」「先存下档。」\n\n- 中国古代有一位计算机科学家叫屈原，他发明了一套系统让人们可以方便地检索和替换文本。后人为了纪念他，用屈原的名字将其命名为正则表达式。(离骚：名余曰正则兮，字余曰灵均) –@shitlei\n\n- 总有一群隐身的朋友如同死人一样躺在我的好友列表里，偶尔诈诈尸，偶尔修改一下他们的墓志铭… –@梦貘\n\n- 问：栈和队列有什么区别？ 答：吃多了拉就是队列；吃多了吐就是栈。–@SegmentFault\n\n- 不以周一而悲，不以周末而喜。这就是宅。 –@13空\n\n- 那天身边一个人穿的衣服上写着“BSD”，我心想，这一定是个Unix范儿啊，如此狂热。后来仔细一看，我艹，这原来是“波司登”的缩写……–@marcher.2b\n\n- 从来都不死机的电脑就注定不是一台有性格、有情感的电脑，就注定不是一台懂沟通、懂拒绝的电脑，就注定不是一台心思细腻、敢爱敢恨的电脑。 –@地下天鹅绒\n\n- 女孩：“咱们分手吧” 男孩：“为什么？” 女孩：“Android刷机很简单，我学会了。” 男孩：“可你只会刷Android原生。” 女孩：“……” 男孩：“你不知道Android手机还可以刷WP7和iOS？” 女孩：“讨厌，不早说。” –@泛黄的流年\n","source":"_posts/2012/3/爱饭否，爱生活.md","raw":"---\ntitle: 爱饭否，爱生活\ndate: 2012-03-31 00:00:00\ncomments: true\ntags:\n    - 饭否\ncategories:\n    - 杂乱\n---\n\n- “一直以来，当他们还在为到底谁该叫做微博而争斗纠缠的时候，我常想，嗯，这其实挺好，至少只有饭否能叫做饭否，只有饭否还始终叫做饭否。饭否回归一周年，感谢你又和我做了一年朋友。”-[@地下天鹅绒]\n\n- 曲兄，今日你我兄弟二人用Google doodle琴箫合奏这曲《笑傲江湖》，它日Google被墙，这《笑傲江湖》怕也成了人间绝响了罢？ –@和菜头\n\n- ﻿鲁豫采访方滨兴校长，问如何断定一个网友是否正常。方校长说我们一般会给网友一个自由门，一个VPN，看他怎么上twitter。鲁豫问：什么是自由门，什么是VPN，什么是twitter？方校长微微一笑：恭喜你，你是正常的 –@马舸.pl\n\n- 「如果有个很漂亮的女生害羞地跟你告白，还是犹豫很久好不容易才鼓起勇气的那种，你会怎么做？」「先存下档。」\n\n- 中国古代有一位计算机科学家叫屈原，他发明了一套系统让人们可以方便地检索和替换文本。后人为了纪念他，用屈原的名字将其命名为正则表达式。(离骚：名余曰正则兮，字余曰灵均) –@shitlei\n\n- 总有一群隐身的朋友如同死人一样躺在我的好友列表里，偶尔诈诈尸，偶尔修改一下他们的墓志铭… –@梦貘\n\n- 问：栈和队列有什么区别？ 答：吃多了拉就是队列；吃多了吐就是栈。–@SegmentFault\n\n- 不以周一而悲，不以周末而喜。这就是宅。 –@13空\n\n- 那天身边一个人穿的衣服上写着“BSD”，我心想，这一定是个Unix范儿啊，如此狂热。后来仔细一看，我艹，这原来是“波司登”的缩写……–@marcher.2b\n\n- 从来都不死机的电脑就注定不是一台有性格、有情感的电脑，就注定不是一台懂沟通、懂拒绝的电脑，就注定不是一台心思细腻、敢爱敢恨的电脑。 –@地下天鹅绒\n\n- 女孩：“咱们分手吧” 男孩：“为什么？” 女孩：“Android刷机很简单，我学会了。” 男孩：“可你只会刷Android原生。” 女孩：“……” 男孩：“你不知道Android手机还可以刷WP7和iOS？” 女孩：“讨厌，不早说。” –@泛黄的流年\n","slug":"2012/3/爱饭否，爱生活","published":1,"updated":"2016-05-14T01:23:11.000Z","_id":"cio53kult000wkcbjj0mdbes2","layout":"post","photos":[],"link":"","content":"<ul>\n<li><p>“一直以来，当他们还在为到底谁该叫做微博而争斗纠缠的时候，我常想，嗯，这其实挺好，至少只有饭否能叫做饭否，只有饭否还始终叫做饭否。饭否回归一周年，感谢你又和我做了一年朋友。”-[@地下天鹅绒]</p>\n</li>\n<li><p>曲兄，今日你我兄弟二人用Google doodle琴箫合奏这曲《笑傲江湖》，它日Google被墙，这《笑傲江湖》怕也成了人间绝响了罢？ –@和菜头</p>\n</li>\n<li><p>﻿鲁豫采访方滨兴校长，问如何断定一个网友是否正常。方校长说我们一般会给网友一个自由门，一个VPN，看他怎么上twitter。鲁豫问：什么是自由门，什么是VPN，什么是twitter？方校长微微一笑：恭喜你，你是正常的 –@马舸.pl</p>\n</li>\n<li><p>「如果有个很漂亮的女生害羞地跟你告白，还是犹豫很久好不容易才鼓起勇气的那种，你会怎么做？」「先存下档。」</p>\n</li>\n<li><p>中国古代有一位计算机科学家叫屈原，他发明了一套系统让人们可以方便地检索和替换文本。后人为了纪念他，用屈原的名字将其命名为正则表达式。(离骚：名余曰正则兮，字余曰灵均) –@shitlei</p>\n</li>\n<li><p>总有一群隐身的朋友如同死人一样躺在我的好友列表里，偶尔诈诈尸，偶尔修改一下他们的墓志铭… –@梦貘</p>\n</li>\n<li><p>问：栈和队列有什么区别？ 答：吃多了拉就是队列；吃多了吐就是栈。–@SegmentFault</p>\n</li>\n<li><p>不以周一而悲，不以周末而喜。这就是宅。 –@13空</p>\n</li>\n<li><p>那天身边一个人穿的衣服上写着“BSD”，我心想，这一定是个Unix范儿啊，如此狂热。后来仔细一看，我艹，这原来是“波司登”的缩写……–@marcher.2b</p>\n</li>\n<li><p>从来都不死机的电脑就注定不是一台有性格、有情感的电脑，就注定不是一台懂沟通、懂拒绝的电脑，就注定不是一台心思细腻、敢爱敢恨的电脑。 –@地下天鹅绒</p>\n</li>\n<li><p>女孩：“咱们分手吧” 男孩：“为什么？” 女孩：“Android刷机很简单，我学会了。” 男孩：“可你只会刷Android原生。” 女孩：“……” 男孩：“你不知道Android手机还可以刷WP7和iOS？” 女孩：“讨厌，不早说。” –@泛黄的流年</p>\n</li>\n</ul>\n","excerpt":"","more":"<ul>\n<li><p>“一直以来，当他们还在为到底谁该叫做微博而争斗纠缠的时候，我常想，嗯，这其实挺好，至少只有饭否能叫做饭否，只有饭否还始终叫做饭否。饭否回归一周年，感谢你又和我做了一年朋友。”-[@地下天鹅绒]</p>\n</li>\n<li><p>曲兄，今日你我兄弟二人用Google doodle琴箫合奏这曲《笑傲江湖》，它日Google被墙，这《笑傲江湖》怕也成了人间绝响了罢？ –@和菜头</p>\n</li>\n<li><p>﻿鲁豫采访方滨兴校长，问如何断定一个网友是否正常。方校长说我们一般会给网友一个自由门，一个VPN，看他怎么上twitter。鲁豫问：什么是自由门，什么是VPN，什么是twitter？方校长微微一笑：恭喜你，你是正常的 –@马舸.pl</p>\n</li>\n<li><p>「如果有个很漂亮的女生害羞地跟你告白，还是犹豫很久好不容易才鼓起勇气的那种，你会怎么做？」「先存下档。」</p>\n</li>\n<li><p>中国古代有一位计算机科学家叫屈原，他发明了一套系统让人们可以方便地检索和替换文本。后人为了纪念他，用屈原的名字将其命名为正则表达式。(离骚：名余曰正则兮，字余曰灵均) –@shitlei</p>\n</li>\n<li><p>总有一群隐身的朋友如同死人一样躺在我的好友列表里，偶尔诈诈尸，偶尔修改一下他们的墓志铭… –@梦貘</p>\n</li>\n<li><p>问：栈和队列有什么区别？ 答：吃多了拉就是队列；吃多了吐就是栈。–@SegmentFault</p>\n</li>\n<li><p>不以周一而悲，不以周末而喜。这就是宅。 –@13空</p>\n</li>\n<li><p>那天身边一个人穿的衣服上写着“BSD”，我心想，这一定是个Unix范儿啊，如此狂热。后来仔细一看，我艹，这原来是“波司登”的缩写……–@marcher.2b</p>\n</li>\n<li><p>从来都不死机的电脑就注定不是一台有性格、有情感的电脑，就注定不是一台懂沟通、懂拒绝的电脑，就注定不是一台心思细腻、敢爱敢恨的电脑。 –@地下天鹅绒</p>\n</li>\n<li><p>女孩：“咱们分手吧” 男孩：“为什么？” 女孩：“Android刷机很简单，我学会了。” 男孩：“可你只会刷Android原生。” 女孩：“……” 男孩：“你不知道Android手机还可以刷WP7和iOS？” 女孩：“讨厌，不早说。” –@泛黄的流年</p>\n</li>\n</ul>\n"},{"title":"记录生活，记录人生","date":"2015-09-28T12:29:48.000Z","comments":1,"_content":"\n很久之前就写博客了，也用过许多博客托管服务，什么网易、新浪、QQ空间、博客大巴、SAE之类的，不过没有一个坚持着一直用的，总是写着写着就不写了，之后不了了之，几时想起又去找博客托管空间。就这样没有坚持写博客，过了好久，直到那次看了阮一峰的博客后，我才又产生了重新开始写博客的想法，真的觉得我需要这样一个管理自己的知识、记忆、想法的地方，而且也可以和更多的人分享、交流想法。我们会死很久，文字会活很久，不是吗？写点东西吧，像写日记那样记录一下人生，到老的时候能知道自己一辈子都做了些什么。出发吧！\n","source":"_posts/2012/3/记录生活，记录人生.md","raw":"---\ntitle: 记录生活，记录人生 \ndate: 2015-09-28 20:29:48\ncomments: true\ntags:\n    - 随想\ncategories:\n    - 随想\n---\n\n很久之前就写博客了，也用过许多博客托管服务，什么网易、新浪、QQ空间、博客大巴、SAE之类的，不过没有一个坚持着一直用的，总是写着写着就不写了，之后不了了之，几时想起又去找博客托管空间。就这样没有坚持写博客，过了好久，直到那次看了阮一峰的博客后，我才又产生了重新开始写博客的想法，真的觉得我需要这样一个管理自己的知识、记忆、想法的地方，而且也可以和更多的人分享、交流想法。我们会死很久，文字会活很久，不是吗？写点东西吧，像写日记那样记录一下人生，到老的时候能知道自己一辈子都做了些什么。出发吧！\n","slug":"2012/3/记录生活，记录人生","published":1,"updated":"2016-05-14T01:24:20.000Z","_id":"cio53kuly0013kcbj8u0t6uio","layout":"post","photos":[],"link":"","content":"<p>很久之前就写博客了，也用过许多博客托管服务，什么网易、新浪、QQ空间、博客大巴、SAE之类的，不过没有一个坚持着一直用的，总是写着写着就不写了，之后不了了之，几时想起又去找博客托管空间。就这样没有坚持写博客，过了好久，直到那次看了阮一峰的博客后，我才又产生了重新开始写博客的想法，真的觉得我需要这样一个管理自己的知识、记忆、想法的地方，而且也可以和更多的人分享、交流想法。我们会死很久，文字会活很久，不是吗？写点东西吧，像写日记那样记录一下人生，到老的时候能知道自己一辈子都做了些什么。出发吧！</p>\n","excerpt":"","more":"<p>很久之前就写博客了，也用过许多博客托管服务，什么网易、新浪、QQ空间、博客大巴、SAE之类的，不过没有一个坚持着一直用的，总是写着写着就不写了，之后不了了之，几时想起又去找博客托管空间。就这样没有坚持写博客，过了好久，直到那次看了阮一峰的博客后，我才又产生了重新开始写博客的想法，真的觉得我需要这样一个管理自己的知识、记忆、想法的地方，而且也可以和更多的人分享、交流想法。我们会死很久，文字会活很久，不是吗？写点东西吧，像写日记那样记录一下人生，到老的时候能知道自己一辈子都做了些什么。出发吧！</p>\n"},{"title":"MySQL远程登录","date":"2012-10-27T16:00:00.000Z","comments":1,"_content":"\n默认情况下，MySQL只允许本地登录，远程登录需要修改/etc/mysql/my.cnf文件，并赋予用户权限。\n\n## 注释掉bind-address\n\n``` bash\n    bind-address=127.0.0.1 ==> #bind-address=127.0.0.1\n```\n\n## 授权用户远程登录:\n\n``` bash\n    mysql> GRANT ALL PRIVILEGES ON *.* TO root@\"%\" IDENTIFIED BY \"passwd\";\n    mysql> flush privileges;\n```\n","source":"_posts/2012/10/MySQL远程登录.md","raw":"---\ntitle: MySQL远程登录\ndate: 2012-10-28 00:00:00\ncomments: true\ntags:\n    - MySQL\n    - 远程登录\ncategories:\n    - MySQL\n---\n\n默认情况下，MySQL只允许本地登录，远程登录需要修改/etc/mysql/my.cnf文件，并赋予用户权限。\n\n## 注释掉bind-address\n\n``` bash\n    bind-address=127.0.0.1 ==> #bind-address=127.0.0.1\n```\n\n## 授权用户远程登录:\n\n``` bash\n    mysql> GRANT ALL PRIVILEGES ON *.* TO root@\"%\" IDENTIFIED BY \"passwd\";\n    mysql> flush privileges;\n```\n","slug":"2012/10/MySQL远程登录","published":1,"updated":"2016-05-13T03:01:56.000Z","layout":"post","photos":[],"link":"","_id":"cio6ggode0000yqbje1sagx90","content":"<p>默认情况下，MySQL只允许本地登录，远程登录需要修改/etc/mysql/my.cnf文件，并赋予用户权限。</p>\n<h2 id=\"注释掉bind-address\"><a href=\"#注释掉bind-address\" class=\"headerlink\" title=\"注释掉bind-address\"></a>注释掉bind-address</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">bind</span>-address=127.0.0.1 ==&gt; <span class=\"comment\">#bind-address=127.0.0.1</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"授权用户远程登录\"><a href=\"#授权用户远程登录\" class=\"headerlink\" title=\"授权用户远程登录:\"></a>授权用户远程登录:</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; GRANT ALL PRIVILEGES ON *.* TO root@<span class=\"string\">\"%\"</span> IDENTIFIED BY <span class=\"string\">\"passwd\"</span>;</span><br><span class=\"line\">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>默认情况下，MySQL只允许本地登录，远程登录需要修改/etc/mysql/my.cnf文件，并赋予用户权限。</p>\n<h2 id=\"注释掉bind-address\"><a href=\"#注释掉bind-address\" class=\"headerlink\" title=\"注释掉bind-address\"></a>注释掉bind-address</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">bind</span>-address=127.0.0.1 ==&gt; <span class=\"comment\">#bind-address=127.0.0.1</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"授权用户远程登录\"><a href=\"#授权用户远程登录\" class=\"headerlink\" title=\"授权用户远程登录:\"></a>授权用户远程登录:</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; GRANT ALL PRIVILEGES ON *.* TO root@<span class=\"string\">\"%\"</span> IDENTIFIED BY <span class=\"string\">\"passwd\"</span>;</span><br><span class=\"line\">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure>\n"},{"title":"累","date":"2012-10-30T16:00:00.000Z","comments":1,"_content":"\n最近好累，估计之后很长一段时间内都得靠听Beyond度日了，还有打cs，或许只有这些经典的事物会让我暂时忘记一些事情。我始终不是一个善于表达的人，与人打交道总感觉好累，好不习惯，或许只有机器能理解我，我也只能理解机器。什么时候可以隐居山林，远离世俗、喧嚣，或者去周游世界，看看世界各地的风景。\n","source":"_posts/2012/10/累.md","raw":"---\ntitle: 累\ndate: 2012-10-31 00:00:00\ncomments: true\ntags:\n    - 随想\n    - 感悟\ncategories:\n    - 随想\n---\n\n最近好累，估计之后很长一段时间内都得靠听Beyond度日了，还有打cs，或许只有这些经典的事物会让我暂时忘记一些事情。我始终不是一个善于表达的人，与人打交道总感觉好累，好不习惯，或许只有机器能理解我，我也只能理解机器。什么时候可以隐居山林，远离世俗、喧嚣，或者去周游世界，看看世界各地的风景。\n","slug":"2012/10/累","published":1,"updated":"2016-05-13T03:03:26.000Z","layout":"post","photos":[],"link":"","_id":"cio6ggodg0001yqbjvokqpuav","content":"<p>最近好累，估计之后很长一段时间内都得靠听Beyond度日了，还有打cs，或许只有这些经典的事物会让我暂时忘记一些事情。我始终不是一个善于表达的人，与人打交道总感觉好累，好不习惯，或许只有机器能理解我，我也只能理解机器。什么时候可以隐居山林，远离世俗、喧嚣，或者去周游世界，看看世界各地的风景。</p>\n","excerpt":"","more":"<p>最近好累，估计之后很长一段时间内都得靠听Beyond度日了，还有打cs，或许只有这些经典的事物会让我暂时忘记一些事情。我始终不是一个善于表达的人，与人打交道总感觉好累，好不习惯，或许只有机器能理解我，我也只能理解机器。什么时候可以隐居山林，远离世俗、喧嚣，或者去周游世界，看看世界各地的风景。</p>\n"},{"title":"Debian VPS安装php-fpm","date":"2012-04-10T14:22:48.000Z","comments":1,"_content":"\nDebian源里面没有php-fpm，安个php都得编译，偏偏VPS内存还不够，编译的时候提示内存不够，不分配了，openvz的VPS不是内存用光直接死机吗？什么时候能提前检测了？坑爹啊。\n\n搜了一下，找到解决方案了，就是用dotdeb.org的软件源。\n\n## 修改软件源\n\n``` bash\nsudo vi /etc/apt/sources.list\n```\n\n把之前的软件源注释掉，加上下面这个：\n\n``` bash\ndeb http://packages.dotdeb.org stable all\n```\n\n## 更新apt key\n\n``` bash\nwget http://www.dotdeb.org/dotdeb.gpg\n\ncat dotdeb.gpg | sudo apt-key add -\n\n```\n\n## 更新apt源\n\n``` bash\nsudo apt-get update\n```\n\n## 安装php, nginx\n\n``` bash\nsudo apt-get install php5-common php5-cli php5-fpm php5-mysql\n```\n\n用这个源安装mysql老是出错，最后没办法，又把源改回去了，然后再安mysql，折腾啊。\n","source":"_posts/2012/4/Debian VPS安装php-fpm.md","raw":"---\ntitle: Debian VPS安装php-fpm\ndate: 2012-04-10 22:22:48\ncomments: true\ntags:\n    - Debian\n    - VPS\n    - php-fpm\ncategories:\n    - Linux\n---\n\nDebian源里面没有php-fpm，安个php都得编译，偏偏VPS内存还不够，编译的时候提示内存不够，不分配了，openvz的VPS不是内存用光直接死机吗？什么时候能提前检测了？坑爹啊。\n\n搜了一下，找到解决方案了，就是用dotdeb.org的软件源。\n\n## 修改软件源\n\n``` bash\nsudo vi /etc/apt/sources.list\n```\n\n把之前的软件源注释掉，加上下面这个：\n\n``` bash\ndeb http://packages.dotdeb.org stable all\n```\n\n## 更新apt key\n\n``` bash\nwget http://www.dotdeb.org/dotdeb.gpg\n\ncat dotdeb.gpg | sudo apt-key add -\n\n```\n\n## 更新apt源\n\n``` bash\nsudo apt-get update\n```\n\n## 安装php, nginx\n\n``` bash\nsudo apt-get install php5-common php5-cli php5-fpm php5-mysql\n```\n\n用这个源安装mysql老是出错，最后没办法，又把源改回去了，然后再安mysql，折腾啊。\n","slug":"2012/4/Debian VPS安装php-fpm","published":1,"updated":"2016-05-13T02:36:07.000Z","layout":"post","photos":[],"link":"","_id":"cio6ggodx0004yqbjun4pz615","content":"<p>Debian源里面没有php-fpm，安个php都得编译，偏偏VPS内存还不够，编译的时候提示内存不够，不分配了，openvz的VPS不是内存用光直接死机吗？什么时候能提前检测了？坑爹啊。</p>\n<p>搜了一下，找到解决方案了，就是用dotdeb.org的软件源。</p>\n<h2 id=\"修改软件源\"><a href=\"#修改软件源\" class=\"headerlink\" title=\"修改软件源\"></a>修改软件源</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/apt/sources.list</span><br></pre></td></tr></table></figure>\n<p>把之前的软件源注释掉，加上下面这个：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb http://packages.dotdeb.org stable all</span><br></pre></td></tr></table></figure>\n<h2 id=\"更新apt-key\"><a href=\"#更新apt-key\" class=\"headerlink\" title=\"更新apt key\"></a>更新apt key</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://www.dotdeb.org/dotdeb.gpg</span><br><span class=\"line\"></span><br><span class=\"line\">cat dotdeb.gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure>\n<h2 id=\"更新apt源\"><a href=\"#更新apt源\" class=\"headerlink\" title=\"更新apt源\"></a>更新apt源</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装php-nginx\"><a href=\"#安装php-nginx\" class=\"headerlink\" title=\"安装php, nginx\"></a>安装php, nginx</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install php5-common php5-cli php5-fpm php5-mysql</span><br></pre></td></tr></table></figure>\n<p>用这个源安装mysql老是出错，最后没办法，又把源改回去了，然后再安mysql，折腾啊。</p>\n","excerpt":"","more":"<p>Debian源里面没有php-fpm，安个php都得编译，偏偏VPS内存还不够，编译的时候提示内存不够，不分配了，openvz的VPS不是内存用光直接死机吗？什么时候能提前检测了？坑爹啊。</p>\n<p>搜了一下，找到解决方案了，就是用dotdeb.org的软件源。</p>\n<h2 id=\"修改软件源\"><a href=\"#修改软件源\" class=\"headerlink\" title=\"修改软件源\"></a>修改软件源</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/apt/sources.list</span><br></pre></td></tr></table></figure>\n<p>把之前的软件源注释掉，加上下面这个：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb http://packages.dotdeb.org stable all</span><br></pre></td></tr></table></figure>\n<h2 id=\"更新apt-key\"><a href=\"#更新apt-key\" class=\"headerlink\" title=\"更新apt key\"></a>更新apt key</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://www.dotdeb.org/dotdeb.gpg</span><br><span class=\"line\"></span><br><span class=\"line\">cat dotdeb.gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure>\n<h2 id=\"更新apt源\"><a href=\"#更新apt源\" class=\"headerlink\" title=\"更新apt源\"></a>更新apt源</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装php-nginx\"><a href=\"#安装php-nginx\" class=\"headerlink\" title=\"安装php, nginx\"></a>安装php, nginx</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install php5-common php5-cli php5-fpm php5-mysql</span><br></pre></td></tr></table></figure>\n<p>用这个源安装mysql老是出错，最后没办法，又把源改回去了，然后再安mysql，折腾啊。</p>\n"},{"public":"yes","summary":null,"_content":"title: 怀念阿桑\ndate: 2012-04-06 00:00:00\ncomments: true\ntags:\n    - 阿桑\n    - 一直很安静\ncategories:\n    - 歌词\n---\n\n\n在阿桑（维基百科-阿桑）去世之前我没有听过她的歌，我也不知道有这么个人，直到她去世后才从网上看到新闻。然后就搜了她唱的几首歌听，包括叶子、一直很安静、寂寞在唱歌等，觉得很好听，尤其是一直很安静这首，经常单曲循环，甚至还截取了一段作手机铃声。从网上下载到了她的两张专辑，很少听过这种整张专辑的歌都很好听的专辑，听了很多遍，不知不觉地喜欢上了她的歌声，然后开始找她的资料，开始了解她，去看她的新浪博客，明知不会再有更新却还是订阅了。某天看到她博客的订阅更新，吓了我一跳，去看了看，原来是她的弟弟找回了博客密码，写了一篇文章。三年了，今天又是一个桑心的日子，又去她的博客看了看，有十几条新的留言，大都是怀念阿桑的话。再听一遍你的《一直很安静》吧。\n\n\n## 一直很安静\n\n[ti:一直很安静] \n[ar:阿桑] \n[al:寂寞在唱歌] \n歌名：一直很安静\n作词：方文山 作曲：蔡如岳\n歌手：阿桑\n\n空荡的街景\n想找个人放感情\n做这种决定\n是寂寞与我为邻\n我们的爱情\n像你路过的风景\n一直在进行\n脚步却从来不会为我而停\n给你的爱一直很安静\n来交换你偶尔给的关心\n明明是三个人的电影\n我却始终不能有姓名\n\n你说爱像云\n要自在飘浮才美丽\n我终于相信\n分手的理由有时候很动听\n给你的爱一直很安静\n来交换你偶尔给的关心\n明明是三个人的电影\n我却始终不能有姓名\n给你的爱一直很安静\n我从一开始就下定决心\n以为自己要的是曾经\n却发现爱一定要有回音\n\n给你的爱一直很安静\n来交换你偶尔给的关心\n明明是三个人的电影\n我却始终不能有姓名 \n给你的爱一直很安静\n除了泪在我的脸上任性\n原来缘分是用来说明\n你突然不爱我这件事情\n","source":"_posts/2012/4/怀念阿桑.md","raw":"public: yes\nsummary: \n---\ntitle: 怀念阿桑\ndate: 2012-04-06 00:00:00\ncomments: true\ntags:\n    - 阿桑\n    - 一直很安静\ncategories:\n    - 歌词\n---\n\n\n在阿桑（维基百科-阿桑）去世之前我没有听过她的歌，我也不知道有这么个人，直到她去世后才从网上看到新闻。然后就搜了她唱的几首歌听，包括叶子、一直很安静、寂寞在唱歌等，觉得很好听，尤其是一直很安静这首，经常单曲循环，甚至还截取了一段作手机铃声。从网上下载到了她的两张专辑，很少听过这种整张专辑的歌都很好听的专辑，听了很多遍，不知不觉地喜欢上了她的歌声，然后开始找她的资料，开始了解她，去看她的新浪博客，明知不会再有更新却还是订阅了。某天看到她博客的订阅更新，吓了我一跳，去看了看，原来是她的弟弟找回了博客密码，写了一篇文章。三年了，今天又是一个桑心的日子，又去她的博客看了看，有十几条新的留言，大都是怀念阿桑的话。再听一遍你的《一直很安静》吧。\n\n\n## 一直很安静\n\n[ti:一直很安静] \n[ar:阿桑] \n[al:寂寞在唱歌] \n歌名：一直很安静\n作词：方文山 作曲：蔡如岳\n歌手：阿桑\n\n空荡的街景\n想找个人放感情\n做这种决定\n是寂寞与我为邻\n我们的爱情\n像你路过的风景\n一直在进行\n脚步却从来不会为我而停\n给你的爱一直很安静\n来交换你偶尔给的关心\n明明是三个人的电影\n我却始终不能有姓名\n\n你说爱像云\n要自在飘浮才美丽\n我终于相信\n分手的理由有时候很动听\n给你的爱一直很安静\n来交换你偶尔给的关心\n明明是三个人的电影\n我却始终不能有姓名\n给你的爱一直很安静\n我从一开始就下定决心\n以为自己要的是曾经\n却发现爱一定要有回音\n\n给你的爱一直很安静\n来交换你偶尔给的关心\n明明是三个人的电影\n我却始终不能有姓名 \n给你的爱一直很安静\n除了泪在我的脸上任性\n原来缘分是用来说明\n你突然不爱我这件事情\n","slug":"2012/4/怀念阿桑","published":1,"date":"2016-05-13T02:38:48.000Z","updated":"2016-05-13T02:38:48.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cio6ggoe00005yqbj5p8bf79f","content":"<p>title: 怀念阿桑<br>date: 2012-04-06 00:00:00<br>comments: true<br>tags:</p>\n<pre><code>- 阿桑\n- 一直很安静\n</code></pre><p>categories:</p>\n<pre><code>- 歌词\n</code></pre><hr>\n<p>在阿桑（维基百科-阿桑）去世之前我没有听过她的歌，我也不知道有这么个人，直到她去世后才从网上看到新闻。然后就搜了她唱的几首歌听，包括叶子、一直很安静、寂寞在唱歌等，觉得很好听，尤其是一直很安静这首，经常单曲循环，甚至还截取了一段作手机铃声。从网上下载到了她的两张专辑，很少听过这种整张专辑的歌都很好听的专辑，听了很多遍，不知不觉地喜欢上了她的歌声，然后开始找她的资料，开始了解她，去看她的新浪博客，明知不会再有更新却还是订阅了。某天看到她博客的订阅更新，吓了我一跳，去看了看，原来是她的弟弟找回了博客密码，写了一篇文章。三年了，今天又是一个桑心的日子，又去她的博客看了看，有十几条新的留言，大都是怀念阿桑的话。再听一遍你的《一直很安静》吧。</p>\n<h2 id=\"一直很安静\"><a href=\"#一直很安静\" class=\"headerlink\" title=\"一直很安静\"></a>一直很安静</h2><p>[ti:一直很安静]<br>[ar:阿桑]<br>[al:寂寞在唱歌]<br>歌名：一直很安静<br>作词：方文山 作曲：蔡如岳<br>歌手：阿桑</p>\n<p>空荡的街景<br>想找个人放感情<br>做这种决定<br>是寂寞与我为邻<br>我们的爱情<br>像你路过的风景<br>一直在进行<br>脚步却从来不会为我而停<br>给你的爱一直很安静<br>来交换你偶尔给的关心<br>明明是三个人的电影<br>我却始终不能有姓名</p>\n<p>你说爱像云<br>要自在飘浮才美丽<br>我终于相信<br>分手的理由有时候很动听<br>给你的爱一直很安静<br>来交换你偶尔给的关心<br>明明是三个人的电影<br>我却始终不能有姓名<br>给你的爱一直很安静<br>我从一开始就下定决心<br>以为自己要的是曾经<br>却发现爱一定要有回音</p>\n<p>给你的爱一直很安静<br>来交换你偶尔给的关心<br>明明是三个人的电影<br>我却始终不能有姓名<br>给你的爱一直很安静<br>除了泪在我的脸上任性<br>原来缘分是用来说明<br>你突然不爱我这件事情</p>\n","excerpt":"","more":"<p>title: 怀念阿桑<br>date: 2012-04-06 00:00:00<br>comments: true<br>tags:</p>\n<pre><code>- 阿桑\n- 一直很安静\n</code></pre><p>categories:</p>\n<pre><code>- 歌词\n</code></pre><hr>\n<p>在阿桑（维基百科-阿桑）去世之前我没有听过她的歌，我也不知道有这么个人，直到她去世后才从网上看到新闻。然后就搜了她唱的几首歌听，包括叶子、一直很安静、寂寞在唱歌等，觉得很好听，尤其是一直很安静这首，经常单曲循环，甚至还截取了一段作手机铃声。从网上下载到了她的两张专辑，很少听过这种整张专辑的歌都很好听的专辑，听了很多遍，不知不觉地喜欢上了她的歌声，然后开始找她的资料，开始了解她，去看她的新浪博客，明知不会再有更新却还是订阅了。某天看到她博客的订阅更新，吓了我一跳，去看了看，原来是她的弟弟找回了博客密码，写了一篇文章。三年了，今天又是一个桑心的日子，又去她的博客看了看，有十几条新的留言，大都是怀念阿桑的话。再听一遍你的《一直很安静》吧。</p>\n<h2 id=\"一直很安静\"><a href=\"#一直很安静\" class=\"headerlink\" title=\"一直很安静\"></a>一直很安静</h2><p>[ti:一直很安静]<br>[ar:阿桑]<br>[al:寂寞在唱歌]<br>歌名：一直很安静<br>作词：方文山 作曲：蔡如岳<br>歌手：阿桑</p>\n<p>空荡的街景<br>想找个人放感情<br>做这种决定<br>是寂寞与我为邻<br>我们的爱情<br>像你路过的风景<br>一直在进行<br>脚步却从来不会为我而停<br>给你的爱一直很安静<br>来交换你偶尔给的关心<br>明明是三个人的电影<br>我却始终不能有姓名</p>\n<p>你说爱像云<br>要自在飘浮才美丽<br>我终于相信<br>分手的理由有时候很动听<br>给你的爱一直很安静<br>来交换你偶尔给的关心<br>明明是三个人的电影<br>我却始终不能有姓名<br>给你的爱一直很安静<br>我从一开始就下定决心<br>以为自己要的是曾经<br>却发现爱一定要有回音</p>\n<p>给你的爱一直很安静<br>来交换你偶尔给的关心<br>明明是三个人的电影<br>我却始终不能有姓名<br>给你的爱一直很安静<br>除了泪在我的脸上任性<br>原来缘分是用来说明<br>你突然不爱我这件事情</p>\n"},{"title":"Javascript日期时间函数","date":"2015-09-28T12:29:48.000Z","comments":1,"_content":"\n## 获取当前日期时间信息\n\n``` javascript\n\n    function date(){\n        var now = new Date(); //当前日期\n        var year = now.getYear(); //年份后两位\n        var fullYear = now.getFullYear();//获取完整的年份(4位,1970-????)\n        now.getMonth();      // 获取当前月份(0-11,0代表1月)\n        now.getDate();       // 获取当前日(1-31)\n        now.getDay();        // 获取当前星期X(0-6,0代表星期天)\n        now.getTime();       // 获取当前时间(从1970.1.1开始的毫秒数)\n        now.getHours();      // 获取当前小时数(0-23)\n        now.getMinutes();    // 获取当前分钟数(0-59)\n        now.getSeconds();    // 获取当前秒数(0-59)\n        now.getMilliseconds();                  //获取当前毫秒数(0-999)\n        now.toLocaleDateString();               //获取当前日期\n        var mytime=now.toLocaleTimeString();    //获取当前时间\n        now.toLocaleString( );                  //获取日期与时间\n    }\n\n```\n\n## 获得日期、星期与时间：\n\n``` javascript\n\n    new Date().toLocaleString()+'星期'+'日一二三四五六'.charAt(new Date().getDay());\n\n```\n\n## 构造日期\n\n``` javascript\n\n    var date = new Date(2012, 6, 31); // 2012-07-31\n\n```\n","source":"_posts/2012/7/Javascript datetime函数.md","raw":"---\ntitle: Javascript日期时间函数\ndate: 2015-09-28 20:29:48\ncomments: true\ntags:\n    - Javascript\n    - 日期时间\ncategories:\n    - Javascript\n---\n\n## 获取当前日期时间信息\n\n``` javascript\n\n    function date(){\n        var now = new Date(); //当前日期\n        var year = now.getYear(); //年份后两位\n        var fullYear = now.getFullYear();//获取完整的年份(4位,1970-????)\n        now.getMonth();      // 获取当前月份(0-11,0代表1月)\n        now.getDate();       // 获取当前日(1-31)\n        now.getDay();        // 获取当前星期X(0-6,0代表星期天)\n        now.getTime();       // 获取当前时间(从1970.1.1开始的毫秒数)\n        now.getHours();      // 获取当前小时数(0-23)\n        now.getMinutes();    // 获取当前分钟数(0-59)\n        now.getSeconds();    // 获取当前秒数(0-59)\n        now.getMilliseconds();                  //获取当前毫秒数(0-999)\n        now.toLocaleDateString();               //获取当前日期\n        var mytime=now.toLocaleTimeString();    //获取当前时间\n        now.toLocaleString( );                  //获取日期与时间\n    }\n\n```\n\n## 获得日期、星期与时间：\n\n``` javascript\n\n    new Date().toLocaleString()+'星期'+'日一二三四五六'.charAt(new Date().getDay());\n\n```\n\n## 构造日期\n\n``` javascript\n\n    var date = new Date(2012, 6, 31); // 2012-07-31\n\n```\n","slug":"2012/7/Javascript datetime函数","published":1,"updated":"2016-05-13T02:41:09.000Z","_id":"cio6h38my000m3mbjrqma2qfo","layout":"post","photos":[],"link":"","content":"<h2 id=\"获取当前日期时间信息\"><a href=\"#获取当前日期时间信息\" class=\"headerlink\" title=\"获取当前日期时间信息\"></a>获取当前日期时间信息</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">date</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> now = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(); <span class=\"comment\">//当前日期</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> year = now.getYear(); <span class=\"comment\">//年份后两位</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> fullYear = now.getFullYear();<span class=\"comment\">//获取完整的年份(4位,1970-????)</span></span><br><span class=\"line\">    now.getMonth();      <span class=\"comment\">// 获取当前月份(0-11,0代表1月)</span></span><br><span class=\"line\">    now.getDate();       <span class=\"comment\">// 获取当前日(1-31)</span></span><br><span class=\"line\">    now.getDay();        <span class=\"comment\">// 获取当前星期X(0-6,0代表星期天)</span></span><br><span class=\"line\">    now.getTime();       <span class=\"comment\">// 获取当前时间(从1970.1.1开始的毫秒数)</span></span><br><span class=\"line\">    now.getHours();      <span class=\"comment\">// 获取当前小时数(0-23)</span></span><br><span class=\"line\">    now.getMinutes();    <span class=\"comment\">// 获取当前分钟数(0-59)</span></span><br><span class=\"line\">    now.getSeconds();    <span class=\"comment\">// 获取当前秒数(0-59)</span></span><br><span class=\"line\">    now.getMilliseconds();                  <span class=\"comment\">//获取当前毫秒数(0-999)</span></span><br><span class=\"line\">    now.toLocaleDateString();               <span class=\"comment\">//获取当前日期</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> mytime=now.toLocaleTimeString();    <span class=\"comment\">//获取当前时间</span></span><br><span class=\"line\">    now.toLocaleString( );                  <span class=\"comment\">//获取日期与时间</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"获得日期、星期与时间：\"><a href=\"#获得日期、星期与时间：\" class=\"headerlink\" title=\"获得日期、星期与时间：\"></a>获得日期、星期与时间：</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().toLocaleString()+<span class=\"string\">'星期'</span>+<span class=\"string\">'日一二三四五六'</span>.charAt(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getDay());</span><br></pre></td></tr></table></figure>\n<h2 id=\"构造日期\"><a href=\"#构造日期\" class=\"headerlink\" title=\"构造日期\"></a>构造日期</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"number\">2012</span>, <span class=\"number\">6</span>, <span class=\"number\">31</span>); <span class=\"comment\">// 2012-07-31</span></span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"获取当前日期时间信息\"><a href=\"#获取当前日期时间信息\" class=\"headerlink\" title=\"获取当前日期时间信息\"></a>获取当前日期时间信息</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">date</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> now = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(); <span class=\"comment\">//当前日期</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> year = now.getYear(); <span class=\"comment\">//年份后两位</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> fullYear = now.getFullYear();<span class=\"comment\">//获取完整的年份(4位,1970-????)</span></span><br><span class=\"line\">    now.getMonth();      <span class=\"comment\">// 获取当前月份(0-11,0代表1月)</span></span><br><span class=\"line\">    now.getDate();       <span class=\"comment\">// 获取当前日(1-31)</span></span><br><span class=\"line\">    now.getDay();        <span class=\"comment\">// 获取当前星期X(0-6,0代表星期天)</span></span><br><span class=\"line\">    now.getTime();       <span class=\"comment\">// 获取当前时间(从1970.1.1开始的毫秒数)</span></span><br><span class=\"line\">    now.getHours();      <span class=\"comment\">// 获取当前小时数(0-23)</span></span><br><span class=\"line\">    now.getMinutes();    <span class=\"comment\">// 获取当前分钟数(0-59)</span></span><br><span class=\"line\">    now.getSeconds();    <span class=\"comment\">// 获取当前秒数(0-59)</span></span><br><span class=\"line\">    now.getMilliseconds();                  <span class=\"comment\">//获取当前毫秒数(0-999)</span></span><br><span class=\"line\">    now.toLocaleDateString();               <span class=\"comment\">//获取当前日期</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> mytime=now.toLocaleTimeString();    <span class=\"comment\">//获取当前时间</span></span><br><span class=\"line\">    now.toLocaleString( );                  <span class=\"comment\">//获取日期与时间</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"获得日期、星期与时间：\"><a href=\"#获得日期、星期与时间：\" class=\"headerlink\" title=\"获得日期、星期与时间：\"></a>获得日期、星期与时间：</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().toLocaleString()+<span class=\"string\">'星期'</span>+<span class=\"string\">'日一二三四五六'</span>.charAt(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getDay());</span><br></pre></td></tr></table></figure>\n<h2 id=\"构造日期\"><a href=\"#构造日期\" class=\"headerlink\" title=\"构造日期\"></a>构造日期</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"number\">2012</span>, <span class=\"number\">6</span>, <span class=\"number\">31</span>); <span class=\"comment\">// 2012-07-31</span></span><br></pre></td></tr></table></figure>\n"},{"title":"MySQL修改密码","date":"2012-07-15T16:00:00.000Z","comments":1,"_content":"\n## 安装时修改\n\n``` bash\n    mysqladmin -u root password new_password\n```\n\n## MySQL中修改\n\n``` bash\n    mysql> UPDATE user SET password=PASSWORD('new_password') WHERE user=’root’;\n    mysql> FLUSH PRIVILEGES;\n```\n\n## 忘记密码\n\n    mysqld启动的时候加上 --skip-grant-tables，然后修改密码，去掉skip-grant-tables重启即可。\n","source":"_posts/2012/7/MySQL修改密码.md","raw":"---\ntitle: MySQL修改密码\ndate: 2012-07-16 00:00:00\ncomments: true\ntags:\n    - MySQL\n    - 密码\n---\n\n## 安装时修改\n\n``` bash\n    mysqladmin -u root password new_password\n```\n\n## MySQL中修改\n\n``` bash\n    mysql> UPDATE user SET password=PASSWORD('new_password') WHERE user=’root’;\n    mysql> FLUSH PRIVILEGES;\n```\n\n## 忘记密码\n\n    mysqld启动的时候加上 --skip-grant-tables，然后修改密码，去掉skip-grant-tables重启即可。\n","slug":"2012/7/MySQL修改密码","published":1,"updated":"2016-05-14T01:27:19.000Z","_id":"cio6h3cfz000t3mbjevz9orfo","layout":"post","photos":[],"link":"","content":"<h2 id=\"安装时修改\"><a href=\"#安装时修改\" class=\"headerlink\" title=\"安装时修改\"></a>安装时修改</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqladmin -u root password new_password</span><br></pre></td></tr></table></figure>\n<h2 id=\"MySQL中修改\"><a href=\"#MySQL中修改\" class=\"headerlink\" title=\"MySQL中修改\"></a>MySQL中修改</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; UPDATE user SET password=PASSWORD(<span class=\"string\">'new_password'</span>) WHERE user=’root’;</span><br><span class=\"line\">mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>\n<h2 id=\"忘记密码\"><a href=\"#忘记密码\" class=\"headerlink\" title=\"忘记密码\"></a>忘记密码</h2><pre><code>mysqld启动的时候加上 --skip-grant-tables，然后修改密码，去掉skip-grant-tables重启即可。\n</code></pre>","excerpt":"","more":"<h2 id=\"安装时修改\"><a href=\"#安装时修改\" class=\"headerlink\" title=\"安装时修改\"></a>安装时修改</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqladmin -u root password new_password</span><br></pre></td></tr></table></figure>\n<h2 id=\"MySQL中修改\"><a href=\"#MySQL中修改\" class=\"headerlink\" title=\"MySQL中修改\"></a>MySQL中修改</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; UPDATE user SET password=PASSWORD(<span class=\"string\">'new_password'</span>) WHERE user=’root’;</span><br><span class=\"line\">mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>\n<h2 id=\"忘记密码\"><a href=\"#忘记密码\" class=\"headerlink\" title=\"忘记密码\"></a>忘记密码</h2><pre><code>mysqld启动的时候加上 --skip-grant-tables，然后修改密码，去掉skip-grant-tables重启即可。\n</code></pre>"},{"title":"IE不支持Object.keys的解决办法","date":"2014-09-09T16:00:00.000Z","comments":1,"_content":"\nIE9以下浏览器不支持Object.keys\n\n``` javascript\n\n    if (!Object.keys) {\n      Object.keys = function(obj) {\n        var keys = [];\n\n        for (var i in obj) {\n          if (obj.hasOwnProperty(i)) {\n            keys.push(i);\n          }\n        }\n        return keys;\n      };\n    }\n\n```\n\nHere is a more comprehensive polyfill:\n\n// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n\n``` javascript\n\n    if (!Object.keys) {\n      Object.keys = (function () {\n        'use strict';\n        var hasOwnProperty = Object.prototype.hasOwnProperty,\n            hasDontEnumBug = !({toString: null}).propertyIsEnumerable('toString'),\n            dontEnums = [\n              'toString',\n              'toLocaleString',\n              'valueOf',\n              'hasOwnProperty',\n              'isPrototypeOf',\n              'propertyIsEnumerable',\n              'constructor'\n            ],\n            dontEnumsLength = dontEnums.length;\n\n        return function (obj) {\n          if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {\n            throw new TypeError('Object.keys called on non-object');\n          }\n\n          var result = [], prop, i;\n\n          for (prop in obj) {\n            if (hasOwnProperty.call(obj, prop)) {\n              result.push(prop);\n            }\n          }\n\n          if (hasDontEnumBug) {\n            for (i = 0; i < dontEnumsLength; i++) {\n              if (hasOwnProperty.call(obj, dontEnums[i])) {\n                result.push(dontEnums[i]);\n              }\n            }\n          }\n          return result;\n        };\n      }());\n    }\n\n```\n[http://stackoverflow.com/questions/18912932/object-keys-not-working-in-internet-explorer](http://stackoverflow.com/questions/18912932/object-keys-not-working-in-internet-explorer)\n","source":"_posts/2014/9/IE不支持Object.keys的解决办法.md","raw":"---\ntitle: IE不支持Object.keys的解决办法\ndate: 2014-09-10 00:00:00\ncomments: true\ntags:\n    - Javascript\n    - IE\ncategories:\n    - Javascript\n---\n\nIE9以下浏览器不支持Object.keys\n\n``` javascript\n\n    if (!Object.keys) {\n      Object.keys = function(obj) {\n        var keys = [];\n\n        for (var i in obj) {\n          if (obj.hasOwnProperty(i)) {\n            keys.push(i);\n          }\n        }\n        return keys;\n      };\n    }\n\n```\n\nHere is a more comprehensive polyfill:\n\n// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n\n``` javascript\n\n    if (!Object.keys) {\n      Object.keys = (function () {\n        'use strict';\n        var hasOwnProperty = Object.prototype.hasOwnProperty,\n            hasDontEnumBug = !({toString: null}).propertyIsEnumerable('toString'),\n            dontEnums = [\n              'toString',\n              'toLocaleString',\n              'valueOf',\n              'hasOwnProperty',\n              'isPrototypeOf',\n              'propertyIsEnumerable',\n              'constructor'\n            ],\n            dontEnumsLength = dontEnums.length;\n\n        return function (obj) {\n          if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {\n            throw new TypeError('Object.keys called on non-object');\n          }\n\n          var result = [], prop, i;\n\n          for (prop in obj) {\n            if (hasOwnProperty.call(obj, prop)) {\n              result.push(prop);\n            }\n          }\n\n          if (hasDontEnumBug) {\n            for (i = 0; i < dontEnumsLength; i++) {\n              if (hasOwnProperty.call(obj, dontEnums[i])) {\n                result.push(dontEnums[i]);\n              }\n            }\n          }\n          return result;\n        };\n      }());\n    }\n\n```\n[http://stackoverflow.com/questions/18912932/object-keys-not-working-in-internet-explorer](http://stackoverflow.com/questions/18912932/object-keys-not-working-in-internet-explorer)\n","slug":"2014/9/IE不支持Object.keys的解决办法","published":1,"updated":"2016-05-15T12:39:46.000Z","_id":"cio8kk9ne000x3mi4zlpm8evx","layout":"post","photos":[],"link":"","content":"<p>IE9以下浏览器不支持Object.keys</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"built_in\">Object</span>.keys) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">Object</span>.keys = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> keys = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (obj.hasOwnProperty(i)) &#123;</span><br><span class=\"line\">        keys.push(i);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> keys;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Here is a more comprehensive polyfill:</p>\n<p>// From <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\" target=\"_blank\" rel=\"external\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"built_in\">Object</span>.keys) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">Object</span>.keys = (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">    'use strict'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> hasOwnProperty = <span class=\"built_in\">Object</span>.prototype.hasOwnProperty,</span><br><span class=\"line\">        hasDontEnumBug = !(&#123;toString: <span class=\"literal\">null</span>&#125;).propertyIsEnumerable(<span class=\"string\">'toString'</span>),</span><br><span class=\"line\">        dontEnums = [</span><br><span class=\"line\">          <span class=\"string\">'toString'</span>,</span><br><span class=\"line\">          <span class=\"string\">'toLocaleString'</span>,</span><br><span class=\"line\">          <span class=\"string\">'valueOf'</span>,</span><br><span class=\"line\">          <span class=\"string\">'hasOwnProperty'</span>,</span><br><span class=\"line\">          <span class=\"string\">'isPrototypeOf'</span>,</span><br><span class=\"line\">          <span class=\"string\">'propertyIsEnumerable'</span>,</span><br><span class=\"line\">          <span class=\"string\">'constructor'</span></span><br><span class=\"line\">        ],</span><br><span class=\"line\">        dontEnumsLength = dontEnums.length;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> obj !== <span class=\"string\">'object'</span> &amp;&amp; (<span class=\"keyword\">typeof</span> obj !== <span class=\"string\">'function'</span> || obj === <span class=\"literal\">null</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(<span class=\"string\">'Object.keys called on non-object'</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">var</span> result = [], prop, i;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (prop <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (hasOwnProperty.call(obj, prop)) &#123;</span><br><span class=\"line\">          result.push(prop);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (hasDontEnumBug) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; dontEnumsLength; i++) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (hasOwnProperty.call(obj, dontEnums[i])) &#123;</span><br><span class=\"line\">            result.push(dontEnums[i]);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://stackoverflow.com/questions/18912932/object-keys-not-working-in-internet-explorer\" target=\"_blank\" rel=\"external\">http://stackoverflow.com/questions/18912932/object-keys-not-working-in-internet-explorer</a></p>\n","excerpt":"","more":"<p>IE9以下浏览器不支持Object.keys</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"built_in\">Object</span>.keys) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">Object</span>.keys = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> keys = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (obj.hasOwnProperty(i)) &#123;</span><br><span class=\"line\">        keys.push(i);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> keys;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Here is a more comprehensive polyfill:</p>\n<p>// From <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"built_in\">Object</span>.keys) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">Object</span>.keys = (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">    'use strict'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> hasOwnProperty = <span class=\"built_in\">Object</span>.prototype.hasOwnProperty,</span><br><span class=\"line\">        hasDontEnumBug = !(&#123;toString: <span class=\"literal\">null</span>&#125;).propertyIsEnumerable(<span class=\"string\">'toString'</span>),</span><br><span class=\"line\">        dontEnums = [</span><br><span class=\"line\">          <span class=\"string\">'toString'</span>,</span><br><span class=\"line\">          <span class=\"string\">'toLocaleString'</span>,</span><br><span class=\"line\">          <span class=\"string\">'valueOf'</span>,</span><br><span class=\"line\">          <span class=\"string\">'hasOwnProperty'</span>,</span><br><span class=\"line\">          <span class=\"string\">'isPrototypeOf'</span>,</span><br><span class=\"line\">          <span class=\"string\">'propertyIsEnumerable'</span>,</span><br><span class=\"line\">          <span class=\"string\">'constructor'</span></span><br><span class=\"line\">        ],</span><br><span class=\"line\">        dontEnumsLength = dontEnums.length;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> obj !== <span class=\"string\">'object'</span> &amp;&amp; (<span class=\"keyword\">typeof</span> obj !== <span class=\"string\">'function'</span> || obj === <span class=\"literal\">null</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(<span class=\"string\">'Object.keys called on non-object'</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">var</span> result = [], prop, i;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (prop <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (hasOwnProperty.call(obj, prop)) &#123;</span><br><span class=\"line\">          result.push(prop);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (hasDontEnumBug) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; dontEnumsLength; i++) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (hasOwnProperty.call(obj, dontEnums[i])) &#123;</span><br><span class=\"line\">            result.push(dontEnums[i]);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://stackoverflow.com/questions/18912932/object-keys-not-working-in-internet-explorer\">http://stackoverflow.com/questions/18912932/object-keys-not-working-in-internet-explorer</a></p>\n"},{"title":"2013年终总结","date":"2014-02-21T16:00:00.000Z","comments":1,"_content":"\n拖了一年的年终总结终于在今天不好意思再拖了，碰巧是2.22二货节，二就二吧，就让我在这个二的日子里回顾下2013年，展望下2014年吧。\n\n2013年的年度关键词是成长，今年很不顺，发生了很多变故，也渐渐认识到自己的幼稚、too young too simple，我开始看知乎、读书，让自己成长。有人说自我改变的第一步也是最难的一步在于认识到并承认自己的不足。我觉得很有道理，我的问题不是不肯承认，而是根本没有认识到。既然认识到了就去改变自己，把一切怯懦、犹豫都扔掉，重新找回自信、霸气的自己。\n\n工作方面又有变动，我觉得我很清楚我要什么，要从工作中得到什么。人最顶级的需求就是自我实现，马斯洛说的没错。新的一年，我会比以往更加努力的工作。这是一个需要刷存在感的时代，哈哈。\n\n感情方面，今年要找到对象，不要new的，哈哈，来吧，奋不顾身的爱情，还有说走就走的旅行，我又想起了王立军，哈哈。\n\n年前买了很多书，今年打算好好看看书，时间也多了些，提升下自己的技术，扩展知识面，开始用思维导图做读书笔记。2014年，有挑战，也有压力，注定是不同寻常的一年，对于我来说。2014，出发！\n","source":"_posts/2014/2/2013年终总结.md","raw":"---\ntitle: 2013年终总结    \ndate: 2014-02-22 00:00:00\ncomments: true\ntags:\n    - 年终总结\n    - 感悟\ncategories:\n    - 感悟\n---\n\n拖了一年的年终总结终于在今天不好意思再拖了，碰巧是2.22二货节，二就二吧，就让我在这个二的日子里回顾下2013年，展望下2014年吧。\n\n2013年的年度关键词是成长，今年很不顺，发生了很多变故，也渐渐认识到自己的幼稚、too young too simple，我开始看知乎、读书，让自己成长。有人说自我改变的第一步也是最难的一步在于认识到并承认自己的不足。我觉得很有道理，我的问题不是不肯承认，而是根本没有认识到。既然认识到了就去改变自己，把一切怯懦、犹豫都扔掉，重新找回自信、霸气的自己。\n\n工作方面又有变动，我觉得我很清楚我要什么，要从工作中得到什么。人最顶级的需求就是自我实现，马斯洛说的没错。新的一年，我会比以往更加努力的工作。这是一个需要刷存在感的时代，哈哈。\n\n感情方面，今年要找到对象，不要new的，哈哈，来吧，奋不顾身的爱情，还有说走就走的旅行，我又想起了王立军，哈哈。\n\n年前买了很多书，今年打算好好看看书，时间也多了些，提升下自己的技术，扩展知识面，开始用思维导图做读书笔记。2014年，有挑战，也有压力，注定是不同寻常的一年，对于我来说。2014，出发！\n","slug":"2014/2/2013年终总结","published":1,"updated":"2016-05-15T12:37:49.000Z","_id":"cio8kkj4c00123mi46im4uykj","layout":"post","photos":[],"link":"","content":"<p>拖了一年的年终总结终于在今天不好意思再拖了，碰巧是2.22二货节，二就二吧，就让我在这个二的日子里回顾下2013年，展望下2014年吧。</p>\n<p>2013年的年度关键词是成长，今年很不顺，发生了很多变故，也渐渐认识到自己的幼稚、too young too simple，我开始看知乎、读书，让自己成长。有人说自我改变的第一步也是最难的一步在于认识到并承认自己的不足。我觉得很有道理，我的问题不是不肯承认，而是根本没有认识到。既然认识到了就去改变自己，把一切怯懦、犹豫都扔掉，重新找回自信、霸气的自己。</p>\n<p>工作方面又有变动，我觉得我很清楚我要什么，要从工作中得到什么。人最顶级的需求就是自我实现，马斯洛说的没错。新的一年，我会比以往更加努力的工作。这是一个需要刷存在感的时代，哈哈。</p>\n<p>感情方面，今年要找到对象，不要new的，哈哈，来吧，奋不顾身的爱情，还有说走就走的旅行，我又想起了王立军，哈哈。</p>\n<p>年前买了很多书，今年打算好好看看书，时间也多了些，提升下自己的技术，扩展知识面，开始用思维导图做读书笔记。2014年，有挑战，也有压力，注定是不同寻常的一年，对于我来说。2014，出发！</p>\n","excerpt":"","more":"<p>拖了一年的年终总结终于在今天不好意思再拖了，碰巧是2.22二货节，二就二吧，就让我在这个二的日子里回顾下2013年，展望下2014年吧。</p>\n<p>2013年的年度关键词是成长，今年很不顺，发生了很多变故，也渐渐认识到自己的幼稚、too young too simple，我开始看知乎、读书，让自己成长。有人说自我改变的第一步也是最难的一步在于认识到并承认自己的不足。我觉得很有道理，我的问题不是不肯承认，而是根本没有认识到。既然认识到了就去改变自己，把一切怯懦、犹豫都扔掉，重新找回自信、霸气的自己。</p>\n<p>工作方面又有变动，我觉得我很清楚我要什么，要从工作中得到什么。人最顶级的需求就是自我实现，马斯洛说的没错。新的一年，我会比以往更加努力的工作。这是一个需要刷存在感的时代，哈哈。</p>\n<p>感情方面，今年要找到对象，不要new的，哈哈，来吧，奋不顾身的爱情，还有说走就走的旅行，我又想起了王立军，哈哈。</p>\n<p>年前买了很多书，今年打算好好看看书，时间也多了些，提升下自己的技术，扩展知识面，开始用思维导图做读书笔记。2014年，有挑战，也有压力，注定是不同寻常的一年，对于我来说。2014，出发！</p>\n"},{"title":"regexdict 基于正则表达式的词典","date":"2014-01-21T16:00:00.000Z","comments":1,"_content":"\n之前写了个用正则表达式查单词的网站 http://regexdict.com ，现在又加了个chrome app，just for fun.\n\n项目地址：[https://github.com/solos/regexdict](https://github.com/solos/regexdict)\n\nchrome app: [https://chrome.google.com/webstore/detail/regexdict/fbaeaihlnmngmbbejjbmjkdhlmimaknf](https://chrome.google.com/webstore/detail/regexdict/fbaeaihlnmngmbbejjbmjkdhlmimaknf)\n\n\n    - 查询类似于onion的单词\n``` javascript \n  ^(\\w+)\\w\\1$\n```\n\n    - 查询只有a和b组成的单词\n``` javascript \n      ^[ab]+$\n```\n\n    - 以h开头的单词\n``` javascript \n      ^h.*$\n```\n\n    - 查询以tion结尾的单词\n``` javascript \n      ^.*tion$\n```\n\n    - 查询包含gnu的单词\n``` javascript \n      ^.*gnu.*$\n```\n    - 单词可以拆分成两块一样的部分的单词\n``` javascript \n      ^(.*)\\1$\n```\n\n\nchrome app demo:\n\n    ![https://chrome.google.com/webstore/detail/regexdict/fbaeaihlnmngmbbejjbmjkdhlmimaknf](../../../../static/pic/regexdict.gif)\n","source":"_posts/2014/1/regexdict基于正则表达式的词典.md","raw":"---\ntitle: regexdict 基于正则表达式的词典\ndate: 2014-01-22 00:00:00\ncomments: true\ntags:\n    -regexdict\n    -正则表达式\n    -Chrome插件\ncategories:\n    - Hexo\n    - GitHub\n---\n\n之前写了个用正则表达式查单词的网站 http://regexdict.com ，现在又加了个chrome app，just for fun.\n\n项目地址：[https://github.com/solos/regexdict](https://github.com/solos/regexdict)\n\nchrome app: [https://chrome.google.com/webstore/detail/regexdict/fbaeaihlnmngmbbejjbmjkdhlmimaknf](https://chrome.google.com/webstore/detail/regexdict/fbaeaihlnmngmbbejjbmjkdhlmimaknf)\n\n\n    - 查询类似于onion的单词\n``` javascript \n  ^(\\w+)\\w\\1$\n```\n\n    - 查询只有a和b组成的单词\n``` javascript \n      ^[ab]+$\n```\n\n    - 以h开头的单词\n``` javascript \n      ^h.*$\n```\n\n    - 查询以tion结尾的单词\n``` javascript \n      ^.*tion$\n```\n\n    - 查询包含gnu的单词\n``` javascript \n      ^.*gnu.*$\n```\n    - 单词可以拆分成两块一样的部分的单词\n``` javascript \n      ^(.*)\\1$\n```\n\n\nchrome app demo:\n\n    ![https://chrome.google.com/webstore/detail/regexdict/fbaeaihlnmngmbbejjbmjkdhlmimaknf](../../../../static/pic/regexdict.gif)\n","slug":"2014/1/regexdict基于正则表达式的词典","published":1,"updated":"2016-05-15T12:36:12.000Z","_id":"cio8kkpq100183mi4nrhom4s4","layout":"post","photos":[],"link":"","content":"<p>之前写了个用正则表达式查单词的网站 <a href=\"http://regexdict.com\" target=\"_blank\" rel=\"external\">http://regexdict.com</a> ，现在又加了个chrome app，just for fun.</p>\n<p>项目地址：<a href=\"https://github.com/solos/regexdict\" target=\"_blank\" rel=\"external\">https://github.com/solos/regexdict</a></p>\n<p>chrome app: <a href=\"https://chrome.google.com/webstore/detail/regexdict/fbaeaihlnmngmbbejjbmjkdhlmimaknf\" target=\"_blank\" rel=\"external\">https://chrome.google.com/webstore/detail/regexdict/fbaeaihlnmngmbbejjbmjkdhlmimaknf</a></p>\n<pre><code>- 查询类似于onion的单词\n</code></pre><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^(\\w+)\\w\\<span class=\"number\">1</span>$</span><br></pre></td></tr></table></figure>\n<pre><code>- 查询只有a和b组成的单词\n</code></pre><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^[ab]+$</span><br></pre></td></tr></table></figure>\n<pre><code>- 以h开头的单词\n</code></pre><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^h.*$</span><br></pre></td></tr></table></figure>\n<pre><code>- 查询以tion结尾的单词\n</code></pre><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^.*tion$</span><br></pre></td></tr></table></figure>\n<pre><code>- 查询包含gnu的单词\n</code></pre><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^.*gnu.*$</span><br></pre></td></tr></table></figure>\n<pre><code>- 单词可以拆分成两块一样的部分的单词\n</code></pre><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^(.*)\\<span class=\"number\">1</span>$</span><br></pre></td></tr></table></figure>\n<p>chrome app demo:</p>\n<pre><code>![https://chrome.google.com/webstore/detail/regexdict/fbaeaihlnmngmbbejjbmjkdhlmimaknf](../../../../static/pic/regexdict.gif)\n</code></pre>","excerpt":"","more":"<p>之前写了个用正则表达式查单词的网站 <a href=\"http://regexdict.com\">http://regexdict.com</a> ，现在又加了个chrome app，just for fun.</p>\n<p>项目地址：<a href=\"https://github.com/solos/regexdict\">https://github.com/solos/regexdict</a></p>\n<p>chrome app: <a href=\"https://chrome.google.com/webstore/detail/regexdict/fbaeaihlnmngmbbejjbmjkdhlmimaknf\">https://chrome.google.com/webstore/detail/regexdict/fbaeaihlnmngmbbejjbmjkdhlmimaknf</a></p>\n<pre><code>- 查询类似于onion的单词\n</code></pre><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^(\\w+)\\w\\<span class=\"number\">1</span>$</span><br></pre></td></tr></table></figure>\n<pre><code>- 查询只有a和b组成的单词\n</code></pre><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^[ab]+$</span><br></pre></td></tr></table></figure>\n<pre><code>- 以h开头的单词\n</code></pre><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^h.*$</span><br></pre></td></tr></table></figure>\n<pre><code>- 查询以tion结尾的单词\n</code></pre><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^.*tion$</span><br></pre></td></tr></table></figure>\n<pre><code>- 查询包含gnu的单词\n</code></pre><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^.*gnu.*$</span><br></pre></td></tr></table></figure>\n<pre><code>- 单词可以拆分成两块一样的部分的单词\n</code></pre><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^(.*)\\<span class=\"number\">1</span>$</span><br></pre></td></tr></table></figure>\n<p>chrome app demo:</p>\n<pre><code>![https://chrome.google.com/webstore/detail/regexdict/fbaeaihlnmngmbbejjbmjkdhlmimaknf](../../../../static/pic/regexdict.gif)\n</code></pre>"},{"title":"tornado静态文件加header","date":"2015-02-10T16:00:00.000Z","comments":1,"_content":"\n一个tornado的项目用了fontawesome，发现firefox浏览器下乱码了，查了一下需要加header\n\n``` python\n\n    import tornado.web\n    import tornado.ioloop\n    import tornado.autoreload\n\n    class ExtStaticFileHandler(tornado.web.StaticFileHandler):\n\n        def set_extra_headers(self, path):\n            self.set_header('Access-Control-Allow-Origin', '*')\n\n    settings = {\n        \"debug\": True,\n    }\n\n    application = tornado.web.Application([\n        (r'/static/(.*)', ExtStaticFileHandler, {'path': 'static'}),\n    ], **settings)\n\n    if __name__ == \"__main__\":\n        application.listen(8888)\n        instance = tornado.ioloop.IOLoop.instance()\n\n        tornado.autoreload.start(instance)\n        instance.start()\n\n```\n","source":"_posts/2015/2/tornado静态文件增加header.md","raw":"---\ntitle: tornado静态文件加header\ndate: 2015-02-11 00:00:00\ncomments: true\ntags:\n    - tornado\n    - firefox\n    - fontawesome\ncategories:\n    - python\n---\n\n一个tornado的项目用了fontawesome，发现firefox浏览器下乱码了，查了一下需要加header\n\n``` python\n\n    import tornado.web\n    import tornado.ioloop\n    import tornado.autoreload\n\n    class ExtStaticFileHandler(tornado.web.StaticFileHandler):\n\n        def set_extra_headers(self, path):\n            self.set_header('Access-Control-Allow-Origin', '*')\n\n    settings = {\n        \"debug\": True,\n    }\n\n    application = tornado.web.Application([\n        (r'/static/(.*)', ExtStaticFileHandler, {'path': 'static'}),\n    ], **settings)\n\n    if __name__ == \"__main__\":\n        application.listen(8888)\n        instance = tornado.ioloop.IOLoop.instance()\n\n        tornado.autoreload.start(instance)\n        instance.start()\n\n```\n","slug":"2015/2/tornado静态文件增加header","published":1,"updated":"2016-05-15T12:42:32.000Z","_id":"cio8klni7001d3mi4a7mzg4bn","layout":"post","photos":[],"link":"","content":"<p>一个tornado的项目用了fontawesome，发现firefox浏览器下乱码了，查了一下需要加header</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> tornado.web</span><br><span class=\"line\"><span class=\"keyword\">import</span> tornado.ioloop</span><br><span class=\"line\"><span class=\"keyword\">import</span> tornado.autoreload</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExtStaticFileHandler</span><span class=\"params\">(tornado.web.StaticFileHandler)</span>:</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">set_extra_headers</span><span class=\"params\">(self, path)</span>:</span></span><br><span class=\"line\">        self.set_header(<span class=\"string\">'Access-Control-Allow-Origin'</span>, <span class=\"string\">'*'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">settings = &#123;</span><br><span class=\"line\">    <span class=\"string\">\"debug\"</span>: <span class=\"keyword\">True</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">application = tornado.web.Application([</span><br><span class=\"line\">    (<span class=\"string\">r'/static/(.*)'</span>, ExtStaticFileHandler, &#123;<span class=\"string\">'path'</span>: <span class=\"string\">'static'</span>&#125;),</span><br><span class=\"line\">], **settings)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    application.listen(<span class=\"number\">8888</span>)</span><br><span class=\"line\">    instance = tornado.ioloop.IOLoop.instance()</span><br><span class=\"line\"></span><br><span class=\"line\">    tornado.autoreload.start(instance)</span><br><span class=\"line\">    instance.start()</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>一个tornado的项目用了fontawesome，发现firefox浏览器下乱码了，查了一下需要加header</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> tornado.web</span><br><span class=\"line\"><span class=\"keyword\">import</span> tornado.ioloop</span><br><span class=\"line\"><span class=\"keyword\">import</span> tornado.autoreload</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExtStaticFileHandler</span><span class=\"params\">(tornado.web.StaticFileHandler)</span>:</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">set_extra_headers</span><span class=\"params\">(self, path)</span>:</span></span><br><span class=\"line\">        self.set_header(<span class=\"string\">'Access-Control-Allow-Origin'</span>, <span class=\"string\">'*'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">settings = &#123;</span><br><span class=\"line\">    <span class=\"string\">\"debug\"</span>: <span class=\"keyword\">True</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">application = tornado.web.Application([</span><br><span class=\"line\">    (<span class=\"string\">r'/static/(.*)'</span>, ExtStaticFileHandler, &#123;<span class=\"string\">'path'</span>: <span class=\"string\">'static'</span>&#125;),</span><br><span class=\"line\">], **settings)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    application.listen(<span class=\"number\">8888</span>)</span><br><span class=\"line\">    instance = tornado.ioloop.IOLoop.instance()</span><br><span class=\"line\"></span><br><span class=\"line\">    tornado.autoreload.start(instance)</span><br><span class=\"line\">    instance.start()</span><br></pre></td></tr></table></figure>\n"},{"title":"怎样判断一个点在多边形内","date":"2015-03-26T16:00:00.000Z","comments":1,"_content":"\n#缘起\n\n最近头脑发热，突然想研究下怎么判断一个坐标点是否在一个多边形内，这个问题解决之后就可以根据一个坐标点计算出这个点所在的行政区划。\n\n#算法\n从网上找了一下，发现了一个很巧妙的算法，算法如下：\n\n    * 把整个平面分为两个部分（x>0&&y==0||y>0部分和x<0&&y==0||y<0部分）\n    * 顺序扫描多边形每一个顶点，当某个顶点和前一个顶点处于不同部分时，判断一下从前一个点到该点的方向相对于原点是顺时针还是逆时针（用叉积判断），如果是顺时针r++，否则r--（r初始为0）\n    * 如果结果r==2||r==-2，则原点在该多边形内部，否则不是。\n\n#python实现\n\n``` python\n\n    #!/usr/bin/env python\n    # -*- coding: utf-8 -*-\n\n\n    def is_point_in(x, y, points):\n        count = 0\n        x1, y1 = points[0]\n        x1_part = (y1 > y) or ((x1 - x > 0) and (y1 == y)) # x1在哪一部分中\n        x2, y2 = '', ''  # points[1]\n        points.append((x1, y1))\n        for point in points[1:]:\n            x2, y2 = point\n            x2_part = (y2 > y) or ((x2 > x) and (y2 == y)) # x2在哪一部分中\n            if x2_part == x1_part:\n                x1, y1 = x2, y2\n                continue\n            mul = (x1 - x)*(y2 - y) - (x2 - x)*(y1 - y)\n            if mul > 0:  # 叉积大于0 逆时针\n                count += 1\n            elif mul < 0:\n                count -= 1\n            x1, y1 = x2, y2\n            x1_part = x2_part\n        if count == 2 or count == -2:\n            return True\n        else:\n            return False\n\n\n    if __name__ == '__main__':\n        points = [[117.1510864068032,40.0705150448258],[117.2866776871509,40.10934259697606], ... ]\n        y = 39.99\n        x = 116.468006\n        for i in xrange(10000):\n            is_point_in(x + i * 0.01, y + i * 0.01, points)\n\n##执行时间:\n\n``` bash\n\n    time python point.py\n\n    real    0m8.746s\n    user    0m8.680s\n    sys 0m0.034s\n```\n\n执行了10,000次，耗时8.746秒，太慢了有木有, 改成go试试\n\n#golang实现\n\n``` go\n\n    package main\n\n    import (\n        //\"fmt\"\n    )\n\n\n    func is_point_in(x float64, y float64, points [][]float64) bool {\n        count := 0\n        x1, y1 := points[0][0], points[0][1]\n        x1_part := (y1 > y) || ((x1 - x > 0) && (y1 == y))\n        var a = []float64{x1, y1}\n        p := append(points, a)\n        for i := range p {\n            if (i == 0) {\n                continue\n            }\n            point := p[i]\n            x2, y2 := point[0], point[1]\n            x2_part := (y2 > y) || ((x2 > x) && (y2 == y))\n            if (x2_part == x1_part){\n                x1, y1 = x2, y2\n                continue\n            }\n            mul := (x1 - x)*(y2 - y) - (x2 - x)*(y1 - y)\n            if mul > 0 {\n                count += 1\n            } else {\n                if( mul < 0) {\n                    count -= 1\n                }\n            }\n            x1, y1 = x2, y2\n            x1_part = x2_part\n        }\n\n        if (count == 2 || count == -2){\n            return true\n        } else {\n            return false\n        }\n    }\n\n    func main() {\n        points := [][]float64{{117.1510864068032,40.0705150448258},{117.2866776871509,40.10934259697606}, ... ,}\n        y := 39.99\n        x := 116.468006\n        for i:=1; i < 10000; i++ {\n            _ = is_point_in(x + float64(i)*0.01, y + float64(i) * 0.01, points)\n        }\n    }\n```\n    \n##执行时间:\n\n``` bash\n\n    go build point.go\n    time ./point\n\n    real    0m0.038s\n    user    0m0.035s\n    sys 0m0.005s\n```\n\n执行了10,000次，耗时0.038秒\n\n#总结\n\ngo版本比python版本快200多倍，代码行数python 35行, go 51行（有些括号独占一行），是时候换go了.....\n\n\n#参考资料:\n\n    - [判断点在多边形内](http://bbs.sjtu.edu.cn/bbstcon,board,C,reid,1105270922.html)\n","source":"_posts/2015/3/怎样判断一个点在多边形内.md","raw":"---\ntitle: 怎样判断一个点在多边形内\ndate: 2015-03-27 00:00:00\ncomments: true\ntags:\n    - 点在多边形内\n    - python\n    - golang\ncategories:\n    - go\n    - python\n---\n\n#缘起\n\n最近头脑发热，突然想研究下怎么判断一个坐标点是否在一个多边形内，这个问题解决之后就可以根据一个坐标点计算出这个点所在的行政区划。\n\n#算法\n从网上找了一下，发现了一个很巧妙的算法，算法如下：\n\n    * 把整个平面分为两个部分（x>0&&y==0||y>0部分和x<0&&y==0||y<0部分）\n    * 顺序扫描多边形每一个顶点，当某个顶点和前一个顶点处于不同部分时，判断一下从前一个点到该点的方向相对于原点是顺时针还是逆时针（用叉积判断），如果是顺时针r++，否则r--（r初始为0）\n    * 如果结果r==2||r==-2，则原点在该多边形内部，否则不是。\n\n#python实现\n\n``` python\n\n    #!/usr/bin/env python\n    # -*- coding: utf-8 -*-\n\n\n    def is_point_in(x, y, points):\n        count = 0\n        x1, y1 = points[0]\n        x1_part = (y1 > y) or ((x1 - x > 0) and (y1 == y)) # x1在哪一部分中\n        x2, y2 = '', ''  # points[1]\n        points.append((x1, y1))\n        for point in points[1:]:\n            x2, y2 = point\n            x2_part = (y2 > y) or ((x2 > x) and (y2 == y)) # x2在哪一部分中\n            if x2_part == x1_part:\n                x1, y1 = x2, y2\n                continue\n            mul = (x1 - x)*(y2 - y) - (x2 - x)*(y1 - y)\n            if mul > 0:  # 叉积大于0 逆时针\n                count += 1\n            elif mul < 0:\n                count -= 1\n            x1, y1 = x2, y2\n            x1_part = x2_part\n        if count == 2 or count == -2:\n            return True\n        else:\n            return False\n\n\n    if __name__ == '__main__':\n        points = [[117.1510864068032,40.0705150448258],[117.2866776871509,40.10934259697606], ... ]\n        y = 39.99\n        x = 116.468006\n        for i in xrange(10000):\n            is_point_in(x + i * 0.01, y + i * 0.01, points)\n\n##执行时间:\n\n``` bash\n\n    time python point.py\n\n    real    0m8.746s\n    user    0m8.680s\n    sys 0m0.034s\n```\n\n执行了10,000次，耗时8.746秒，太慢了有木有, 改成go试试\n\n#golang实现\n\n``` go\n\n    package main\n\n    import (\n        //\"fmt\"\n    )\n\n\n    func is_point_in(x float64, y float64, points [][]float64) bool {\n        count := 0\n        x1, y1 := points[0][0], points[0][1]\n        x1_part := (y1 > y) || ((x1 - x > 0) && (y1 == y))\n        var a = []float64{x1, y1}\n        p := append(points, a)\n        for i := range p {\n            if (i == 0) {\n                continue\n            }\n            point := p[i]\n            x2, y2 := point[0], point[1]\n            x2_part := (y2 > y) || ((x2 > x) && (y2 == y))\n            if (x2_part == x1_part){\n                x1, y1 = x2, y2\n                continue\n            }\n            mul := (x1 - x)*(y2 - y) - (x2 - x)*(y1 - y)\n            if mul > 0 {\n                count += 1\n            } else {\n                if( mul < 0) {\n                    count -= 1\n                }\n            }\n            x1, y1 = x2, y2\n            x1_part = x2_part\n        }\n\n        if (count == 2 || count == -2){\n            return true\n        } else {\n            return false\n        }\n    }\n\n    func main() {\n        points := [][]float64{{117.1510864068032,40.0705150448258},{117.2866776871509,40.10934259697606}, ... ,}\n        y := 39.99\n        x := 116.468006\n        for i:=1; i < 10000; i++ {\n            _ = is_point_in(x + float64(i)*0.01, y + float64(i) * 0.01, points)\n        }\n    }\n```\n    \n##执行时间:\n\n``` bash\n\n    go build point.go\n    time ./point\n\n    real    0m0.038s\n    user    0m0.035s\n    sys 0m0.005s\n```\n\n执行了10,000次，耗时0.038秒\n\n#总结\n\ngo版本比python版本快200多倍，代码行数python 35行, go 51行（有些括号独占一行），是时候换go了.....\n\n\n#参考资料:\n\n    - [判断点在多边形内](http://bbs.sjtu.edu.cn/bbstcon,board,C,reid,1105270922.html)\n","slug":"2015/3/怎样判断一个点在多边形内","published":1,"updated":"2016-05-15T12:45:58.000Z","_id":"cio8kp0x9001o3mi4j0feyjii","layout":"post","photos":[],"link":"","content":"<p>#缘起</p>\n<p>最近头脑发热，突然想研究下怎么判断一个坐标点是否在一个多边形内，这个问题解决之后就可以根据一个坐标点计算出这个点所在的行政区划。</p>\n<p>#算法<br>从网上找了一下，发现了一个很巧妙的算法，算法如下：</p>\n<pre><code>* 把整个平面分为两个部分（x&gt;0&amp;&amp;y==0||y&gt;0部分和x&lt;0&amp;&amp;y==0||y&lt;0部分）\n* 顺序扫描多边形每一个顶点，当某个顶点和前一个顶点处于不同部分时，判断一下从前一个点到该点的方向相对于原点是顺时针还是逆时针（用叉积判断），如果是顺时针r++，否则r--（r初始为0）\n* 如果结果r==2||r==-2，则原点在该多边形内部，否则不是。\n</code></pre><p>#python实现</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\">    <span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">is_point_in</span><span class=\"params\">(x, y, points)</span>:</span></span><br><span class=\"line\">        count = <span class=\"number\">0</span></span><br><span class=\"line\">        x1, y1 = points[<span class=\"number\">0</span>]</span><br><span class=\"line\">        x1_part = (y1 &gt; y) <span class=\"keyword\">or</span> ((x1 - x &gt; <span class=\"number\">0</span>) <span class=\"keyword\">and</span> (y1 == y)) <span class=\"comment\"># x1在哪一部分中</span></span><br><span class=\"line\">        x2, y2 = <span class=\"string\">''</span>, <span class=\"string\">''</span>  <span class=\"comment\"># points[1]</span></span><br><span class=\"line\">        points.append((x1, y1))</span><br><span class=\"line\">        <span class=\"keyword\">for</span> point <span class=\"keyword\">in</span> points[<span class=\"number\">1</span>:]:</span><br><span class=\"line\">            x2, y2 = point</span><br><span class=\"line\">            x2_part = (y2 &gt; y) <span class=\"keyword\">or</span> ((x2 &gt; x) <span class=\"keyword\">and</span> (y2 == y)) <span class=\"comment\"># x2在哪一部分中</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> x2_part == x1_part:</span><br><span class=\"line\">                x1, y1 = x2, y2</span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\">            mul = (x1 - x)*(y2 - y) - (x2 - x)*(y1 - y)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> mul &gt; <span class=\"number\">0</span>:  <span class=\"comment\"># 叉积大于0 逆时针</span></span><br><span class=\"line\">                count += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> mul &lt; <span class=\"number\">0</span>:</span><br><span class=\"line\">                count -= <span class=\"number\">1</span></span><br><span class=\"line\">            x1, y1 = x2, y2</span><br><span class=\"line\">            x1_part = x2_part</span><br><span class=\"line\">        <span class=\"keyword\">if</span> count == <span class=\"number\">2</span> <span class=\"keyword\">or</span> count == <span class=\"number\">-2</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">True</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">        points = [[<span class=\"number\">117.1510864068032</span>,<span class=\"number\">40.0705150448258</span>],[<span class=\"number\">117.2866776871509</span>,<span class=\"number\">40.10934259697606</span>], ... ]</span><br><span class=\"line\">        y = <span class=\"number\">39.99</span></span><br><span class=\"line\">        x = <span class=\"number\">116.468006</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> xrange(<span class=\"number\">10000</span>):</span><br><span class=\"line\">            is_point_in(x + i * <span class=\"number\">0.01</span>, y + i * <span class=\"number\">0.01</span>, points)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##执行时间:</span></span><br><span class=\"line\"></span><br><span class=\"line\">``` bash</span><br><span class=\"line\"></span><br><span class=\"line\">    time python point.py</span><br><span class=\"line\"></span><br><span class=\"line\">    real    <span class=\"number\">0</span>m8<span class=\"number\">.746</span>s</span><br><span class=\"line\">    user    <span class=\"number\">0</span>m8<span class=\"number\">.680</span>s</span><br><span class=\"line\">    sys <span class=\"number\">0</span>m0<span class=\"number\">.034</span>s</span><br></pre></td></tr></table></figure>\n<p>执行了10,000次，耗时8.746秒，太慢了有木有, 改成go试试</p>\n<p>#golang实现</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">    <span class=\"comment\">//\"fmt\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> is_point_in(x <span class=\"keyword\">float64</span>, y <span class=\"keyword\">float64</span>, points [][]<span class=\"keyword\">float64</span>) <span class=\"keyword\">bool</span> &#123;</span><br><span class=\"line\">    count := <span class=\"number\">0</span></span><br><span class=\"line\">    x1, y1 := points[<span class=\"number\">0</span>][<span class=\"number\">0</span>], points[<span class=\"number\">0</span>][<span class=\"number\">1</span>]</span><br><span class=\"line\">    x1_part := (y1 &gt; y) || ((x1 - x &gt; <span class=\"number\">0</span>) &amp;&amp; (y1 == y))</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = []<span class=\"keyword\">float64</span>&#123;x1, y1&#125;</span><br><span class=\"line\">    p := <span class=\"built_in\">append</span>(points, a)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i := <span class=\"keyword\">range</span> p &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        point := p[i]</span><br><span class=\"line\">        x2, y2 := point[<span class=\"number\">0</span>], point[<span class=\"number\">1</span>]</span><br><span class=\"line\">        x2_part := (y2 &gt; y) || ((x2 &gt; x) &amp;&amp; (y2 == y))</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x2_part == x1_part)&#123;</span><br><span class=\"line\">            x1, y1 = x2, y2</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        mul := (x1 - x)*(y2 - y) - (x2 - x)*(y1 - y)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> mul &gt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">            count += <span class=\"number\">1</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>( mul &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                count -= <span class=\"number\">1</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        x1, y1 = x2, y2</span><br><span class=\"line\">        x1_part = x2_part</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (count == <span class=\"number\">2</span> || count == <span class=\"number\">-2</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> main() &#123;</span><br><span class=\"line\">    points := [][]<span class=\"keyword\">float64</span>&#123;&#123;<span class=\"number\">117.1510864068032</span>,<span class=\"number\">40.0705150448258</span>&#125;,&#123;<span class=\"number\">117.2866776871509</span>,<span class=\"number\">40.10934259697606</span>&#125;, ... ,&#125;</span><br><span class=\"line\">    y := <span class=\"number\">39.99</span></span><br><span class=\"line\">    x := <span class=\"number\">116.468006</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i:=<span class=\"number\">1</span>; i &lt; <span class=\"number\">10000</span>; i++ &#123;</span><br><span class=\"line\">        _ = is_point_in(x + <span class=\"keyword\">float64</span>(i)*<span class=\"number\">0.01</span>, y + <span class=\"keyword\">float64</span>(i) * <span class=\"number\">0.01</span>, points)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>##执行时间:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">go build point.go</span><br><span class=\"line\">time ./point</span><br><span class=\"line\"></span><br><span class=\"line\">real    0m0.038s</span><br><span class=\"line\">user    0m0.035s</span><br><span class=\"line\">sys 0m0.005s</span><br></pre></td></tr></table></figure>\n<p>执行了10,000次，耗时0.038秒</p>\n<p>#总结</p>\n<p>go版本比python版本快200多倍，代码行数python 35行, go 51行（有些括号独占一行），是时候换go了…..</p>\n<p>#参考资料:</p>\n<pre><code>- [判断点在多边形内](http://bbs.sjtu.edu.cn/bbstcon,board,C,reid,1105270922.html)\n</code></pre>","excerpt":"","more":"<p>#缘起</p>\n<p>最近头脑发热，突然想研究下怎么判断一个坐标点是否在一个多边形内，这个问题解决之后就可以根据一个坐标点计算出这个点所在的行政区划。</p>\n<p>#算法<br>从网上找了一下，发现了一个很巧妙的算法，算法如下：</p>\n<pre><code>* 把整个平面分为两个部分（x&gt;0&amp;&amp;y==0||y&gt;0部分和x&lt;0&amp;&amp;y==0||y&lt;0部分）\n* 顺序扫描多边形每一个顶点，当某个顶点和前一个顶点处于不同部分时，判断一下从前一个点到该点的方向相对于原点是顺时针还是逆时针（用叉积判断），如果是顺时针r++，否则r--（r初始为0）\n* 如果结果r==2||r==-2，则原点在该多边形内部，否则不是。\n</code></pre><p>#python实现</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\">    <span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">is_point_in</span><span class=\"params\">(x, y, points)</span>:</span></span><br><span class=\"line\">        count = <span class=\"number\">0</span></span><br><span class=\"line\">        x1, y1 = points[<span class=\"number\">0</span>]</span><br><span class=\"line\">        x1_part = (y1 &gt; y) <span class=\"keyword\">or</span> ((x1 - x &gt; <span class=\"number\">0</span>) <span class=\"keyword\">and</span> (y1 == y)) <span class=\"comment\"># x1在哪一部分中</span></span><br><span class=\"line\">        x2, y2 = <span class=\"string\">''</span>, <span class=\"string\">''</span>  <span class=\"comment\"># points[1]</span></span><br><span class=\"line\">        points.append((x1, y1))</span><br><span class=\"line\">        <span class=\"keyword\">for</span> point <span class=\"keyword\">in</span> points[<span class=\"number\">1</span>:]:</span><br><span class=\"line\">            x2, y2 = point</span><br><span class=\"line\">            x2_part = (y2 &gt; y) <span class=\"keyword\">or</span> ((x2 &gt; x) <span class=\"keyword\">and</span> (y2 == y)) <span class=\"comment\"># x2在哪一部分中</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> x2_part == x1_part:</span><br><span class=\"line\">                x1, y1 = x2, y2</span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\">            mul = (x1 - x)*(y2 - y) - (x2 - x)*(y1 - y)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> mul &gt; <span class=\"number\">0</span>:  <span class=\"comment\"># 叉积大于0 逆时针</span></span><br><span class=\"line\">                count += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> mul &lt; <span class=\"number\">0</span>:</span><br><span class=\"line\">                count -= <span class=\"number\">1</span></span><br><span class=\"line\">            x1, y1 = x2, y2</span><br><span class=\"line\">            x1_part = x2_part</span><br><span class=\"line\">        <span class=\"keyword\">if</span> count == <span class=\"number\">2</span> <span class=\"keyword\">or</span> count == <span class=\"number\">-2</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">True</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">        points = [[<span class=\"number\">117.1510864068032</span>,<span class=\"number\">40.0705150448258</span>],[<span class=\"number\">117.2866776871509</span>,<span class=\"number\">40.10934259697606</span>], ... ]</span><br><span class=\"line\">        y = <span class=\"number\">39.99</span></span><br><span class=\"line\">        x = <span class=\"number\">116.468006</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> xrange(<span class=\"number\">10000</span>):</span><br><span class=\"line\">            is_point_in(x + i * <span class=\"number\">0.01</span>, y + i * <span class=\"number\">0.01</span>, points)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##执行时间:</span></span><br><span class=\"line\"></span><br><span class=\"line\">``` bash</span><br><span class=\"line\"></span><br><span class=\"line\">    time python point.py</span><br><span class=\"line\"></span><br><span class=\"line\">    real    <span class=\"number\">0</span>m8<span class=\"number\">.746</span>s</span><br><span class=\"line\">    user    <span class=\"number\">0</span>m8<span class=\"number\">.680</span>s</span><br><span class=\"line\">    sys <span class=\"number\">0</span>m0<span class=\"number\">.034</span>s</span><br></pre></td></tr></table></figure>\n<p>执行了10,000次，耗时8.746秒，太慢了有木有, 改成go试试</p>\n<p>#golang实现</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">    <span class=\"comment\">//\"fmt\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> is_point_in(x <span class=\"keyword\">float64</span>, y <span class=\"keyword\">float64</span>, points [][]<span class=\"keyword\">float64</span>) <span class=\"keyword\">bool</span> &#123;</span><br><span class=\"line\">    count := <span class=\"number\">0</span></span><br><span class=\"line\">    x1, y1 := points[<span class=\"number\">0</span>][<span class=\"number\">0</span>], points[<span class=\"number\">0</span>][<span class=\"number\">1</span>]</span><br><span class=\"line\">    x1_part := (y1 &gt; y) || ((x1 - x &gt; <span class=\"number\">0</span>) &amp;&amp; (y1 == y))</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = []<span class=\"keyword\">float64</span>&#123;x1, y1&#125;</span><br><span class=\"line\">    p := <span class=\"built_in\">append</span>(points, a)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i := <span class=\"keyword\">range</span> p &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        point := p[i]</span><br><span class=\"line\">        x2, y2 := point[<span class=\"number\">0</span>], point[<span class=\"number\">1</span>]</span><br><span class=\"line\">        x2_part := (y2 &gt; y) || ((x2 &gt; x) &amp;&amp; (y2 == y))</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x2_part == x1_part)&#123;</span><br><span class=\"line\">            x1, y1 = x2, y2</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        mul := (x1 - x)*(y2 - y) - (x2 - x)*(y1 - y)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> mul &gt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">            count += <span class=\"number\">1</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>( mul &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                count -= <span class=\"number\">1</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        x1, y1 = x2, y2</span><br><span class=\"line\">        x1_part = x2_part</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (count == <span class=\"number\">2</span> || count == <span class=\"number\">-2</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> main() &#123;</span><br><span class=\"line\">    points := [][]<span class=\"keyword\">float64</span>&#123;&#123;<span class=\"number\">117.1510864068032</span>,<span class=\"number\">40.0705150448258</span>&#125;,&#123;<span class=\"number\">117.2866776871509</span>,<span class=\"number\">40.10934259697606</span>&#125;, ... ,&#125;</span><br><span class=\"line\">    y := <span class=\"number\">39.99</span></span><br><span class=\"line\">    x := <span class=\"number\">116.468006</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i:=<span class=\"number\">1</span>; i &lt; <span class=\"number\">10000</span>; i++ &#123;</span><br><span class=\"line\">        _ = is_point_in(x + <span class=\"keyword\">float64</span>(i)*<span class=\"number\">0.01</span>, y + <span class=\"keyword\">float64</span>(i) * <span class=\"number\">0.01</span>, points)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>##执行时间:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">go build point.go</span><br><span class=\"line\">time ./point</span><br><span class=\"line\"></span><br><span class=\"line\">real    0m0.038s</span><br><span class=\"line\">user    0m0.035s</span><br><span class=\"line\">sys 0m0.005s</span><br></pre></td></tr></table></figure>\n<p>执行了10,000次，耗时0.038秒</p>\n<p>#总结</p>\n<p>go版本比python版本快200多倍，代码行数python 35行, go 51行（有些括号独占一行），是时候换go了…..</p>\n<p>#参考资料:</p>\n<pre><code>- [判断点在多边形内](http://bbs.sjtu.edu.cn/bbstcon,board,C,reid,1105270922.html)\n</code></pre>"},{"title":"Mac终端下使用shadowsocks代理","date":"2015-05-05T16:00:00.000Z","comments":1,"_content":"\n#安装proxychains-ng\n\n``` bash\n    brew install proxychains-ng\n```\n\n#修改配置\n\n``` bash\n    \n    vi /usr/local/etc/proxychains.conf\n\n    socks5 \t127.0.0.1 1080\n\n#使用\n\n``` bash\n    proxychains4 wget twitter.com\n```\n","source":"_posts/2015/5/Mac终端使用shadowsocks代理.md","raw":"---\ntitle: Mac终端下使用shadowsocks代理\ndate: 2015-05-06 00:00:00\ncomments: true\ntags:\n    - shadowsocks\n    - proxychains\ncategories:\n    - shadowsocks\n---\n\n#安装proxychains-ng\n\n``` bash\n    brew install proxychains-ng\n```\n\n#修改配置\n\n``` bash\n    \n    vi /usr/local/etc/proxychains.conf\n\n    socks5 \t127.0.0.1 1080\n\n#使用\n\n``` bash\n    proxychains4 wget twitter.com\n```\n","slug":"2015/5/Mac终端使用shadowsocks代理","published":1,"updated":"2016-05-15T12:50:27.000Z","_id":"cio8l3vnf001z3mi4n87bhwl8","layout":"post","photos":[],"link":"","content":"<p>#安装proxychains-ng</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install proxychains-ng</span><br></pre></td></tr></table></figure>\n<p>#修改配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    </span><br><span class=\"line\">    vi /usr/<span class=\"built_in\">local</span>/etc/proxychains.conf</span><br><span class=\"line\"></span><br><span class=\"line\">    socks5 \t127.0.0.1 1080</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#使用</span></span><br><span class=\"line\"></span><br><span class=\"line\">``` bash</span><br><span class=\"line\">    proxychains4 wget twitter.com</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>#安装proxychains-ng</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install proxychains-ng</span><br></pre></td></tr></table></figure>\n<p>#修改配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    </span><br><span class=\"line\">    vi /usr/<span class=\"built_in\">local</span>/etc/proxychains.conf</span><br><span class=\"line\"></span><br><span class=\"line\">    socks5 \t127.0.0.1 1080</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#使用</span></span><br><span class=\"line\"></span><br><span class=\"line\">``` bash</span><br><span class=\"line\">    proxychains4 wget twitter.com</span><br></pre></td></tr></table></figure>\n"},{"title":"Sphinx文档中文搜索支持","date":"2015-05-21T16:00:00.000Z","comments":1,"_content":"\n#安装结巴中文分词 \n\n``` bash\n    pip install jieba\n```\n\n#复制spinx中文搜索插件\n\n``` bash\ngit clone https://github.com/bosbyj/sphinx.search.zh_CN\n\ncp sphinx.search.zh_CN.py /Library/Python/2.7/site-packages/sphinx/search/zh_CN.py # 注意一下sphinx安装路径\n```\n\n\n#修改Sphinx代码\n\n``` bash\nvi /Library/Python/2.7/site-packages/sphinx/search/__init__.py  # 注意一下sphinx安装路径\n```\n\n``` python\n\n    from sphinx.search import en, ja\n\n    languages = {\n        'en': en.SearchEnglish,\n        'ja': ja.SearchJapanese,\n    }\n```\n\n改为\n\n``` python\n\n    from sphinx.search import en, ja, zh_CN\n\n    languages = {\n        'en': en.SearchEnglish,\n        'ja': ja.SearchJapanese,\n        'zh_CN': zh_CN.SearchChinese\n    }\n```\n\n或者\n\n``` python\n\n    languages = {\n        'da': 'sphinx.search.da.SearchDanish',\n        'de': 'sphinx.search.de.SearchGerman',\n        'en': SearchEnglish,\n        'es': 'sphinx.search.es.SearchSpanish',\n        'fi': 'sphinx.search.fi.SearchFinnish',\n        'fr': 'sphinx.search.fr.SearchFrench',\n        'hu': 'sphinx.search.hu.SearchHungarian',\n        'it': 'sphinx.search.it.SearchItalian',\n        'ja': 'sphinx.search.ja.SearchJapanese',\n        'nl': 'sphinx.search.nl.SearchDutch',\n        'no': 'sphinx.search.no.SearchNorwegian',\n        'pt': 'sphinx.search.pt.SearchPortuguese',\n        'ro': 'sphinx.search.ro.SearchRomanian',\n        'ru': 'sphinx.search.ru.SearchRussian',\n        'sv': 'sphinx.search.sv.SearchSwedish',\n        'tr': 'sphinx.search.tr.SearchTurkish',\n        'zh_CN': 'sphinx.search.zh_CN.SearchChinese',\n    }\n```\n\n\n#修改sphinx配置文件\n\n    在sphinx工程的conf.py中添加language = 'zh_CN'\n\n``` bash\n    make html\n```\n","source":"_posts/2015/5/Sphinx中文搜索.md","raw":"---\ntitle: Sphinx文档中文搜索支持\ndate: 2015-05-22 00:00:00\ncomments: true\ntags:\n    - sphinx\n    - python\n    - 中文搜索\ncategories:\n    - python\n---\n\n#安装结巴中文分词 \n\n``` bash\n    pip install jieba\n```\n\n#复制spinx中文搜索插件\n\n``` bash\ngit clone https://github.com/bosbyj/sphinx.search.zh_CN\n\ncp sphinx.search.zh_CN.py /Library/Python/2.7/site-packages/sphinx/search/zh_CN.py # 注意一下sphinx安装路径\n```\n\n\n#修改Sphinx代码\n\n``` bash\nvi /Library/Python/2.7/site-packages/sphinx/search/__init__.py  # 注意一下sphinx安装路径\n```\n\n``` python\n\n    from sphinx.search import en, ja\n\n    languages = {\n        'en': en.SearchEnglish,\n        'ja': ja.SearchJapanese,\n    }\n```\n\n改为\n\n``` python\n\n    from sphinx.search import en, ja, zh_CN\n\n    languages = {\n        'en': en.SearchEnglish,\n        'ja': ja.SearchJapanese,\n        'zh_CN': zh_CN.SearchChinese\n    }\n```\n\n或者\n\n``` python\n\n    languages = {\n        'da': 'sphinx.search.da.SearchDanish',\n        'de': 'sphinx.search.de.SearchGerman',\n        'en': SearchEnglish,\n        'es': 'sphinx.search.es.SearchSpanish',\n        'fi': 'sphinx.search.fi.SearchFinnish',\n        'fr': 'sphinx.search.fr.SearchFrench',\n        'hu': 'sphinx.search.hu.SearchHungarian',\n        'it': 'sphinx.search.it.SearchItalian',\n        'ja': 'sphinx.search.ja.SearchJapanese',\n        'nl': 'sphinx.search.nl.SearchDutch',\n        'no': 'sphinx.search.no.SearchNorwegian',\n        'pt': 'sphinx.search.pt.SearchPortuguese',\n        'ro': 'sphinx.search.ro.SearchRomanian',\n        'ru': 'sphinx.search.ru.SearchRussian',\n        'sv': 'sphinx.search.sv.SearchSwedish',\n        'tr': 'sphinx.search.tr.SearchTurkish',\n        'zh_CN': 'sphinx.search.zh_CN.SearchChinese',\n    }\n```\n\n\n#修改sphinx配置文件\n\n    在sphinx工程的conf.py中添加language = 'zh_CN'\n\n``` bash\n    make html\n```\n","slug":"2015/5/Sphinx中文搜索","published":1,"updated":"2016-05-15T12:54:39.000Z","_id":"cio8l3z8600263mi4qs2b2xwr","layout":"post","photos":[],"link":"","content":"<p>#安装结巴中文分词 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install jieba</span><br></pre></td></tr></table></figure>\n<p>#复制spinx中文搜索插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/bosbyj/sphinx.search.zh_CN</span><br><span class=\"line\"></span><br><span class=\"line\">cp sphinx.search.zh_CN.py /Library/Python/2.7/site-packages/sphinx/search/zh_CN.py <span class=\"comment\"># 注意一下sphinx安装路径</span></span><br></pre></td></tr></table></figure>\n<p>#修改Sphinx代码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /Library/Python/2.7/site-packages/sphinx/search/__init__.py  <span class=\"comment\"># 注意一下sphinx安装路径</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> sphinx.search <span class=\"keyword\">import</span> en, ja</span><br><span class=\"line\"></span><br><span class=\"line\">languages = &#123;</span><br><span class=\"line\">    <span class=\"string\">'en'</span>: en.SearchEnglish,</span><br><span class=\"line\">    <span class=\"string\">'ja'</span>: ja.SearchJapanese,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>改为</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> sphinx.search <span class=\"keyword\">import</span> en, ja, zh_CN</span><br><span class=\"line\"></span><br><span class=\"line\">languages = &#123;</span><br><span class=\"line\">    <span class=\"string\">'en'</span>: en.SearchEnglish,</span><br><span class=\"line\">    <span class=\"string\">'ja'</span>: ja.SearchJapanese,</span><br><span class=\"line\">    <span class=\"string\">'zh_CN'</span>: zh_CN.SearchChinese</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>或者</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">languages = &#123;</span><br><span class=\"line\">    <span class=\"string\">'da'</span>: <span class=\"string\">'sphinx.search.da.SearchDanish'</span>,</span><br><span class=\"line\">    <span class=\"string\">'de'</span>: <span class=\"string\">'sphinx.search.de.SearchGerman'</span>,</span><br><span class=\"line\">    <span class=\"string\">'en'</span>: SearchEnglish,</span><br><span class=\"line\">    <span class=\"string\">'es'</span>: <span class=\"string\">'sphinx.search.es.SearchSpanish'</span>,</span><br><span class=\"line\">    <span class=\"string\">'fi'</span>: <span class=\"string\">'sphinx.search.fi.SearchFinnish'</span>,</span><br><span class=\"line\">    <span class=\"string\">'fr'</span>: <span class=\"string\">'sphinx.search.fr.SearchFrench'</span>,</span><br><span class=\"line\">    <span class=\"string\">'hu'</span>: <span class=\"string\">'sphinx.search.hu.SearchHungarian'</span>,</span><br><span class=\"line\">    <span class=\"string\">'it'</span>: <span class=\"string\">'sphinx.search.it.SearchItalian'</span>,</span><br><span class=\"line\">    <span class=\"string\">'ja'</span>: <span class=\"string\">'sphinx.search.ja.SearchJapanese'</span>,</span><br><span class=\"line\">    <span class=\"string\">'nl'</span>: <span class=\"string\">'sphinx.search.nl.SearchDutch'</span>,</span><br><span class=\"line\">    <span class=\"string\">'no'</span>: <span class=\"string\">'sphinx.search.no.SearchNorwegian'</span>,</span><br><span class=\"line\">    <span class=\"string\">'pt'</span>: <span class=\"string\">'sphinx.search.pt.SearchPortuguese'</span>,</span><br><span class=\"line\">    <span class=\"string\">'ro'</span>: <span class=\"string\">'sphinx.search.ro.SearchRomanian'</span>,</span><br><span class=\"line\">    <span class=\"string\">'ru'</span>: <span class=\"string\">'sphinx.search.ru.SearchRussian'</span>,</span><br><span class=\"line\">    <span class=\"string\">'sv'</span>: <span class=\"string\">'sphinx.search.sv.SearchSwedish'</span>,</span><br><span class=\"line\">    <span class=\"string\">'tr'</span>: <span class=\"string\">'sphinx.search.tr.SearchTurkish'</span>,</span><br><span class=\"line\">    <span class=\"string\">'zh_CN'</span>: <span class=\"string\">'sphinx.search.zh_CN.SearchChinese'</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>#修改sphinx配置文件</p>\n<pre><code>在sphinx工程的conf.py中添加language = &apos;zh_CN&apos;\n</code></pre><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make html</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>#安装结巴中文分词 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install jieba</span><br></pre></td></tr></table></figure>\n<p>#复制spinx中文搜索插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/bosbyj/sphinx.search.zh_CN</span><br><span class=\"line\"></span><br><span class=\"line\">cp sphinx.search.zh_CN.py /Library/Python/2.7/site-packages/sphinx/search/zh_CN.py <span class=\"comment\"># 注意一下sphinx安装路径</span></span><br></pre></td></tr></table></figure>\n<p>#修改Sphinx代码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /Library/Python/2.7/site-packages/sphinx/search/__init__.py  <span class=\"comment\"># 注意一下sphinx安装路径</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> sphinx.search <span class=\"keyword\">import</span> en, ja</span><br><span class=\"line\"></span><br><span class=\"line\">languages = &#123;</span><br><span class=\"line\">    <span class=\"string\">'en'</span>: en.SearchEnglish,</span><br><span class=\"line\">    <span class=\"string\">'ja'</span>: ja.SearchJapanese,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>改为</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> sphinx.search <span class=\"keyword\">import</span> en, ja, zh_CN</span><br><span class=\"line\"></span><br><span class=\"line\">languages = &#123;</span><br><span class=\"line\">    <span class=\"string\">'en'</span>: en.SearchEnglish,</span><br><span class=\"line\">    <span class=\"string\">'ja'</span>: ja.SearchJapanese,</span><br><span class=\"line\">    <span class=\"string\">'zh_CN'</span>: zh_CN.SearchChinese</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>或者</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">languages = &#123;</span><br><span class=\"line\">    <span class=\"string\">'da'</span>: <span class=\"string\">'sphinx.search.da.SearchDanish'</span>,</span><br><span class=\"line\">    <span class=\"string\">'de'</span>: <span class=\"string\">'sphinx.search.de.SearchGerman'</span>,</span><br><span class=\"line\">    <span class=\"string\">'en'</span>: SearchEnglish,</span><br><span class=\"line\">    <span class=\"string\">'es'</span>: <span class=\"string\">'sphinx.search.es.SearchSpanish'</span>,</span><br><span class=\"line\">    <span class=\"string\">'fi'</span>: <span class=\"string\">'sphinx.search.fi.SearchFinnish'</span>,</span><br><span class=\"line\">    <span class=\"string\">'fr'</span>: <span class=\"string\">'sphinx.search.fr.SearchFrench'</span>,</span><br><span class=\"line\">    <span class=\"string\">'hu'</span>: <span class=\"string\">'sphinx.search.hu.SearchHungarian'</span>,</span><br><span class=\"line\">    <span class=\"string\">'it'</span>: <span class=\"string\">'sphinx.search.it.SearchItalian'</span>,</span><br><span class=\"line\">    <span class=\"string\">'ja'</span>: <span class=\"string\">'sphinx.search.ja.SearchJapanese'</span>,</span><br><span class=\"line\">    <span class=\"string\">'nl'</span>: <span class=\"string\">'sphinx.search.nl.SearchDutch'</span>,</span><br><span class=\"line\">    <span class=\"string\">'no'</span>: <span class=\"string\">'sphinx.search.no.SearchNorwegian'</span>,</span><br><span class=\"line\">    <span class=\"string\">'pt'</span>: <span class=\"string\">'sphinx.search.pt.SearchPortuguese'</span>,</span><br><span class=\"line\">    <span class=\"string\">'ro'</span>: <span class=\"string\">'sphinx.search.ro.SearchRomanian'</span>,</span><br><span class=\"line\">    <span class=\"string\">'ru'</span>: <span class=\"string\">'sphinx.search.ru.SearchRussian'</span>,</span><br><span class=\"line\">    <span class=\"string\">'sv'</span>: <span class=\"string\">'sphinx.search.sv.SearchSwedish'</span>,</span><br><span class=\"line\">    <span class=\"string\">'tr'</span>: <span class=\"string\">'sphinx.search.tr.SearchTurkish'</span>,</span><br><span class=\"line\">    <span class=\"string\">'zh_CN'</span>: <span class=\"string\">'sphinx.search.zh_CN.SearchChinese'</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>#修改sphinx配置文件</p>\n<pre><code>在sphinx工程的conf.py中添加language = &apos;zh_CN&apos;\n</code></pre><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make html</span><br></pre></td></tr></table></figure>\n"},{"title":"xml转json","date":"2015-05-19T16:00:00.000Z","comments":1,"_content":"\n最近要把以前写的xml文档释义转成json，写了一个脚本来转换，记录一下。\n主要难点在于处理注释和转换列表元素。\n\n``` python\n\n    #!/usr/bin/env python\n    # -*- coding: utf-8 -*-\n\n    from xml.etree.ElementTree import  Element\n    from lxml import etree\n\n    def xml2dict(element):\n        d = {}\n        is_comment = False\n        tag = element.tag\n        items = []\n        for child in element:\n            if child.tag == 'item':\n                children = element.xpath('item')\n                item = {}\n                if children:\n                    child = children[0]\n                    for c in child.getchildren():\n                        item.update(xml2dict(c))\n                    if item:\n                        items.append(item)\n            elif child.tag == etree.Comment:\n                has_siblings = False\n                for i in child.itersiblings():\n                    has_siblings = True\n                    break\n                if not has_siblings:\n                    is_comment = True\n                    d[tag] = child.text.strip()\n            else:\n                v = xml2dict(child)\n                value = v[child.tag]\n                d[child.tag] = value\n        if not d:\n            d = element.text\n        if items:\n            return {tag: items}\n        if is_comment:\n            return d\n        else:\n            return {tag: d}\n\n    if __name__ == '__main__':\n        element = '''<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n        <root>\n            <version><!-- 服务接口版本信息 --></version>\n            <result><!-- true / false, 是否请求成功 --></result>\n            <code><!-- 错误代码 --></code>\n            <ts>服务器时间戳</ts>\n            <test>\n                <child><!-- 含义 --></child>\n            </test>\n            <element_list>\n                <item>\n                    <no>1</no>\n                    <name>hello</name>\n                </item>\n                <item>\n                    <no>2</no>\n                    <name>world</name>\n                </item>\n            </element_list>\n        </root>\n        '''\n\n        import json\n        el = etree.fromstring(element)\n        print json.dumps(xml2dict(el), indent=4, ensure_ascii=False)\n```\n","source":"_posts/2015/5/xml转json.md","raw":"---\ntitle: xml转json\ndate: 2015-05-20 00:00:00\ncomments: true\ntags:\n    - xml转json\ncategories:\n    - python\n---\n\n最近要把以前写的xml文档释义转成json，写了一个脚本来转换，记录一下。\n主要难点在于处理注释和转换列表元素。\n\n``` python\n\n    #!/usr/bin/env python\n    # -*- coding: utf-8 -*-\n\n    from xml.etree.ElementTree import  Element\n    from lxml import etree\n\n    def xml2dict(element):\n        d = {}\n        is_comment = False\n        tag = element.tag\n        items = []\n        for child in element:\n            if child.tag == 'item':\n                children = element.xpath('item')\n                item = {}\n                if children:\n                    child = children[0]\n                    for c in child.getchildren():\n                        item.update(xml2dict(c))\n                    if item:\n                        items.append(item)\n            elif child.tag == etree.Comment:\n                has_siblings = False\n                for i in child.itersiblings():\n                    has_siblings = True\n                    break\n                if not has_siblings:\n                    is_comment = True\n                    d[tag] = child.text.strip()\n            else:\n                v = xml2dict(child)\n                value = v[child.tag]\n                d[child.tag] = value\n        if not d:\n            d = element.text\n        if items:\n            return {tag: items}\n        if is_comment:\n            return d\n        else:\n            return {tag: d}\n\n    if __name__ == '__main__':\n        element = '''<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n        <root>\n            <version><!-- 服务接口版本信息 --></version>\n            <result><!-- true / false, 是否请求成功 --></result>\n            <code><!-- 错误代码 --></code>\n            <ts>服务器时间戳</ts>\n            <test>\n                <child><!-- 含义 --></child>\n            </test>\n            <element_list>\n                <item>\n                    <no>1</no>\n                    <name>hello</name>\n                </item>\n                <item>\n                    <no>2</no>\n                    <name>world</name>\n                </item>\n            </element_list>\n        </root>\n        '''\n\n        import json\n        el = etree.fromstring(element)\n        print json.dumps(xml2dict(el), indent=4, ensure_ascii=False)\n```\n","slug":"2015/5/xml转json","published":1,"updated":"2016-06-10T02:44:12.000Z","_id":"cio8l42kj002d3mi4iv2h8o30","layout":"post","photos":[],"link":"","content":"<p>最近要把以前写的xml文档释义转成json，写了一个脚本来转换，记录一下。<br>主要难点在于处理注释和转换列表元素。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> xml.etree.ElementTree <span class=\"keyword\">import</span>  Element</span><br><span class=\"line\"><span class=\"keyword\">from</span> lxml <span class=\"keyword\">import</span> etree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">xml2dict</span><span class=\"params\">(element)</span>:</span></span><br><span class=\"line\">    d = &#123;&#125;</span><br><span class=\"line\">    is_comment = <span class=\"keyword\">False</span></span><br><span class=\"line\">    tag = element.tag</span><br><span class=\"line\">    items = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> child <span class=\"keyword\">in</span> element:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> child.tag == <span class=\"string\">'item'</span>:</span><br><span class=\"line\">            children = element.xpath(<span class=\"string\">'item'</span>)</span><br><span class=\"line\">            item = &#123;&#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> children:</span><br><span class=\"line\">                child = children[<span class=\"number\">0</span>]</span><br><span class=\"line\">                <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> child.getchildren():</span><br><span class=\"line\">                    item.update(xml2dict(c))</span><br><span class=\"line\">                <span class=\"keyword\">if</span> item:</span><br><span class=\"line\">                    items.append(item)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> child.tag == etree.Comment:</span><br><span class=\"line\">            has_siblings = <span class=\"keyword\">False</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> child.itersiblings():</span><br><span class=\"line\">                has_siblings = <span class=\"keyword\">True</span></span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> has_siblings:</span><br><span class=\"line\">                is_comment = <span class=\"keyword\">True</span></span><br><span class=\"line\">                d[tag] = child.text.strip()</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            v = xml2dict(child)</span><br><span class=\"line\">            value = v[child.tag]</span><br><span class=\"line\">            d[child.tag] = value</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> d:</span><br><span class=\"line\">        d = element.text</span><br><span class=\"line\">    <span class=\"keyword\">if</span> items:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;tag: items&#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> is_comment:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> d</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;tag: d&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    element = <span class=\"string\">'''&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?&gt;</span><br><span class=\"line\">    &lt;root&gt;</span><br><span class=\"line\">        &lt;version&gt;&lt;!-- 服务接口版本信息 --&gt;&lt;/version&gt;</span><br><span class=\"line\">        &lt;result&gt;&lt;!-- true / false, 是否请求成功 --&gt;&lt;/result&gt;</span><br><span class=\"line\">        &lt;code&gt;&lt;!-- 错误代码 --&gt;&lt;/code&gt;</span><br><span class=\"line\">        &lt;ts&gt;服务器时间戳&lt;/ts&gt;</span><br><span class=\"line\">        &lt;test&gt;</span><br><span class=\"line\">            &lt;child&gt;&lt;!-- 含义 --&gt;&lt;/child&gt;</span><br><span class=\"line\">        &lt;/test&gt;</span><br><span class=\"line\">        &lt;element_list&gt;</span><br><span class=\"line\">            &lt;item&gt;</span><br><span class=\"line\">                &lt;no&gt;1&lt;/no&gt;</span><br><span class=\"line\">                &lt;name&gt;hello&lt;/name&gt;</span><br><span class=\"line\">            &lt;/item&gt;</span><br><span class=\"line\">            &lt;item&gt;</span><br><span class=\"line\">                &lt;no&gt;2&lt;/no&gt;</span><br><span class=\"line\">                &lt;name&gt;world&lt;/name&gt;</span><br><span class=\"line\">            &lt;/item&gt;</span><br><span class=\"line\">        &lt;/element_list&gt;</span><br><span class=\"line\">    &lt;/root&gt;</span><br><span class=\"line\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">import</span> json</span><br><span class=\"line\">    el = etree.fromstring(element)</span><br><span class=\"line\">    <span class=\"keyword\">print</span> json.dumps(xml2dict(el), indent=<span class=\"number\">4</span>, ensure_ascii=<span class=\"keyword\">False</span>)</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>最近要把以前写的xml文档释义转成json，写了一个脚本来转换，记录一下。<br>主要难点在于处理注释和转换列表元素。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> xml.etree.ElementTree <span class=\"keyword\">import</span>  Element</span><br><span class=\"line\"><span class=\"keyword\">from</span> lxml <span class=\"keyword\">import</span> etree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">xml2dict</span><span class=\"params\">(element)</span>:</span></span><br><span class=\"line\">    d = &#123;&#125;</span><br><span class=\"line\">    is_comment = <span class=\"keyword\">False</span></span><br><span class=\"line\">    tag = element.tag</span><br><span class=\"line\">    items = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> child <span class=\"keyword\">in</span> element:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> child.tag == <span class=\"string\">'item'</span>:</span><br><span class=\"line\">            children = element.xpath(<span class=\"string\">'item'</span>)</span><br><span class=\"line\">            item = &#123;&#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> children:</span><br><span class=\"line\">                child = children[<span class=\"number\">0</span>]</span><br><span class=\"line\">                <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> child.getchildren():</span><br><span class=\"line\">                    item.update(xml2dict(c))</span><br><span class=\"line\">                <span class=\"keyword\">if</span> item:</span><br><span class=\"line\">                    items.append(item)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> child.tag == etree.Comment:</span><br><span class=\"line\">            has_siblings = <span class=\"keyword\">False</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> child.itersiblings():</span><br><span class=\"line\">                has_siblings = <span class=\"keyword\">True</span></span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> has_siblings:</span><br><span class=\"line\">                is_comment = <span class=\"keyword\">True</span></span><br><span class=\"line\">                d[tag] = child.text.strip()</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            v = xml2dict(child)</span><br><span class=\"line\">            value = v[child.tag]</span><br><span class=\"line\">            d[child.tag] = value</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> d:</span><br><span class=\"line\">        d = element.text</span><br><span class=\"line\">    <span class=\"keyword\">if</span> items:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;tag: items&#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> is_comment:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> d</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;tag: d&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    element = <span class=\"string\">'''&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?&gt;</span><br><span class=\"line\">    &lt;root&gt;</span><br><span class=\"line\">        &lt;version&gt;&lt;!-- 服务接口版本信息 --&gt;&lt;/version&gt;</span><br><span class=\"line\">        &lt;result&gt;&lt;!-- true / false, 是否请求成功 --&gt;&lt;/result&gt;</span><br><span class=\"line\">        &lt;code&gt;&lt;!-- 错误代码 --&gt;&lt;/code&gt;</span><br><span class=\"line\">        &lt;ts&gt;服务器时间戳&lt;/ts&gt;</span><br><span class=\"line\">        &lt;test&gt;</span><br><span class=\"line\">            &lt;child&gt;&lt;!-- 含义 --&gt;&lt;/child&gt;</span><br><span class=\"line\">        &lt;/test&gt;</span><br><span class=\"line\">        &lt;element_list&gt;</span><br><span class=\"line\">            &lt;item&gt;</span><br><span class=\"line\">                &lt;no&gt;1&lt;/no&gt;</span><br><span class=\"line\">                &lt;name&gt;hello&lt;/name&gt;</span><br><span class=\"line\">            &lt;/item&gt;</span><br><span class=\"line\">            &lt;item&gt;</span><br><span class=\"line\">                &lt;no&gt;2&lt;/no&gt;</span><br><span class=\"line\">                &lt;name&gt;world&lt;/name&gt;</span><br><span class=\"line\">            &lt;/item&gt;</span><br><span class=\"line\">        &lt;/element_list&gt;</span><br><span class=\"line\">    &lt;/root&gt;</span><br><span class=\"line\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">import</span> json</span><br><span class=\"line\">    el = etree.fromstring(element)</span><br><span class=\"line\">    <span class=\"keyword\">print</span> json.dumps(xml2dict(el), indent=<span class=\"number\">4</span>, ensure_ascii=<span class=\"keyword\">False</span>)</span><br></pre></td></tr></table></figure>\n"},{"title":"go语言创建、解析json","date":"2016-04-06T12:29:48.000Z","comments":1,"_content":"\nJSON已经成为最流行的数据交换格式，在python里我们可以用json.dumps和json.loads来创建和解析JSON数据，那么在Go语言里是怎么处理JSON的呢？\n\n在Go语言里面，如果要把一个结构体转成JSON，只需要调用json.Marshal即可，类似于json.dumps，返回的是[]byte。在结构体字段后面添加\\`json:\"name\"\\`可以指定JSON键名。\n\n\n``` go\n\n    package main\n\n    import \"fmt\"\n    import \"encoding/json\"\n\n    type Message struct {\n      Name string `json:\"name\"`\n      Body string `json:\"body\"`\n      Time int64 `json:\"time\"`\n    }\n\n    func main() {\n      m := Message{\"Alice\", \"Hello\", 1294706395881547000}\n      b, err := json.Marshal(m)\n      if (err == nil){\n          fmt.Println(string(b)) // json.Marshal返回的是[]byte\n      } else {\n          fmt.Println(err)\n      }\n    }\n```\n\n如果要把JSON转成结构体，只需要调用json.Unmarshal，这在静态语言里比较常见，当然要把结构体传进去。如果不知道JSON的格式或者JSON格式不一致，那就不能用这种方法了，这时候可以转成map。\n\n\n``` go\n\n    package main\n    import \"fmt\"\n    import \"encoding/json\"\n\n    type Message struct {\n        Name string `json:\"name\"`\n        Body string `json:\"body\"`\n        Time int64 `json:\"time\"`\n    }\n\n    func main() {\n        m := Message{\"Alice\", \"Hello\", 1294706395881547000}\n        bytes, err := json.Marshal(m)\n        if (err == nil){\n            fmt.Println(string(bytes)) // json.Marshal返回的是[]byte\n\n            result := map[string]interface{}{}\n            err := json.Unmarshal(bytes, &result)\n            if (err == nil){\n                fmt.Printf(\"\\n%+v\", result) // json.Unmarshal转成map\n                fmt.Printf(\"\\ntype %T; value %#v\\n\", result[\"time\"], result[\"time\"])\n            } else {\n                fmt.Println(err)\n            }\n      } else {\n          fmt.Println(err)\n      }\n    }\n```\n\n输出如下：\n\n``` bash\n\n    {\"name\":\"Alice\",\"body\":\"Hello\",\"time\":1294706395881547000}\n    map[name:Alice body:Hello time:1.294706395881547e+18]\n    type float64; value 1.294706395881547e+18\n```\n\n\n如果某一个字段的值为长整型，解析的时候可能会丢失精度，JSON都会当作double来存储。\n在明确类型的情况下可以使用特定的类型，比如int64，前提是类型相同，类型不同或者类型不明确的话应该当作number解析，使用deocoder.UseNumber()配置。\n\n``` go\n    package main\n\n    import (\n        \"bytes\"\n        \"encoding/json\"\n        \"fmt\"\n    )\n\n    type Message struct {\n        Name string `json:\"name\"`\n        Body string `json:\"body\"`\n        Time int64 `json:\"time\"`\n    }\n\n    func main() {\n        m := Message{\"Alice\", \"Hello\", 1294706395881547000}\n        b, err := json.Marshal(m)\n        if (err == nil){\n            result := map[string]interface{}{}\n            decoder := json.NewDecoder(bytes.NewReader(b))\n            decoder.UseNumber()\n            err = decoder.Decode(&result)\n            if (err == nil){\n                fmt.Printf(\"\\n%+v\", result)\n                fmt.Printf(\"\\ntype %T; value %#v\\n\", result[\"time\"], result[\"time\"])\n            } else {\n                fmt.Println(err)\n            }\n        } else {\n            fmt.Println(err)\n        }\n    }\n```\n\n输出如下：\n\n``` bash\n\n    {\"name\":\"Alice\",\"body\":\"Hello\",\"time\":1294706395881547000}\n\n    map[name:Alice body:Hello time:1294706395881547000]\n    type json.Number; value \"1294706395881547000\"\n```\n\n\n参考：\n\n    - `After Json unmarshaling big ints become floats <https://groups.google.com/forum/#!topic/golang-nuts/TDuGDJAIuVM>`_  \n    - `golang json unmarshal int literals as float64 <http://grokbase.com/t/gg/golang-nuts/14cfjj4vf0/go-nuts-json-unmarshal-int-literals-as-float64>`_\n","source":"_posts/2016/4/go语言创建、解析JSON.md","raw":"---\ntitle: go语言创建、解析json\ndate: 2016-04-06 20:29:48\ncomments: true\ntags:\n    - Go\n    - Json\ncategories:\n    - Go\n---\n\nJSON已经成为最流行的数据交换格式，在python里我们可以用json.dumps和json.loads来创建和解析JSON数据，那么在Go语言里是怎么处理JSON的呢？\n\n在Go语言里面，如果要把一个结构体转成JSON，只需要调用json.Marshal即可，类似于json.dumps，返回的是[]byte。在结构体字段后面添加\\`json:\"name\"\\`可以指定JSON键名。\n\n\n``` go\n\n    package main\n\n    import \"fmt\"\n    import \"encoding/json\"\n\n    type Message struct {\n      Name string `json:\"name\"`\n      Body string `json:\"body\"`\n      Time int64 `json:\"time\"`\n    }\n\n    func main() {\n      m := Message{\"Alice\", \"Hello\", 1294706395881547000}\n      b, err := json.Marshal(m)\n      if (err == nil){\n          fmt.Println(string(b)) // json.Marshal返回的是[]byte\n      } else {\n          fmt.Println(err)\n      }\n    }\n```\n\n如果要把JSON转成结构体，只需要调用json.Unmarshal，这在静态语言里比较常见，当然要把结构体传进去。如果不知道JSON的格式或者JSON格式不一致，那就不能用这种方法了，这时候可以转成map。\n\n\n``` go\n\n    package main\n    import \"fmt\"\n    import \"encoding/json\"\n\n    type Message struct {\n        Name string `json:\"name\"`\n        Body string `json:\"body\"`\n        Time int64 `json:\"time\"`\n    }\n\n    func main() {\n        m := Message{\"Alice\", \"Hello\", 1294706395881547000}\n        bytes, err := json.Marshal(m)\n        if (err == nil){\n            fmt.Println(string(bytes)) // json.Marshal返回的是[]byte\n\n            result := map[string]interface{}{}\n            err := json.Unmarshal(bytes, &result)\n            if (err == nil){\n                fmt.Printf(\"\\n%+v\", result) // json.Unmarshal转成map\n                fmt.Printf(\"\\ntype %T; value %#v\\n\", result[\"time\"], result[\"time\"])\n            } else {\n                fmt.Println(err)\n            }\n      } else {\n          fmt.Println(err)\n      }\n    }\n```\n\n输出如下：\n\n``` bash\n\n    {\"name\":\"Alice\",\"body\":\"Hello\",\"time\":1294706395881547000}\n    map[name:Alice body:Hello time:1.294706395881547e+18]\n    type float64; value 1.294706395881547e+18\n```\n\n\n如果某一个字段的值为长整型，解析的时候可能会丢失精度，JSON都会当作double来存储。\n在明确类型的情况下可以使用特定的类型，比如int64，前提是类型相同，类型不同或者类型不明确的话应该当作number解析，使用deocoder.UseNumber()配置。\n\n``` go\n    package main\n\n    import (\n        \"bytes\"\n        \"encoding/json\"\n        \"fmt\"\n    )\n\n    type Message struct {\n        Name string `json:\"name\"`\n        Body string `json:\"body\"`\n        Time int64 `json:\"time\"`\n    }\n\n    func main() {\n        m := Message{\"Alice\", \"Hello\", 1294706395881547000}\n        b, err := json.Marshal(m)\n        if (err == nil){\n            result := map[string]interface{}{}\n            decoder := json.NewDecoder(bytes.NewReader(b))\n            decoder.UseNumber()\n            err = decoder.Decode(&result)\n            if (err == nil){\n                fmt.Printf(\"\\n%+v\", result)\n                fmt.Printf(\"\\ntype %T; value %#v\\n\", result[\"time\"], result[\"time\"])\n            } else {\n                fmt.Println(err)\n            }\n        } else {\n            fmt.Println(err)\n        }\n    }\n```\n\n输出如下：\n\n``` bash\n\n    {\"name\":\"Alice\",\"body\":\"Hello\",\"time\":1294706395881547000}\n\n    map[name:Alice body:Hello time:1294706395881547000]\n    type json.Number; value \"1294706395881547000\"\n```\n\n\n参考：\n\n    - `After Json unmarshaling big ints become floats <https://groups.google.com/forum/#!topic/golang-nuts/TDuGDJAIuVM>`_  \n    - `golang json unmarshal int literals as float64 <http://grokbase.com/t/gg/golang-nuts/14cfjj4vf0/go-nuts-json-unmarshal-int-literals-as-float64>`_\n","slug":"2016/4/go语言创建、解析JSON","published":1,"updated":"2016-06-10T02:59:01.000Z","_id":"cip94yaq90000c5bj1ufzcwaw","layout":"post","photos":[],"link":"","content":"<p>JSON已经成为最流行的数据交换格式，在python里我们可以用json.dumps和json.loads来创建和解析JSON数据，那么在Go语言里是怎么处理JSON的呢？</p>\n<p>在Go语言里面，如果要把一个结构体转成JSON，只需要调用json.Marshal即可，类似于json.dumps，返回的是[]byte。在结构体字段后面添加`json:”name”`可以指定JSON键名。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"fmt\"</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"encoding/json\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Message <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">  Name <span class=\"keyword\">string</span> <span class=\"string\">`json:\"name\"`</span></span><br><span class=\"line\">  Body <span class=\"keyword\">string</span> <span class=\"string\">`json:\"body\"`</span></span><br><span class=\"line\">  Time <span class=\"keyword\">int64</span> <span class=\"string\">`json:\"time\"`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> main() &#123;</span><br><span class=\"line\">  m := Message&#123;<span class=\"string\">\"Alice\"</span>, <span class=\"string\">\"Hello\"</span>, <span class=\"number\">1294706395881547000</span>&#125;</span><br><span class=\"line\">  b, err := json.Marshal(m)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (err == <span class=\"literal\">nil</span>)&#123;</span><br><span class=\"line\">      fmt.Println(<span class=\"keyword\">string</span>(b)) <span class=\"comment\">// json.Marshal返回的是[]byte</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      fmt.Println(err)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果要把JSON转成结构体，只需要调用json.Unmarshal，这在静态语言里比较常见，当然要把结构体传进去。如果不知道JSON的格式或者JSON格式不一致，那就不能用这种方法了，这时候可以转成map。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"fmt\"</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"encoding/json\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Message <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">    Name <span class=\"keyword\">string</span> <span class=\"string\">`json:\"name\"`</span></span><br><span class=\"line\">    Body <span class=\"keyword\">string</span> <span class=\"string\">`json:\"body\"`</span></span><br><span class=\"line\">    Time <span class=\"keyword\">int64</span> <span class=\"string\">`json:\"time\"`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> main() &#123;</span><br><span class=\"line\">    m := Message&#123;<span class=\"string\">\"Alice\"</span>, <span class=\"string\">\"Hello\"</span>, <span class=\"number\">1294706395881547000</span>&#125;</span><br><span class=\"line\">    bytes, err := json.Marshal(m)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err == <span class=\"literal\">nil</span>)&#123;</span><br><span class=\"line\">        fmt.Println(<span class=\"keyword\">string</span>(bytes)) <span class=\"comment\">// json.Marshal返回的是[]byte</span></span><br><span class=\"line\"></span><br><span class=\"line\">        result := <span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>]<span class=\"keyword\">interface</span>&#123;&#125;&#123;&#125;</span><br><span class=\"line\">        err := json.Unmarshal(bytes, &amp;result)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err == <span class=\"literal\">nil</span>)&#123;</span><br><span class=\"line\">            fmt.Printf(<span class=\"string\">\"\\n%+v\"</span>, result) <span class=\"comment\">// json.Unmarshal转成map</span></span><br><span class=\"line\">            fmt.Printf(<span class=\"string\">\"\\ntype %T; value %#v\\n\"</span>, result[<span class=\"string\">\"time\"</span>], result[<span class=\"string\">\"time\"</span>])</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            fmt.Println(err)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      fmt.Println(err)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>输出如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"Alice\"</span>,<span class=\"string\">\"body\"</span>:<span class=\"string\">\"Hello\"</span>,<span class=\"string\">\"time\"</span>:1294706395881547000&#125;</span><br><span class=\"line\">map[name:Alice body:Hello time:1.294706395881547e+18]</span><br><span class=\"line\"><span class=\"built_in\">type</span> <span class=\"built_in\">float</span>64; value 1.294706395881547e+18</span><br></pre></td></tr></table></figure>\n<p>如果某一个字段的值为长整型，解析的时候可能会丢失精度，JSON都会当作double来存储。<br>在明确类型的情况下可以使用特定的类型，比如int64，前提是类型相同，类型不同或者类型不明确的话应该当作number解析，使用deocoder.UseNumber()配置。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">    <span class=\"string\">\"bytes\"</span></span><br><span class=\"line\">    <span class=\"string\">\"encoding/json\"</span></span><br><span class=\"line\">    <span class=\"string\">\"fmt\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Message <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">    Name <span class=\"keyword\">string</span> <span class=\"string\">`json:\"name\"`</span></span><br><span class=\"line\">    Body <span class=\"keyword\">string</span> <span class=\"string\">`json:\"body\"`</span></span><br><span class=\"line\">    Time <span class=\"keyword\">int64</span> <span class=\"string\">`json:\"time\"`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> main() &#123;</span><br><span class=\"line\">    m := Message&#123;<span class=\"string\">\"Alice\"</span>, <span class=\"string\">\"Hello\"</span>, <span class=\"number\">1294706395881547000</span>&#125;</span><br><span class=\"line\">    b, err := json.Marshal(m)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err == <span class=\"literal\">nil</span>)&#123;</span><br><span class=\"line\">        result := <span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>]<span class=\"keyword\">interface</span>&#123;&#125;&#123;&#125;</span><br><span class=\"line\">        decoder := json.NewDecoder(bytes.NewReader(b))</span><br><span class=\"line\">        decoder.UseNumber()</span><br><span class=\"line\">        err = decoder.Decode(&amp;result)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err == <span class=\"literal\">nil</span>)&#123;</span><br><span class=\"line\">            fmt.Printf(<span class=\"string\">\"\\n%+v\"</span>, result)</span><br><span class=\"line\">            fmt.Printf(<span class=\"string\">\"\\ntype %T; value %#v\\n\"</span>, result[<span class=\"string\">\"time\"</span>], result[<span class=\"string\">\"time\"</span>])</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            fmt.Println(err)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        fmt.Println(err)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>输出如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"Alice\"</span>,<span class=\"string\">\"body\"</span>:<span class=\"string\">\"Hello\"</span>,<span class=\"string\">\"time\"</span>:1294706395881547000&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">map[name:Alice body:Hello time:1294706395881547000]</span><br><span class=\"line\"><span class=\"built_in\">type</span> json.Number; value <span class=\"string\">\"1294706395881547000\"</span></span><br></pre></td></tr></table></figure>\n<p>参考：</p>\n<pre><code>- `After Json unmarshaling big ints become floats &lt;https://groups.google.com/forum/#!topic/golang-nuts/TDuGDJAIuVM&gt;`_  \n- `golang json unmarshal int literals as float64 &lt;http://grokbase.com/t/gg/golang-nuts/14cfjj4vf0/go-nuts-json-unmarshal-int-literals-as-float64&gt;`_\n</code></pre>","excerpt":"","more":"<p>JSON已经成为最流行的数据交换格式，在python里我们可以用json.dumps和json.loads来创建和解析JSON数据，那么在Go语言里是怎么处理JSON的呢？</p>\n<p>在Go语言里面，如果要把一个结构体转成JSON，只需要调用json.Marshal即可，类似于json.dumps，返回的是[]byte。在结构体字段后面添加`json:”name”`可以指定JSON键名。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"fmt\"</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"encoding/json\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Message <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">  Name <span class=\"keyword\">string</span> <span class=\"string\">`json:\"name\"`</span></span><br><span class=\"line\">  Body <span class=\"keyword\">string</span> <span class=\"string\">`json:\"body\"`</span></span><br><span class=\"line\">  Time <span class=\"keyword\">int64</span> <span class=\"string\">`json:\"time\"`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> main() &#123;</span><br><span class=\"line\">  m := Message&#123;<span class=\"string\">\"Alice\"</span>, <span class=\"string\">\"Hello\"</span>, <span class=\"number\">1294706395881547000</span>&#125;</span><br><span class=\"line\">  b, err := json.Marshal(m)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (err == <span class=\"literal\">nil</span>)&#123;</span><br><span class=\"line\">      fmt.Println(<span class=\"keyword\">string</span>(b)) <span class=\"comment\">// json.Marshal返回的是[]byte</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      fmt.Println(err)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果要把JSON转成结构体，只需要调用json.Unmarshal，这在静态语言里比较常见，当然要把结构体传进去。如果不知道JSON的格式或者JSON格式不一致，那就不能用这种方法了，这时候可以转成map。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"fmt\"</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"encoding/json\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Message <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">    Name <span class=\"keyword\">string</span> <span class=\"string\">`json:\"name\"`</span></span><br><span class=\"line\">    Body <span class=\"keyword\">string</span> <span class=\"string\">`json:\"body\"`</span></span><br><span class=\"line\">    Time <span class=\"keyword\">int64</span> <span class=\"string\">`json:\"time\"`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> main() &#123;</span><br><span class=\"line\">    m := Message&#123;<span class=\"string\">\"Alice\"</span>, <span class=\"string\">\"Hello\"</span>, <span class=\"number\">1294706395881547000</span>&#125;</span><br><span class=\"line\">    bytes, err := json.Marshal(m)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err == <span class=\"literal\">nil</span>)&#123;</span><br><span class=\"line\">        fmt.Println(<span class=\"keyword\">string</span>(bytes)) <span class=\"comment\">// json.Marshal返回的是[]byte</span></span><br><span class=\"line\"></span><br><span class=\"line\">        result := <span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>]<span class=\"keyword\">interface</span>&#123;&#125;&#123;&#125;</span><br><span class=\"line\">        err := json.Unmarshal(bytes, &amp;result)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err == <span class=\"literal\">nil</span>)&#123;</span><br><span class=\"line\">            fmt.Printf(<span class=\"string\">\"\\n%+v\"</span>, result) <span class=\"comment\">// json.Unmarshal转成map</span></span><br><span class=\"line\">            fmt.Printf(<span class=\"string\">\"\\ntype %T; value %#v\\n\"</span>, result[<span class=\"string\">\"time\"</span>], result[<span class=\"string\">\"time\"</span>])</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            fmt.Println(err)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      fmt.Println(err)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>输出如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"Alice\"</span>,<span class=\"string\">\"body\"</span>:<span class=\"string\">\"Hello\"</span>,<span class=\"string\">\"time\"</span>:1294706395881547000&#125;</span><br><span class=\"line\">map[name:Alice body:Hello time:1.294706395881547e+18]</span><br><span class=\"line\"><span class=\"built_in\">type</span> <span class=\"built_in\">float</span>64; value 1.294706395881547e+18</span><br></pre></td></tr></table></figure>\n<p>如果某一个字段的值为长整型，解析的时候可能会丢失精度，JSON都会当作double来存储。<br>在明确类型的情况下可以使用特定的类型，比如int64，前提是类型相同，类型不同或者类型不明确的话应该当作number解析，使用deocoder.UseNumber()配置。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">    <span class=\"string\">\"bytes\"</span></span><br><span class=\"line\">    <span class=\"string\">\"encoding/json\"</span></span><br><span class=\"line\">    <span class=\"string\">\"fmt\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Message <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">    Name <span class=\"keyword\">string</span> <span class=\"string\">`json:\"name\"`</span></span><br><span class=\"line\">    Body <span class=\"keyword\">string</span> <span class=\"string\">`json:\"body\"`</span></span><br><span class=\"line\">    Time <span class=\"keyword\">int64</span> <span class=\"string\">`json:\"time\"`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> main() &#123;</span><br><span class=\"line\">    m := Message&#123;<span class=\"string\">\"Alice\"</span>, <span class=\"string\">\"Hello\"</span>, <span class=\"number\">1294706395881547000</span>&#125;</span><br><span class=\"line\">    b, err := json.Marshal(m)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err == <span class=\"literal\">nil</span>)&#123;</span><br><span class=\"line\">        result := <span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>]<span class=\"keyword\">interface</span>&#123;&#125;&#123;&#125;</span><br><span class=\"line\">        decoder := json.NewDecoder(bytes.NewReader(b))</span><br><span class=\"line\">        decoder.UseNumber()</span><br><span class=\"line\">        err = decoder.Decode(&amp;result)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err == <span class=\"literal\">nil</span>)&#123;</span><br><span class=\"line\">            fmt.Printf(<span class=\"string\">\"\\n%+v\"</span>, result)</span><br><span class=\"line\">            fmt.Printf(<span class=\"string\">\"\\ntype %T; value %#v\\n\"</span>, result[<span class=\"string\">\"time\"</span>], result[<span class=\"string\">\"time\"</span>])</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            fmt.Println(err)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        fmt.Println(err)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>输出如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"Alice\"</span>,<span class=\"string\">\"body\"</span>:<span class=\"string\">\"Hello\"</span>,<span class=\"string\">\"time\"</span>:1294706395881547000&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">map[name:Alice body:Hello time:1294706395881547000]</span><br><span class=\"line\"><span class=\"built_in\">type</span> json.Number; value <span class=\"string\">\"1294706395881547000\"</span></span><br></pre></td></tr></table></figure>\n<p>参考：</p>\n<pre><code>- `After Json unmarshaling big ints become floats &lt;https://groups.google.com/forum/#!topic/golang-nuts/TDuGDJAIuVM&gt;`_  \n- `golang json unmarshal int literals as float64 &lt;http://grokbase.com/t/gg/golang-nuts/14cfjj4vf0/go-nuts-json-unmarshal-int-literals-as-float64&gt;`_\n</code></pre>"},{"title":"go语言如何使用关键字参数","date":"2016-04-01T16:00:00.000Z","comments":1,"_content":"\n最近打算写一个golang版本的requests库用，遇到一个问题是如何模拟python函数的关键字参数。\n\n举个栗子，我需要实现一个设置timeout和headers的功能，requests可以这样设置\n\n``` python\n\n    requests.get(url, headers={\"content-type\": \"application/json\"}, timeout=10)\n\n```\n    \n\n那用go如何实现呢？其实只需要写两个函数设置headers和timeout，然后作为可变参数传到发送请求的函数里就行了。\n\n\n``` go\n\n\n    func (r *Request) setHeaders(headers map[string]string) error {\n        r.Args[\"headers\"] = headers\n        return nil\n    }\n\n\n    func Headers(headers map[string]string) func(*Request) error {\n        return func(r *Request) error {\n            return r.setHeaders(headers)\n        }\n    }\n\n    func (r *Request) MakeRequest(method string, uri string, options ...func(*Request) error) (*Response, error) {\n    }\n\n```\n\n\n附完整代码实现：\n\n``` go\n\n    package main\n\n    import \"fmt\"\n\n    import \"time\"\n    import \"net/http\"\n    import \"io/ioutil\"\n\n    type M map[string]interface{}\n\n    type Request struct {\n        Url  string\n        Args M\n    }\n\n    type Response struct {\n        Content string\n    }\n\n    func (r *Request) setHeaders(headers map[string]string) error {\n        r.Args[\"headers\"] = headers\n        return nil\n    }\n\n    func Headers(headers map[string]string) func(*Request) error {\n        return func(r *Request) error {\n            return r.setHeaders(headers)\n        }\n    }\n\n    func (r *Request) setTimeout(timeout int) error {\n        r.Args[\"timeout\"] = int(timeout)\n        return nil\n    }\n\n    func Timeout(timeout int) func(*Request) error {\n        return func(r *Request) error {\n            return r.setTimeout(timeout)\n        }\n    }\n\n    func (r *Request) MakeRequest(method string, uri string, options ...func(*Request) error) (*Response, error) {\n\n        req, err := http.NewRequest(method, uri, nil)\n\n        for _, option := range options {\n            err := option(r)\n            if err != nil {\n                panic(err)\n            }\n        }\n\n        transport := &http.Transport{}\n        client := &http.Client{\n            Transport: transport,\n        }\n\n        timeoutSeconds := r.Args[\"timeout\"].(int)\n        timeout := time.Duration(0) * time.Second\n        if timeoutSeconds > 0 {\n            timeout = time.Duration(timeoutSeconds) * time.Second\n        }\n        client.Timeout = timeout\n\n        resp, err := client.Do(req)\n        if err != nil {\n            panic(err)\n        }\n        defer resp.Body.Close()\n        body, err := ioutil.ReadAll(resp.Body)\n        response := &Response{}\n        if err != nil {\n            panic(err)\n        } else {\n            response.Content = string(body)\n        }\n        return response, nil\n    }\n\n    func main() {\n        kwargs := M{}\n        headers := map[string]string{\n            \"content-Type\": \"application/json\",\n            \"user-agent\": \"Golang requests\",\n        }\n\n        req := &Request{Args: kwargs}\n        resp, _ := req.MakeRequest(\"GET\", \"http://www.example.com\", Timeout(10), Headers(headers))\n        fmt.Println(resp.Content)\n        resp, _ = req.MakeRequest(\"GET\", \"http://www.example.com\", Timeout(1), Headers(headers))\n        fmt.Println(resp.Content)\n    }\n```\n\n\n参考：\n\n    - [different ways to simulate keyword arguments](https://www.reddit.com/r/golang/comments/3gi0pf/different_ways_to_simulate_keyword_arguments)\n    - [self referential functions and design](http://commandcenter.blogspot.nl/2014/01/self-referential-functions-and-design.html)\n    - [functional options for friendly apis] (http://dave.cheney.net/2014/10/17/functional-options-for-friendly-apis)\n","source":"_posts/2016/4/go语言如何使用关键字参数.md","raw":"---\ntitle: go语言如何使用关键字参数\ndate: 2016-04-02 00:00:00\ncomments: true\ntags:\n    - Go\n    - 关键字参数\ncategories:\n    - Go\n---\n\n最近打算写一个golang版本的requests库用，遇到一个问题是如何模拟python函数的关键字参数。\n\n举个栗子，我需要实现一个设置timeout和headers的功能，requests可以这样设置\n\n``` python\n\n    requests.get(url, headers={\"content-type\": \"application/json\"}, timeout=10)\n\n```\n    \n\n那用go如何实现呢？其实只需要写两个函数设置headers和timeout，然后作为可变参数传到发送请求的函数里就行了。\n\n\n``` go\n\n\n    func (r *Request) setHeaders(headers map[string]string) error {\n        r.Args[\"headers\"] = headers\n        return nil\n    }\n\n\n    func Headers(headers map[string]string) func(*Request) error {\n        return func(r *Request) error {\n            return r.setHeaders(headers)\n        }\n    }\n\n    func (r *Request) MakeRequest(method string, uri string, options ...func(*Request) error) (*Response, error) {\n    }\n\n```\n\n\n附完整代码实现：\n\n``` go\n\n    package main\n\n    import \"fmt\"\n\n    import \"time\"\n    import \"net/http\"\n    import \"io/ioutil\"\n\n    type M map[string]interface{}\n\n    type Request struct {\n        Url  string\n        Args M\n    }\n\n    type Response struct {\n        Content string\n    }\n\n    func (r *Request) setHeaders(headers map[string]string) error {\n        r.Args[\"headers\"] = headers\n        return nil\n    }\n\n    func Headers(headers map[string]string) func(*Request) error {\n        return func(r *Request) error {\n            return r.setHeaders(headers)\n        }\n    }\n\n    func (r *Request) setTimeout(timeout int) error {\n        r.Args[\"timeout\"] = int(timeout)\n        return nil\n    }\n\n    func Timeout(timeout int) func(*Request) error {\n        return func(r *Request) error {\n            return r.setTimeout(timeout)\n        }\n    }\n\n    func (r *Request) MakeRequest(method string, uri string, options ...func(*Request) error) (*Response, error) {\n\n        req, err := http.NewRequest(method, uri, nil)\n\n        for _, option := range options {\n            err := option(r)\n            if err != nil {\n                panic(err)\n            }\n        }\n\n        transport := &http.Transport{}\n        client := &http.Client{\n            Transport: transport,\n        }\n\n        timeoutSeconds := r.Args[\"timeout\"].(int)\n        timeout := time.Duration(0) * time.Second\n        if timeoutSeconds > 0 {\n            timeout = time.Duration(timeoutSeconds) * time.Second\n        }\n        client.Timeout = timeout\n\n        resp, err := client.Do(req)\n        if err != nil {\n            panic(err)\n        }\n        defer resp.Body.Close()\n        body, err := ioutil.ReadAll(resp.Body)\n        response := &Response{}\n        if err != nil {\n            panic(err)\n        } else {\n            response.Content = string(body)\n        }\n        return response, nil\n    }\n\n    func main() {\n        kwargs := M{}\n        headers := map[string]string{\n            \"content-Type\": \"application/json\",\n            \"user-agent\": \"Golang requests\",\n        }\n\n        req := &Request{Args: kwargs}\n        resp, _ := req.MakeRequest(\"GET\", \"http://www.example.com\", Timeout(10), Headers(headers))\n        fmt.Println(resp.Content)\n        resp, _ = req.MakeRequest(\"GET\", \"http://www.example.com\", Timeout(1), Headers(headers))\n        fmt.Println(resp.Content)\n    }\n```\n\n\n参考：\n\n    - [different ways to simulate keyword arguments](https://www.reddit.com/r/golang/comments/3gi0pf/different_ways_to_simulate_keyword_arguments)\n    - [self referential functions and design](http://commandcenter.blogspot.nl/2014/01/self-referential-functions-and-design.html)\n    - [functional options for friendly apis] (http://dave.cheney.net/2014/10/17/functional-options-for-friendly-apis)\n","slug":"2016/4/go语言如何使用关键字参数","published":1,"updated":"2016-06-10T02:51:05.000Z","_id":"cip94zm1b0004c5bj12pslk3z","layout":"post","photos":[],"link":"","content":"<p>最近打算写一个golang版本的requests库用，遇到一个问题是如何模拟python函数的关键字参数。</p>\n<p>举个栗子，我需要实现一个设置timeout和headers的功能，requests可以这样设置</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">requests.get(url, headers=&#123;<span class=\"string\">\"content-type\"</span>: <span class=\"string\">\"application/json\"</span>&#125;, timeout=<span class=\"number\">10</span>)</span><br></pre></td></tr></table></figure>\n<p>那用go如何实现呢？其实只需要写两个函数设置headers和timeout，然后作为可变参数传到发送请求的函数里就行了。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> (r *Request) setHeaders(headers <span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>]<span class=\"keyword\">string</span>) error &#123;</span><br><span class=\"line\">    r.Args[<span class=\"string\">\"headers\"</span>] = headers</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> Headers(headers <span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>]<span class=\"keyword\">string</span>) <span class=\"keyword\">func</span>(*Request) error &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">func</span>(r *Request) error &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> r.setHeaders(headers)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> (r *Request) MakeRequest(method <span class=\"keyword\">string</span>, uri <span class=\"keyword\">string</span>, options ...<span class=\"keyword\">func</span>(*Request) error) (*Response, error) &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>附完整代码实现：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"fmt\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"time\"</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"net/http\"</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"io/ioutil\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> M <span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>]<span class=\"keyword\">interface</span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Request <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">    Url  <span class=\"keyword\">string</span></span><br><span class=\"line\">    Args M</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Response <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">    Content <span class=\"keyword\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> (r *Request) setHeaders(headers <span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>]<span class=\"keyword\">string</span>) error &#123;</span><br><span class=\"line\">    r.Args[<span class=\"string\">\"headers\"</span>] = headers</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> Headers(headers <span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>]<span class=\"keyword\">string</span>) <span class=\"keyword\">func</span>(*Request) error &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">func</span>(r *Request) error &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> r.setHeaders(headers)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> (r *Request) setTimeout(timeout <span class=\"keyword\">int</span>) error &#123;</span><br><span class=\"line\">    r.Args[<span class=\"string\">\"timeout\"</span>] = <span class=\"keyword\">int</span>(timeout)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> Timeout(timeout <span class=\"keyword\">int</span>) <span class=\"keyword\">func</span>(*Request) error &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">func</span>(r *Request) error &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> r.setTimeout(timeout)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> (r *Request) MakeRequest(method <span class=\"keyword\">string</span>, uri <span class=\"keyword\">string</span>, options ...<span class=\"keyword\">func</span>(*Request) error) (*Response, error) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    req, err := http.NewRequest(method, uri, <span class=\"literal\">nil</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> _, option := <span class=\"keyword\">range</span> options &#123;</span><br><span class=\"line\">        err := option(r)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    transport := &amp;http.Transport&#123;&#125;</span><br><span class=\"line\">    client := &amp;http.Client&#123;</span><br><span class=\"line\">        Transport: transport,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    timeoutSeconds := r.Args[<span class=\"string\">\"timeout\"</span>].(<span class=\"keyword\">int</span>)</span><br><span class=\"line\">    timeout := time.Duration(<span class=\"number\">0</span>) * time.Second</span><br><span class=\"line\">    <span class=\"keyword\">if</span> timeoutSeconds &gt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">        timeout = time.Duration(timeoutSeconds) * time.Second</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    client.Timeout = timeout</span><br><span class=\"line\"></span><br><span class=\"line\">    resp, err := client.Do(req)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">defer</span> resp.Body.Close()</span><br><span class=\"line\">    body, err := ioutil.ReadAll(resp.Body)</span><br><span class=\"line\">    response := &amp;Response&#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        response.Content = <span class=\"keyword\">string</span>(body)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> response, <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> main() &#123;</span><br><span class=\"line\">    kwargs := M&#123;&#125;</span><br><span class=\"line\">    headers := <span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>]<span class=\"keyword\">string</span>&#123;</span><br><span class=\"line\">        <span class=\"string\">\"content-Type\"</span>: <span class=\"string\">\"application/json\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"user-agent\"</span>: <span class=\"string\">\"Golang requests\"</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    req := &amp;Request&#123;Args: kwargs&#125;</span><br><span class=\"line\">    resp, _ := req.MakeRequest(<span class=\"string\">\"GET\"</span>, <span class=\"string\">\"http://www.example.com\"</span>, Timeout(<span class=\"number\">10</span>), Headers(headers))</span><br><span class=\"line\">    fmt.Println(resp.Content)</span><br><span class=\"line\">    resp, _ = req.MakeRequest(<span class=\"string\">\"GET\"</span>, <span class=\"string\">\"http://www.example.com\"</span>, Timeout(<span class=\"number\">1</span>), Headers(headers))</span><br><span class=\"line\">    fmt.Println(resp.Content)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>参考：</p>\n<pre><code>- [different ways to simulate keyword arguments](https://www.reddit.com/r/golang/comments/3gi0pf/different_ways_to_simulate_keyword_arguments)\n- [self referential functions and design](http://commandcenter.blogspot.nl/2014/01/self-referential-functions-and-design.html)\n- [functional options for friendly apis] (http://dave.cheney.net/2014/10/17/functional-options-for-friendly-apis)\n</code></pre>","excerpt":"","more":"<p>最近打算写一个golang版本的requests库用，遇到一个问题是如何模拟python函数的关键字参数。</p>\n<p>举个栗子，我需要实现一个设置timeout和headers的功能，requests可以这样设置</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">requests.get(url, headers=&#123;<span class=\"string\">\"content-type\"</span>: <span class=\"string\">\"application/json\"</span>&#125;, timeout=<span class=\"number\">10</span>)</span><br></pre></td></tr></table></figure>\n<p>那用go如何实现呢？其实只需要写两个函数设置headers和timeout，然后作为可变参数传到发送请求的函数里就行了。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> (r *Request) setHeaders(headers <span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>]<span class=\"keyword\">string</span>) error &#123;</span><br><span class=\"line\">    r.Args[<span class=\"string\">\"headers\"</span>] = headers</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> Headers(headers <span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>]<span class=\"keyword\">string</span>) <span class=\"keyword\">func</span>(*Request) error &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">func</span>(r *Request) error &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> r.setHeaders(headers)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> (r *Request) MakeRequest(method <span class=\"keyword\">string</span>, uri <span class=\"keyword\">string</span>, options ...<span class=\"keyword\">func</span>(*Request) error) (*Response, error) &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>附完整代码实现：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"fmt\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"time\"</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"net/http\"</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"io/ioutil\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> M <span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>]<span class=\"keyword\">interface</span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Request <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">    Url  <span class=\"keyword\">string</span></span><br><span class=\"line\">    Args M</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Response <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">    Content <span class=\"keyword\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> (r *Request) setHeaders(headers <span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>]<span class=\"keyword\">string</span>) error &#123;</span><br><span class=\"line\">    r.Args[<span class=\"string\">\"headers\"</span>] = headers</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> Headers(headers <span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>]<span class=\"keyword\">string</span>) <span class=\"keyword\">func</span>(*Request) error &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">func</span>(r *Request) error &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> r.setHeaders(headers)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> (r *Request) setTimeout(timeout <span class=\"keyword\">int</span>) error &#123;</span><br><span class=\"line\">    r.Args[<span class=\"string\">\"timeout\"</span>] = <span class=\"keyword\">int</span>(timeout)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> Timeout(timeout <span class=\"keyword\">int</span>) <span class=\"keyword\">func</span>(*Request) error &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">func</span>(r *Request) error &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> r.setTimeout(timeout)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> (r *Request) MakeRequest(method <span class=\"keyword\">string</span>, uri <span class=\"keyword\">string</span>, options ...<span class=\"keyword\">func</span>(*Request) error) (*Response, error) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    req, err := http.NewRequest(method, uri, <span class=\"literal\">nil</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> _, option := <span class=\"keyword\">range</span> options &#123;</span><br><span class=\"line\">        err := option(r)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    transport := &amp;http.Transport&#123;&#125;</span><br><span class=\"line\">    client := &amp;http.Client&#123;</span><br><span class=\"line\">        Transport: transport,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    timeoutSeconds := r.Args[<span class=\"string\">\"timeout\"</span>].(<span class=\"keyword\">int</span>)</span><br><span class=\"line\">    timeout := time.Duration(<span class=\"number\">0</span>) * time.Second</span><br><span class=\"line\">    <span class=\"keyword\">if</span> timeoutSeconds &gt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">        timeout = time.Duration(timeoutSeconds) * time.Second</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    client.Timeout = timeout</span><br><span class=\"line\"></span><br><span class=\"line\">    resp, err := client.Do(req)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">defer</span> resp.Body.Close()</span><br><span class=\"line\">    body, err := ioutil.ReadAll(resp.Body)</span><br><span class=\"line\">    response := &amp;Response&#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        response.Content = <span class=\"keyword\">string</span>(body)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> response, <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> main() &#123;</span><br><span class=\"line\">    kwargs := M&#123;&#125;</span><br><span class=\"line\">    headers := <span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>]<span class=\"keyword\">string</span>&#123;</span><br><span class=\"line\">        <span class=\"string\">\"content-Type\"</span>: <span class=\"string\">\"application/json\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"user-agent\"</span>: <span class=\"string\">\"Golang requests\"</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    req := &amp;Request&#123;Args: kwargs&#125;</span><br><span class=\"line\">    resp, _ := req.MakeRequest(<span class=\"string\">\"GET\"</span>, <span class=\"string\">\"http://www.example.com\"</span>, Timeout(<span class=\"number\">10</span>), Headers(headers))</span><br><span class=\"line\">    fmt.Println(resp.Content)</span><br><span class=\"line\">    resp, _ = req.MakeRequest(<span class=\"string\">\"GET\"</span>, <span class=\"string\">\"http://www.example.com\"</span>, Timeout(<span class=\"number\">1</span>), Headers(headers))</span><br><span class=\"line\">    fmt.Println(resp.Content)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>参考：</p>\n<pre><code>- [different ways to simulate keyword arguments](https://www.reddit.com/r/golang/comments/3gi0pf/different_ways_to_simulate_keyword_arguments)\n- [self referential functions and design](http://commandcenter.blogspot.nl/2014/01/self-referential-functions-and-design.html)\n- [functional options for friendly apis] (http://dave.cheney.net/2014/10/17/functional-options-for-friendly-apis)\n</code></pre>"},{"title":"MongoDB 3.0用户权限控制","date":"2016-04-09T16:00:00.000Z","comments":1,"_content":"\n\nMongoDB 3.0之前auth很不完善，而且耗时比较长。3.0版本完善了这一块，支持按数据库、读写权限分别验证，我们来看下怎么做读写权限控制。\n\n## 如何开启auth\n\n    可以在mongod配置文件中配置, security下面的authorization改为enabled即可\n\n``` bash\n\n    # mongod.conf\n\n    # for documentation of all options, see:\n    #   http://docs.mongodb.org/manual/reference/configuration-options/\n\n    # where to write logging data.\n    systemLog:\n      destination: file\n      logAppend: true\n      path: /var/log/mongodb/mongod.log\n\n    # Where and how to store data.\n    storage:\n      dbPath: /data/db\n      journal:\n        enabled: true\n      engine: wiredTiger\n    #  mmapv1:\n\n    # how the process runs\n    processManagement:\n      fork: true  # fork and run in background\n      pidFilePath: /var/run/mongodb/mongod.pid  # location of pidfile\n\n    # network interfaces\n    net:\n      port: 27017\n      bindIp: 127.0.0.1  # Listen to local interface only, comment to listen on all interfaces.\n\n    security:\n        authorization: enabled   # 开启auth的选项\n\n    #operationProfiling:\n\n    #replication:\n\n    #sharding:\n\n    ## Enterprise-Only Options\n\n    #auditLog:\n\n    #snmp:\n\n```\n\n## 创建管理员用户\n\n    启用auth之后需要创建一个管理员用户，用于创建和删除其它用户。创建管理员用户之前暂时是不需要密码的。\n    这里的role是userAdminAnyDatabase，db是admin，创建成功之后就可以继续创建其它用户了。\n\n``` bash\n\n    mongo\n\n    MongoDB shell version: 3.0.2\n    connecting to: test\n    > use admin\n    > db.createUser(\n      {\n        user: \"solos\",\n        pwd: \"solos's password\",\n        roles: [ { role: \"userAdminAnyDatabase\", db: \"admin\" } ]\n      }\n    )\n\n    > db.auth(\"solos\", \"solos's password\")  # auth成功返回1\n    1\n\n## 创建只读用户和读写用户\n\n    在auth之后就可以切到对应的数据库继续创建只读用户和读写用户了，两者只是roles不同，只读的是read, 可读可写的是readWrite。\n\n``` bash\n        \n    > use admin\n    > db.auth('solos', '')\n    use test\n    db.createUser(\n    {\n        user: \"readUser\",\n        pwd: \"password\",\n        roles: [ {role: \"read\", db: \"test\"}]\n    })\n\n    use test\n    db.createUser(\n    {\n        user: \"readWriteUser\",\n        pwd: \"password\",\n        roles: [ {role: \"readWrite\", db: \"test\"}]\n    })\n\n\n## 查看所有用户\n\n   通过show users或者db.system.users.find()可以查看创建的所有用户\n\n``` bash\n        \n    > use admin\n    > db.auth('solos', \"solos's password\")\n    1\n    > db.system.users.find()\n    { \"_id\" : \"admin.solos\", \"user\" : \"solos\", \"db\" : \"admin\",\n        \"credentials\" : { \"SCRAM-SHA-1\" : { \"iterationCount\" : 10000, \"salt\" : \"xxx\", \"storedKey\" : \"xxx\", \"serverKey\" : \"xxx\" } },\n        \"roles\" : [ { \"role\" : \"userAdminAnyDatabase\", \"db\" : \"admin\" } ] }\n    { \"_id\" : \"test.readUser\", \"user\" : \"readUser\", \"db\" : \"test\",\n        \"credentials\" : { \"SCRAM-SHA-1\" : { \"iterationCount\" : 10000, \"salt\" : \"xxx\", \"storedKey\" : \"xxx\", \"serverKey\" : \"xxx\" } },\n        \"roles\" : [ { \"role\" : \"read\", \"db\" : \"test\" } ] }\n    { \"_id\" : \"test.readWriteUser\", \"user\" : \"readWriteUser\", \"db\" : \"test\",\n        \"credentials\" : { \"SCRAM-SHA-1\" : { \"iterationCount\" : 10000, \"salt\" : \"xxx\", \"storedKey\" : \"xxx\", \"serverKey\" : \"xxx\" } },\n        \"roles\" : [ { \"role\" : \"readWrite\", \"db\" : \"test\" } ] }\n\n```\n","source":"_posts/2016/4/MongoDB 3.0用户权限访问控制.md","raw":"---\ntitle: MongoDB 3.0用户权限控制\ndate: 2016-04-10 00:00:00\ncomments: true\ntags:\n    - MongoDB\n    - auth\ncategories:\n    - MongoDB\n---\n\n\nMongoDB 3.0之前auth很不完善，而且耗时比较长。3.0版本完善了这一块，支持按数据库、读写权限分别验证，我们来看下怎么做读写权限控制。\n\n## 如何开启auth\n\n    可以在mongod配置文件中配置, security下面的authorization改为enabled即可\n\n``` bash\n\n    # mongod.conf\n\n    # for documentation of all options, see:\n    #   http://docs.mongodb.org/manual/reference/configuration-options/\n\n    # where to write logging data.\n    systemLog:\n      destination: file\n      logAppend: true\n      path: /var/log/mongodb/mongod.log\n\n    # Where and how to store data.\n    storage:\n      dbPath: /data/db\n      journal:\n        enabled: true\n      engine: wiredTiger\n    #  mmapv1:\n\n    # how the process runs\n    processManagement:\n      fork: true  # fork and run in background\n      pidFilePath: /var/run/mongodb/mongod.pid  # location of pidfile\n\n    # network interfaces\n    net:\n      port: 27017\n      bindIp: 127.0.0.1  # Listen to local interface only, comment to listen on all interfaces.\n\n    security:\n        authorization: enabled   # 开启auth的选项\n\n    #operationProfiling:\n\n    #replication:\n\n    #sharding:\n\n    ## Enterprise-Only Options\n\n    #auditLog:\n\n    #snmp:\n\n```\n\n## 创建管理员用户\n\n    启用auth之后需要创建一个管理员用户，用于创建和删除其它用户。创建管理员用户之前暂时是不需要密码的。\n    这里的role是userAdminAnyDatabase，db是admin，创建成功之后就可以继续创建其它用户了。\n\n``` bash\n\n    mongo\n\n    MongoDB shell version: 3.0.2\n    connecting to: test\n    > use admin\n    > db.createUser(\n      {\n        user: \"solos\",\n        pwd: \"solos's password\",\n        roles: [ { role: \"userAdminAnyDatabase\", db: \"admin\" } ]\n      }\n    )\n\n    > db.auth(\"solos\", \"solos's password\")  # auth成功返回1\n    1\n\n## 创建只读用户和读写用户\n\n    在auth之后就可以切到对应的数据库继续创建只读用户和读写用户了，两者只是roles不同，只读的是read, 可读可写的是readWrite。\n\n``` bash\n        \n    > use admin\n    > db.auth('solos', '')\n    use test\n    db.createUser(\n    {\n        user: \"readUser\",\n        pwd: \"password\",\n        roles: [ {role: \"read\", db: \"test\"}]\n    })\n\n    use test\n    db.createUser(\n    {\n        user: \"readWriteUser\",\n        pwd: \"password\",\n        roles: [ {role: \"readWrite\", db: \"test\"}]\n    })\n\n\n## 查看所有用户\n\n   通过show users或者db.system.users.find()可以查看创建的所有用户\n\n``` bash\n        \n    > use admin\n    > db.auth('solos', \"solos's password\")\n    1\n    > db.system.users.find()\n    { \"_id\" : \"admin.solos\", \"user\" : \"solos\", \"db\" : \"admin\",\n        \"credentials\" : { \"SCRAM-SHA-1\" : { \"iterationCount\" : 10000, \"salt\" : \"xxx\", \"storedKey\" : \"xxx\", \"serverKey\" : \"xxx\" } },\n        \"roles\" : [ { \"role\" : \"userAdminAnyDatabase\", \"db\" : \"admin\" } ] }\n    { \"_id\" : \"test.readUser\", \"user\" : \"readUser\", \"db\" : \"test\",\n        \"credentials\" : { \"SCRAM-SHA-1\" : { \"iterationCount\" : 10000, \"salt\" : \"xxx\", \"storedKey\" : \"xxx\", \"serverKey\" : \"xxx\" } },\n        \"roles\" : [ { \"role\" : \"read\", \"db\" : \"test\" } ] }\n    { \"_id\" : \"test.readWriteUser\", \"user\" : \"readWriteUser\", \"db\" : \"test\",\n        \"credentials\" : { \"SCRAM-SHA-1\" : { \"iterationCount\" : 10000, \"salt\" : \"xxx\", \"storedKey\" : \"xxx\", \"serverKey\" : \"xxx\" } },\n        \"roles\" : [ { \"role\" : \"readWrite\", \"db\" : \"test\" } ] }\n\n```\n","slug":"2016/4/MongoDB 3.0用户权限访问控制","published":1,"updated":"2016-06-10T02:55:15.000Z","_id":"cip9548yi0009c5bjbj1x8h81","layout":"post","photos":[],"link":"","content":"<p>MongoDB 3.0之前auth很不完善，而且耗时比较长。3.0版本完善了这一块，支持按数据库、读写权限分别验证，我们来看下怎么做读写权限控制。</p>\n<h2 id=\"如何开启auth\"><a href=\"#如何开启auth\" class=\"headerlink\" title=\"如何开启auth\"></a>如何开启auth</h2><pre><code>可以在mongod配置文件中配置, security下面的authorization改为enabled即可\n</code></pre><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># mongod.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for documentation of all options, see:</span></span><br><span class=\"line\"><span class=\"comment\">#   http://docs.mongodb.org/manual/reference/configuration-options/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># where to write logging data.</span></span><br><span class=\"line\">systemLog:</span><br><span class=\"line\">  destination: file</span><br><span class=\"line\">  <span class=\"built_in\">log</span>Append: <span class=\"literal\">true</span></span><br><span class=\"line\">  path: /var/<span class=\"built_in\">log</span>/mongodb/mongod.log</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Where and how to store data.</span></span><br><span class=\"line\">storage:</span><br><span class=\"line\">  dbPath: /data/db</span><br><span class=\"line\">  journal:</span><br><span class=\"line\">    enabled: <span class=\"literal\">true</span></span><br><span class=\"line\">  engine: wiredTiger</span><br><span class=\"line\"><span class=\"comment\">#  mmapv1:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># how the process runs</span></span><br><span class=\"line\">processManagement:</span><br><span class=\"line\">  fork: <span class=\"literal\">true</span>  <span class=\"comment\"># fork and run in background</span></span><br><span class=\"line\">  pidFilePath: /var/run/mongodb/mongod.pid  <span class=\"comment\"># location of pidfile</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># network interfaces</span></span><br><span class=\"line\">net:</span><br><span class=\"line\">  port: 27017</span><br><span class=\"line\">  <span class=\"built_in\">bind</span>Ip: 127.0.0.1  <span class=\"comment\"># Listen to local interface only, comment to listen on all interfaces.</span></span><br><span class=\"line\"></span><br><span class=\"line\">security:</span><br><span class=\"line\">    authorization: enabled   <span class=\"comment\"># 开启auth的选项</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#operationProfiling:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#replication:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#sharding:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Enterprise-Only Options</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#auditLog:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#snmp:</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"创建管理员用户\"><a href=\"#创建管理员用户\" class=\"headerlink\" title=\"创建管理员用户\"></a>创建管理员用户</h2><pre><code>启用auth之后需要创建一个管理员用户，用于创建和删除其它用户。创建管理员用户之前暂时是不需要密码的。\n这里的role是userAdminAnyDatabase，db是admin，创建成功之后就可以继续创建其它用户了。\n</code></pre><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">    mongo</span><br><span class=\"line\"></span><br><span class=\"line\">    MongoDB shell version: 3.0.2</span><br><span class=\"line\">    connecting to: <span class=\"built_in\">test</span></span><br><span class=\"line\">    &gt; use admin</span><br><span class=\"line\">    &gt; db.createUser(</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        user: <span class=\"string\">\"solos\"</span>,</span><br><span class=\"line\">        <span class=\"built_in\">pwd</span>: <span class=\"string\">\"solos's password\"</span>,</span><br><span class=\"line\">        roles: [ &#123; role: <span class=\"string\">\"userAdminAnyDatabase\"</span>, db: <span class=\"string\">\"admin\"</span> &#125; ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\">    &gt; db.auth(<span class=\"string\">\"solos\"</span>, <span class=\"string\">\"solos's password\"</span>)  <span class=\"comment\"># auth成功返回1</span></span><br><span class=\"line\">    1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 创建只读用户和读写用户</span></span><br><span class=\"line\"></span><br><span class=\"line\">    在auth之后就可以切到对应的数据库继续创建只读用户和读写用户了，两者只是roles不同，只读的是<span class=\"built_in\">read</span>, 可读可写的是<span class=\"built_in\">read</span>Write。</span><br><span class=\"line\"></span><br><span class=\"line\">``` bash</span><br><span class=\"line\">        </span><br><span class=\"line\">    &gt; use admin</span><br><span class=\"line\">    &gt; db.auth(<span class=\"string\">'solos'</span>, <span class=\"string\">''</span>)</span><br><span class=\"line\">    use <span class=\"built_in\">test</span></span><br><span class=\"line\">    db.createUser(</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        user: <span class=\"string\">\"readUser\"</span>,</span><br><span class=\"line\">        <span class=\"built_in\">pwd</span>: <span class=\"string\">\"password\"</span>,</span><br><span class=\"line\">        roles: [ &#123;role: <span class=\"string\">\"read\"</span>, db: <span class=\"string\">\"test\"</span>&#125;]</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    use <span class=\"built_in\">test</span></span><br><span class=\"line\">    db.createUser(</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        user: <span class=\"string\">\"readWriteUser\"</span>,</span><br><span class=\"line\">        <span class=\"built_in\">pwd</span>: <span class=\"string\">\"password\"</span>,</span><br><span class=\"line\">        roles: [ &#123;role: <span class=\"string\">\"readWrite\"</span>, db: <span class=\"string\">\"test\"</span>&#125;]</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 查看所有用户</span></span><br><span class=\"line\"></span><br><span class=\"line\">   通过show users或者db.system.users.find()可以查看创建的所有用户</span><br><span class=\"line\"></span><br><span class=\"line\">``` bash</span><br><span class=\"line\">        </span><br><span class=\"line\">    &gt; use admin</span><br><span class=\"line\">    &gt; db.auth(<span class=\"string\">'solos'</span>, <span class=\"string\">\"solos's password\"</span>)</span><br><span class=\"line\">    1</span><br><span class=\"line\">    &gt; db.system.users.<span class=\"function\"><span class=\"title\">find</span></span>()</span><br><span class=\"line\">    &#123; <span class=\"string\">\"_id\"</span> : <span class=\"string\">\"admin.solos\"</span>, <span class=\"string\">\"user\"</span> : <span class=\"string\">\"solos\"</span>, <span class=\"string\">\"db\"</span> : <span class=\"string\">\"admin\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"credentials\"</span> : &#123; <span class=\"string\">\"SCRAM-SHA-1\"</span> : &#123; <span class=\"string\">\"iterationCount\"</span> : 10000, <span class=\"string\">\"salt\"</span> : <span class=\"string\">\"xxx\"</span>, <span class=\"string\">\"storedKey\"</span> : <span class=\"string\">\"xxx\"</span>, <span class=\"string\">\"serverKey\"</span> : <span class=\"string\">\"xxx\"</span> &#125; &#125;,</span><br><span class=\"line\">        <span class=\"string\">\"roles\"</span> : [ &#123; <span class=\"string\">\"role\"</span> : <span class=\"string\">\"userAdminAnyDatabase\"</span>, <span class=\"string\">\"db\"</span> : <span class=\"string\">\"admin\"</span> &#125; ] &#125;</span><br><span class=\"line\">    &#123; <span class=\"string\">\"_id\"</span> : <span class=\"string\">\"test.readUser\"</span>, <span class=\"string\">\"user\"</span> : <span class=\"string\">\"readUser\"</span>, <span class=\"string\">\"db\"</span> : <span class=\"string\">\"test\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"credentials\"</span> : &#123; <span class=\"string\">\"SCRAM-SHA-1\"</span> : &#123; <span class=\"string\">\"iterationCount\"</span> : 10000, <span class=\"string\">\"salt\"</span> : <span class=\"string\">\"xxx\"</span>, <span class=\"string\">\"storedKey\"</span> : <span class=\"string\">\"xxx\"</span>, <span class=\"string\">\"serverKey\"</span> : <span class=\"string\">\"xxx\"</span> &#125; &#125;,</span><br><span class=\"line\">        <span class=\"string\">\"roles\"</span> : [ &#123; <span class=\"string\">\"role\"</span> : <span class=\"string\">\"read\"</span>, <span class=\"string\">\"db\"</span> : <span class=\"string\">\"test\"</span> &#125; ] &#125;</span><br><span class=\"line\">    &#123; <span class=\"string\">\"_id\"</span> : <span class=\"string\">\"test.readWriteUser\"</span>, <span class=\"string\">\"user\"</span> : <span class=\"string\">\"readWriteUser\"</span>, <span class=\"string\">\"db\"</span> : <span class=\"string\">\"test\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"credentials\"</span> : &#123; <span class=\"string\">\"SCRAM-SHA-1\"</span> : &#123; <span class=\"string\">\"iterationCount\"</span> : 10000, <span class=\"string\">\"salt\"</span> : <span class=\"string\">\"xxx\"</span>, <span class=\"string\">\"storedKey\"</span> : <span class=\"string\">\"xxx\"</span>, <span class=\"string\">\"serverKey\"</span> : <span class=\"string\">\"xxx\"</span> &#125; &#125;,</span><br><span class=\"line\">        <span class=\"string\">\"roles\"</span> : [ &#123; <span class=\"string\">\"role\"</span> : <span class=\"string\">\"readWrite\"</span>, <span class=\"string\">\"db\"</span> : <span class=\"string\">\"test\"</span> &#125; ] &#125;</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>MongoDB 3.0之前auth很不完善，而且耗时比较长。3.0版本完善了这一块，支持按数据库、读写权限分别验证，我们来看下怎么做读写权限控制。</p>\n<h2 id=\"如何开启auth\"><a href=\"#如何开启auth\" class=\"headerlink\" title=\"如何开启auth\"></a>如何开启auth</h2><pre><code>可以在mongod配置文件中配置, security下面的authorization改为enabled即可\n</code></pre><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># mongod.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for documentation of all options, see:</span></span><br><span class=\"line\"><span class=\"comment\">#   http://docs.mongodb.org/manual/reference/configuration-options/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># where to write logging data.</span></span><br><span class=\"line\">systemLog:</span><br><span class=\"line\">  destination: file</span><br><span class=\"line\">  <span class=\"built_in\">log</span>Append: <span class=\"literal\">true</span></span><br><span class=\"line\">  path: /var/<span class=\"built_in\">log</span>/mongodb/mongod.log</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Where and how to store data.</span></span><br><span class=\"line\">storage:</span><br><span class=\"line\">  dbPath: /data/db</span><br><span class=\"line\">  journal:</span><br><span class=\"line\">    enabled: <span class=\"literal\">true</span></span><br><span class=\"line\">  engine: wiredTiger</span><br><span class=\"line\"><span class=\"comment\">#  mmapv1:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># how the process runs</span></span><br><span class=\"line\">processManagement:</span><br><span class=\"line\">  fork: <span class=\"literal\">true</span>  <span class=\"comment\"># fork and run in background</span></span><br><span class=\"line\">  pidFilePath: /var/run/mongodb/mongod.pid  <span class=\"comment\"># location of pidfile</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># network interfaces</span></span><br><span class=\"line\">net:</span><br><span class=\"line\">  port: 27017</span><br><span class=\"line\">  <span class=\"built_in\">bind</span>Ip: 127.0.0.1  <span class=\"comment\"># Listen to local interface only, comment to listen on all interfaces.</span></span><br><span class=\"line\"></span><br><span class=\"line\">security:</span><br><span class=\"line\">    authorization: enabled   <span class=\"comment\"># 开启auth的选项</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#operationProfiling:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#replication:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#sharding:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Enterprise-Only Options</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#auditLog:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#snmp:</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"创建管理员用户\"><a href=\"#创建管理员用户\" class=\"headerlink\" title=\"创建管理员用户\"></a>创建管理员用户</h2><pre><code>启用auth之后需要创建一个管理员用户，用于创建和删除其它用户。创建管理员用户之前暂时是不需要密码的。\n这里的role是userAdminAnyDatabase，db是admin，创建成功之后就可以继续创建其它用户了。\n</code></pre><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">    mongo</span><br><span class=\"line\"></span><br><span class=\"line\">    MongoDB shell version: 3.0.2</span><br><span class=\"line\">    connecting to: <span class=\"built_in\">test</span></span><br><span class=\"line\">    &gt; use admin</span><br><span class=\"line\">    &gt; db.createUser(</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        user: <span class=\"string\">\"solos\"</span>,</span><br><span class=\"line\">        <span class=\"built_in\">pwd</span>: <span class=\"string\">\"solos's password\"</span>,</span><br><span class=\"line\">        roles: [ &#123; role: <span class=\"string\">\"userAdminAnyDatabase\"</span>, db: <span class=\"string\">\"admin\"</span> &#125; ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\">    &gt; db.auth(<span class=\"string\">\"solos\"</span>, <span class=\"string\">\"solos's password\"</span>)  <span class=\"comment\"># auth成功返回1</span></span><br><span class=\"line\">    1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 创建只读用户和读写用户</span></span><br><span class=\"line\"></span><br><span class=\"line\">    在auth之后就可以切到对应的数据库继续创建只读用户和读写用户了，两者只是roles不同，只读的是<span class=\"built_in\">read</span>, 可读可写的是<span class=\"built_in\">read</span>Write。</span><br><span class=\"line\"></span><br><span class=\"line\">``` bash</span><br><span class=\"line\">        </span><br><span class=\"line\">    &gt; use admin</span><br><span class=\"line\">    &gt; db.auth(<span class=\"string\">'solos'</span>, <span class=\"string\">''</span>)</span><br><span class=\"line\">    use <span class=\"built_in\">test</span></span><br><span class=\"line\">    db.createUser(</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        user: <span class=\"string\">\"readUser\"</span>,</span><br><span class=\"line\">        <span class=\"built_in\">pwd</span>: <span class=\"string\">\"password\"</span>,</span><br><span class=\"line\">        roles: [ &#123;role: <span class=\"string\">\"read\"</span>, db: <span class=\"string\">\"test\"</span>&#125;]</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    use <span class=\"built_in\">test</span></span><br><span class=\"line\">    db.createUser(</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        user: <span class=\"string\">\"readWriteUser\"</span>,</span><br><span class=\"line\">        <span class=\"built_in\">pwd</span>: <span class=\"string\">\"password\"</span>,</span><br><span class=\"line\">        roles: [ &#123;role: <span class=\"string\">\"readWrite\"</span>, db: <span class=\"string\">\"test\"</span>&#125;]</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 查看所有用户</span></span><br><span class=\"line\"></span><br><span class=\"line\">   通过show users或者db.system.users.find()可以查看创建的所有用户</span><br><span class=\"line\"></span><br><span class=\"line\">``` bash</span><br><span class=\"line\">        </span><br><span class=\"line\">    &gt; use admin</span><br><span class=\"line\">    &gt; db.auth(<span class=\"string\">'solos'</span>, <span class=\"string\">\"solos's password\"</span>)</span><br><span class=\"line\">    1</span><br><span class=\"line\">    &gt; db.system.users.<span class=\"function\"><span class=\"title\">find</span></span>()</span><br><span class=\"line\">    &#123; <span class=\"string\">\"_id\"</span> : <span class=\"string\">\"admin.solos\"</span>, <span class=\"string\">\"user\"</span> : <span class=\"string\">\"solos\"</span>, <span class=\"string\">\"db\"</span> : <span class=\"string\">\"admin\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"credentials\"</span> : &#123; <span class=\"string\">\"SCRAM-SHA-1\"</span> : &#123; <span class=\"string\">\"iterationCount\"</span> : 10000, <span class=\"string\">\"salt\"</span> : <span class=\"string\">\"xxx\"</span>, <span class=\"string\">\"storedKey\"</span> : <span class=\"string\">\"xxx\"</span>, <span class=\"string\">\"serverKey\"</span> : <span class=\"string\">\"xxx\"</span> &#125; &#125;,</span><br><span class=\"line\">        <span class=\"string\">\"roles\"</span> : [ &#123; <span class=\"string\">\"role\"</span> : <span class=\"string\">\"userAdminAnyDatabase\"</span>, <span class=\"string\">\"db\"</span> : <span class=\"string\">\"admin\"</span> &#125; ] &#125;</span><br><span class=\"line\">    &#123; <span class=\"string\">\"_id\"</span> : <span class=\"string\">\"test.readUser\"</span>, <span class=\"string\">\"user\"</span> : <span class=\"string\">\"readUser\"</span>, <span class=\"string\">\"db\"</span> : <span class=\"string\">\"test\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"credentials\"</span> : &#123; <span class=\"string\">\"SCRAM-SHA-1\"</span> : &#123; <span class=\"string\">\"iterationCount\"</span> : 10000, <span class=\"string\">\"salt\"</span> : <span class=\"string\">\"xxx\"</span>, <span class=\"string\">\"storedKey\"</span> : <span class=\"string\">\"xxx\"</span>, <span class=\"string\">\"serverKey\"</span> : <span class=\"string\">\"xxx\"</span> &#125; &#125;,</span><br><span class=\"line\">        <span class=\"string\">\"roles\"</span> : [ &#123; <span class=\"string\">\"role\"</span> : <span class=\"string\">\"read\"</span>, <span class=\"string\">\"db\"</span> : <span class=\"string\">\"test\"</span> &#125; ] &#125;</span><br><span class=\"line\">    &#123; <span class=\"string\">\"_id\"</span> : <span class=\"string\">\"test.readWriteUser\"</span>, <span class=\"string\">\"user\"</span> : <span class=\"string\">\"readWriteUser\"</span>, <span class=\"string\">\"db\"</span> : <span class=\"string\">\"test\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"credentials\"</span> : &#123; <span class=\"string\">\"SCRAM-SHA-1\"</span> : &#123; <span class=\"string\">\"iterationCount\"</span> : 10000, <span class=\"string\">\"salt\"</span> : <span class=\"string\">\"xxx\"</span>, <span class=\"string\">\"storedKey\"</span> : <span class=\"string\">\"xxx\"</span>, <span class=\"string\">\"serverKey\"</span> : <span class=\"string\">\"xxx\"</span> &#125; &#125;,</span><br><span class=\"line\">        <span class=\"string\">\"roles\"</span> : [ &#123; <span class=\"string\">\"role\"</span> : <span class=\"string\">\"readWrite\"</span>, <span class=\"string\">\"db\"</span> : <span class=\"string\">\"test\"</span> &#125; ] &#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"Javascript中如何合并两个Object","date":"2016-04-17T16:00:00.000Z","comments":1,"_content":"\n\n如果存在子object，使用新值替代旧值。\n\n``` javascript\n\n    function merge(target, source) {\n\n        if ((typeof target !== 'object') || (typeof source !== 'object')) {\n            return {}\n        }\n\n        for (var property in source) {\n            if (target.hasOwnProperty(property)){\n                var targetProperty = target [ property ];\n                var sourceProperty = source[ property ];\n                if (typeof sourceProperty === 'object') {\n                    target[ property ] = merge( target[ property ], sourceProperty );\n                    continue;\n                } else {\n                    target[property] = sourceProperty;\n                }\n            } else {\n                var sourceProperty = source[property];\n                target[property] = sourceProperty;\n            }\n        }\n        return target;\n    };\n\n\n    console.log(merge({\"a\": 1, \"b\": 2, \"hello\": {\"world\": 1}}, {\"a\": 2, \"b\": 3, \"hello\": \"world\"}));\n\n    > {a: 2, b: 3, hello: \"world\"}\n\n```\n\n如果存在子object，则合并子object，而不是替代。\n\n``` javascript\n\n    function merge(target, source) {\n\n        if (typeof target !== 'object') {\n            target = {};\n        }\n\n        for (var property in source) {\n            if (target.hasOwnProperty(property)){\n                var targetProperty = target [ property ];\n                var sourceProperty = source[ property ];\n                if (typeof sourceProperty === 'object') {\n                    target[ property ] = merge( target[ property ], sourceProperty );\n                    continue;\n                } else {\n                    target[property] = sourceProperty;\n                }\n            } else {\n                var sourceProperty = source[property];\n                target[property] = sourceProperty;\n            }\n        }\n        return target;\n    };\n\n    console.log(merge({\"hello\": {\"world\": 1, \"a\": 1, \"b\": 2}}, {\"hello\": {\"world\": 1, \"foo\": \"bar\"}}));\n    > {\"hello\": {\"a\": 1, \"b\": 2, \"foo\": \"bar\", \"world\": 1}}\n\n```\n","source":"_posts/2016/4/Javascript中如何合并两个Object.md","raw":"---\ntitle: Javascript中如何合并两个Object\ndate: 2016-04-18 00:00:00\ncomments: true\ntags:\n    - Javascript\n    - Object\ncategories:\n    - Javascript\n---\n\n\n如果存在子object，使用新值替代旧值。\n\n``` javascript\n\n    function merge(target, source) {\n\n        if ((typeof target !== 'object') || (typeof source !== 'object')) {\n            return {}\n        }\n\n        for (var property in source) {\n            if (target.hasOwnProperty(property)){\n                var targetProperty = target [ property ];\n                var sourceProperty = source[ property ];\n                if (typeof sourceProperty === 'object') {\n                    target[ property ] = merge( target[ property ], sourceProperty );\n                    continue;\n                } else {\n                    target[property] = sourceProperty;\n                }\n            } else {\n                var sourceProperty = source[property];\n                target[property] = sourceProperty;\n            }\n        }\n        return target;\n    };\n\n\n    console.log(merge({\"a\": 1, \"b\": 2, \"hello\": {\"world\": 1}}, {\"a\": 2, \"b\": 3, \"hello\": \"world\"}));\n\n    > {a: 2, b: 3, hello: \"world\"}\n\n```\n\n如果存在子object，则合并子object，而不是替代。\n\n``` javascript\n\n    function merge(target, source) {\n\n        if (typeof target !== 'object') {\n            target = {};\n        }\n\n        for (var property in source) {\n            if (target.hasOwnProperty(property)){\n                var targetProperty = target [ property ];\n                var sourceProperty = source[ property ];\n                if (typeof sourceProperty === 'object') {\n                    target[ property ] = merge( target[ property ], sourceProperty );\n                    continue;\n                } else {\n                    target[property] = sourceProperty;\n                }\n            } else {\n                var sourceProperty = source[property];\n                target[property] = sourceProperty;\n            }\n        }\n        return target;\n    };\n\n    console.log(merge({\"hello\": {\"world\": 1, \"a\": 1, \"b\": 2}}, {\"hello\": {\"world\": 1, \"foo\": \"bar\"}}));\n    > {\"hello\": {\"a\": 1, \"b\": 2, \"foo\": \"bar\", \"world\": 1}}\n\n```\n","slug":"2016/4/Javascript中如何合并两个Object","published":1,"updated":"2016-06-10T02:56:58.000Z","_id":"cip956uej000gc5bjctu102nl","layout":"post","photos":[],"link":"","content":"<p>如果存在子object，使用新值替代旧值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">merge</span>(<span class=\"params\">target, source</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((<span class=\"keyword\">typeof</span> target !== <span class=\"string\">'object'</span>) || (<span class=\"keyword\">typeof</span> source !== <span class=\"string\">'object'</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> property <span class=\"keyword\">in</span> source) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (target.hasOwnProperty(property))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> targetProperty = target [ property ];</span><br><span class=\"line\">            <span class=\"keyword\">var</span> sourceProperty = source[ property ];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> sourceProperty === <span class=\"string\">'object'</span>) &#123;</span><br><span class=\"line\">                target[ property ] = merge( target[ property ], sourceProperty );</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                target[property] = sourceProperty;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> sourceProperty = source[property];</span><br><span class=\"line\">            target[property] = sourceProperty;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> target;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(merge(&#123;<span class=\"string\">\"a\"</span>: <span class=\"number\">1</span>, <span class=\"string\">\"b\"</span>: <span class=\"number\">2</span>, <span class=\"string\">\"hello\"</span>: &#123;<span class=\"string\">\"world\"</span>: <span class=\"number\">1</span>&#125;&#125;, &#123;<span class=\"string\">\"a\"</span>: <span class=\"number\">2</span>, <span class=\"string\">\"b\"</span>: <span class=\"number\">3</span>, <span class=\"string\">\"hello\"</span>: <span class=\"string\">\"world\"</span>&#125;));</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; &#123;a: <span class=\"number\">2</span>, b: <span class=\"number\">3</span>, hello: <span class=\"string\">\"world\"</span>&#125;</span><br></pre></td></tr></table></figure>\n<p>如果存在子object，则合并子object，而不是替代。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">merge</span>(<span class=\"params\">target, source</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> target !== <span class=\"string\">'object'</span>) &#123;</span><br><span class=\"line\">        target = &#123;&#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> property <span class=\"keyword\">in</span> source) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (target.hasOwnProperty(property))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> targetProperty = target [ property ];</span><br><span class=\"line\">            <span class=\"keyword\">var</span> sourceProperty = source[ property ];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> sourceProperty === <span class=\"string\">'object'</span>) &#123;</span><br><span class=\"line\">                target[ property ] = merge( target[ property ], sourceProperty );</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                target[property] = sourceProperty;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> sourceProperty = source[property];</span><br><span class=\"line\">            target[property] = sourceProperty;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> target;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(merge(&#123;<span class=\"string\">\"hello\"</span>: &#123;<span class=\"string\">\"world\"</span>: <span class=\"number\">1</span>, <span class=\"string\">\"a\"</span>: <span class=\"number\">1</span>, <span class=\"string\">\"b\"</span>: <span class=\"number\">2</span>&#125;&#125;, &#123;<span class=\"string\">\"hello\"</span>: &#123;<span class=\"string\">\"world\"</span>: <span class=\"number\">1</span>, <span class=\"string\">\"foo\"</span>: <span class=\"string\">\"bar\"</span>&#125;&#125;));</span><br><span class=\"line\">&gt; &#123;<span class=\"string\">\"hello\"</span>: &#123;<span class=\"string\">\"a\"</span>: <span class=\"number\">1</span>, <span class=\"string\">\"b\"</span>: <span class=\"number\">2</span>, <span class=\"string\">\"foo\"</span>: <span class=\"string\">\"bar\"</span>, <span class=\"string\">\"world\"</span>: <span class=\"number\">1</span>&#125;&#125;</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>如果存在子object，使用新值替代旧值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">merge</span>(<span class=\"params\">target, source</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((<span class=\"keyword\">typeof</span> target !== <span class=\"string\">'object'</span>) || (<span class=\"keyword\">typeof</span> source !== <span class=\"string\">'object'</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> property <span class=\"keyword\">in</span> source) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (target.hasOwnProperty(property))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> targetProperty = target [ property ];</span><br><span class=\"line\">            <span class=\"keyword\">var</span> sourceProperty = source[ property ];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> sourceProperty === <span class=\"string\">'object'</span>) &#123;</span><br><span class=\"line\">                target[ property ] = merge( target[ property ], sourceProperty );</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                target[property] = sourceProperty;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> sourceProperty = source[property];</span><br><span class=\"line\">            target[property] = sourceProperty;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> target;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(merge(&#123;<span class=\"string\">\"a\"</span>: <span class=\"number\">1</span>, <span class=\"string\">\"b\"</span>: <span class=\"number\">2</span>, <span class=\"string\">\"hello\"</span>: &#123;<span class=\"string\">\"world\"</span>: <span class=\"number\">1</span>&#125;&#125;, &#123;<span class=\"string\">\"a\"</span>: <span class=\"number\">2</span>, <span class=\"string\">\"b\"</span>: <span class=\"number\">3</span>, <span class=\"string\">\"hello\"</span>: <span class=\"string\">\"world\"</span>&#125;));</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; &#123;a: <span class=\"number\">2</span>, b: <span class=\"number\">3</span>, hello: <span class=\"string\">\"world\"</span>&#125;</span><br></pre></td></tr></table></figure>\n<p>如果存在子object，则合并子object，而不是替代。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">merge</span>(<span class=\"params\">target, source</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> target !== <span class=\"string\">'object'</span>) &#123;</span><br><span class=\"line\">        target = &#123;&#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> property <span class=\"keyword\">in</span> source) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (target.hasOwnProperty(property))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> targetProperty = target [ property ];</span><br><span class=\"line\">            <span class=\"keyword\">var</span> sourceProperty = source[ property ];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> sourceProperty === <span class=\"string\">'object'</span>) &#123;</span><br><span class=\"line\">                target[ property ] = merge( target[ property ], sourceProperty );</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                target[property] = sourceProperty;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> sourceProperty = source[property];</span><br><span class=\"line\">            target[property] = sourceProperty;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> target;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(merge(&#123;<span class=\"string\">\"hello\"</span>: &#123;<span class=\"string\">\"world\"</span>: <span class=\"number\">1</span>, <span class=\"string\">\"a\"</span>: <span class=\"number\">1</span>, <span class=\"string\">\"b\"</span>: <span class=\"number\">2</span>&#125;&#125;, &#123;<span class=\"string\">\"hello\"</span>: &#123;<span class=\"string\">\"world\"</span>: <span class=\"number\">1</span>, <span class=\"string\">\"foo\"</span>: <span class=\"string\">\"bar\"</span>&#125;&#125;));</span><br><span class=\"line\">&gt; &#123;<span class=\"string\">\"hello\"</span>: &#123;<span class=\"string\">\"a\"</span>: <span class=\"number\">1</span>, <span class=\"string\">\"b\"</span>: <span class=\"number\">2</span>, <span class=\"string\">\"foo\"</span>: <span class=\"string\">\"bar\"</span>, <span class=\"string\">\"world\"</span>: <span class=\"number\">1</span>&#125;&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"Swift语言学习笔记","date":"2016-04-18T16:00:00.000Z","comments":1,"_content":"\n\n## 如何声明常量、变量\n\n``` swift\n    let count = 0   // let声明常量\n    var summary = 0 // var声明变量\n    var foo = 10, bar = 20 // 单行中声明多个变量或者常量使用逗号分隔\n    var message: String // 类型在变量或者常量名称后面标注，中间用冒号分隔\n```\n\n\n## 如何打印变量或者常量的值\n\n``` swift\n    let msg = \"hello, world!\"\n    print(msg)\n```\n\n## 注释\n\n- 单行注释使用//，多行注释使用 ... , 可以嵌套。\n\n## 数据类型\n- 整型\n\n    - Int8    有符号整型\n    - UInt8   无符号整型\n    - Int     有符号整型\n    - UInt    无符号整型\n    - 0b10001 二进制\n    - 0x20    八进制\n    - 0x11    十六进制\n\n- 浮点数\n\n    - Double  64位浮点数\n    - Float   32位浮点数\n\n- 字符串\n\n\n- 布尔值\n\n    - true\n    - false\n\n\n- 元组\n    let http404Error = (404, \"Not Found\")\n\n- 可选类型 ?\n    有值或者没有值\n\n- nil\n    nil表示没有值\n\n- 隐式解析可选类型 !\n    String!\n    \n- 类型别名\n    typealias Number = UInt\n\n- 可选绑定\n\n``` swift\n    if let constantName = someOptional {\n        statements\n    }\n```\n        \n## 数组\n\n``` swift\n    var arr = [Int]() //创建数组\n    arr.append(10)  // 向数组中添加元素\n    print(\"arr is of type [Int] with \\(arr.count) items.\")\n    // arr is of type [Int] with 1 items.\n    var items = [Int](count: 10, repeatedValue:1)  // 创建一个大小为10的数组，默认都是1\n    var shoppingList: [String] = [\"Eggs\", \"Milk\"] // shoppingList 已经被构造并且拥有两个初始项。\n    print(shoppingList[0])\n    shoppingList.append(\"Flour\")\n    shoppingList += [\"Baking Powder\"]\n    shoppingList += [\"Chocolate Spread\", \"Cheese\", \"Butter\"]\n    shoppingList[4...6] = [\"Bananas\", \"Apples\"]\n    shoppingList.insert(\"Maple Syrup\", atIndex: 0)\n    shoppingList.removeAtIndex(0)\n    shoppingList.removeLast(0)\n    \n    for item in shoppingList {\n        print item\n    }\n    for (index, value) in shoppingList.enumerate() {\n        print(\"Item \\(String(index + 1)): \\(value)\")\n    }\n```\n\n## 集合\n\n``` swift\n        \n    var letters = Set<Character>()  // 声明一个集合\n    letters.insert(\"a\")  // 往集合中添加值\n    letters = []  // 集合置空\n    var favoriteGenres: Set<String> = [\"Rock\", \"Classical\", \"Hip hop\"]\n    favoriteGenres.remove(\"Rock\")\n    if favoriteGenres.contains(\"Funk\"){\n        print(\"Funk in favoriteGenres\")\n    }\n\n    for genre in favoriteGenres {\n        print(\"\\(genre)\")\n    }\n\n```\n\n- 其它方法\n\n    - 使用intersect(_:)方法根据两个集合中都包含的值创建的一个新的集合。\n    - 使用exclusiveOr(_:)方法根据在一个集合中但不在两个集合中的值创建一个新的集合。\n    - 使用union(_:)方法根据两个集合的值创建一个新的集合。\n    - 使用subtract(_:)方法根据不在该集合中的值创建一个新的集合。\n    - 使用“是否相等”运算符(==)来判断两个集合是否包含全部相同的值。\n    - 使用isSubsetOf(_:)方法来判断一个集合中的值是否也被包含在另外一个集合中。\n    - 使用isSupersetOf(_:)方法来判断一个集合中包含另一个集合中所有的值。\n    - 使用isStrictSubsetOf(_:)或者isStrictSupersetOf(_:)方法来判断一个集合是否是另外一个集合的子集合或者父集合并且两个集合并不相等。\n    - 使用isDisjointWith(_:)方法来判断两个集合是否不含有相同的值(是否没有交集)。\n\n## 字典\n\n``` swift\n    var namesOfIntegers = [Int: String]() // 创建一个空字典\n    namesOfIntegers[16] = \"sixteen\"\n    namesOfIntegers = [:]\n    var airports: [String: String] = [\"YYZ\": \"Toronto Pearson\", \"DUB\": \"Dublin\"] // 使用字典字面量创建字典\n    var d = [\"foo\": \"bar\"]\n    d[\"foo\"] = nil\n\n    if let removedValue = airports.removeValueForKey(\"DUB\") {\n        print(\"The removed airport's name is \\(removedValue).\")\n    } else {\n        print(\"The airports dictionary does not contain a value for DUB.\")\n    }\n    for (airportCode, airportName) in airports {\n        print(\"\\(airportCode): \\(airportName)\")\n    }\n    for airportCode in airports.keys {\n        print(\"Airport code: \\(airportCode)\")\n    }\n    for airportName in airports.values {\n        print(\"Airport name: \\(airportName)\")\n    }\n    let airportCodes = [String](airports.keys)\n    let airportNames = [String](airports.values)\n```\n\n\n## 控制流\n\n- for\n\n```swift\n    for index in 1...5 {\n        print(\"\\(index) times 5 is \\(index * 5)\")\n    }\n\n    let names = [\"Anna\", \"Alex\", \"Brian\", \"Jack\"]\n    for name in names {\n        print(\"Hello, \\(name)!\")\n    }\n\n    let numberOfLegs = [\"spider\": 8, \"ant\": 6, \"cat\": 4]\n    for (animalName, legCount) in numberOfLegs {\n        print(\"\\(animalName)s have \\(legCount) legs\")\n    }\n```\n\n- while\n\n``` swift\n    var i = 0\n    var length = 10\n    while i < length {\n        print (i)\n        i++\n    } \n\n```\n\n- repeat-while (do-while)\n\n``` swift\n    var i = 0\n    var length = 10\n    repeat {\n        print(i)\n        i++\n    } while i < 10;\n```\n\n- if\n\n``` swift\n\n    var i = 0\n    if i == 0 {\n        print(\"i = 0\")\n    } else if i > 0 {\n        print(\"i > 0\")\n    } else {\n        print(\"i < 0\")\n    }\n\n```\n\n- switch\n\n``` swift\n\n    let someCharacter: Character = \"e\"\n\n    switch someCharacter {\n        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            print(\"\\(someCharacter) is a vowel\")\n        case \"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\n        \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\":\n            print(\"\\(someCharacter) is a consonant\")\n        default:\n            print(\"\\(someCharacter) is not a vowel or a consonant\")\n    }\n\n    let approximateCount = 62\n    let countedThings = \"moons orbiting Saturn\"\n    var naturalCount: String\n    switch approximateCount {\n        case 0:\n            naturalCount = \"no\"\n        case 1..<5:\n            naturalCount = \"a few\"\n        case 5..<12:\n            naturalCount = \"several\"\n        case 12..<100:\n            naturalCount = \"dozens of\"\n        case 100..<1000:\n            naturalCount = \"hundreds of\"\n        default:\n            naturalCount = \"many\"\n    }\n    print(\"There are \\(naturalCount) \\(countedThings).\")\n\n    let somePoint = (1, 1)\n    switch somePoint {\n        case (0, 0):\n            print(\"(0, 0) is at the origin\")\n        case (_, 0):\n            print(\"(\\(somePoint.0), 0) is on the x-axis\")\n        case (0, _):\n            print(\"(0, \\(somePoint.1)) is on the y-axis\")\n        case (-2...2, -2...2):\n            print(\"(\\(somePoint.0), \\(somePoint.1)) is inside the box\")\n        default:\n            print(\"(\\(somePoint.0), \\(somePoint.1)) is outside of the box\")\n    }\n\n    let anotherPoint = (2, 0)\n    switch anotherPoint {\n        case (let x, 0):\n            print(\"on the x-axis with an x value of \\(x)\")\n        case (0, let y):\n            print(\"on the y-axis with a y value of \\(y)\")\n        case let (x, y):\n            print(\"somewhere else at (\\(x), \\(y))\")\n    }\n\n    let yetAnotherPoint = (1, -1)\n    switch yetAnotherPoint {\n        case let (x, y) where x == y:\n            print(\"(\\(x), \\(y)) is on the line x == y\")\n        case let (x, y) where x == -y:\n            print(\"(\\(x), \\(y)) is on the line x == -y\")\n        case let (x, y):\n            print(\"(\\(x), \\(y)) is just some arbitrary point\")\n    }\n\n```\n\n- break\n\n``` swift\n\n    let numberSymbol: Character = \"三\"  // 简体中文里的数字 3\n    var possibleIntegerValue: Int?\n    switch numberSymbol {\n        case \"1\", \"١\", \"一\", \"๑\":\n            possibleIntegerValue = 1\n        case \"2\", \"٢\", \"二\", \"๒\":\n            possibleIntegerValue = 2\n        case \"3\", \"٣\", \"三\", \"๓\":\n            possibleIntegerValue = 3\n        case \"4\", \"٤\", \"四\", \"๔\":\n            possibleIntegerValue = 4\n        default:\n            break\n    }\n    if let integerValue = possibleIntegerValue {\n        print(\"The integer value of \\(numberSymbol) is \\(integerValue).\")\n    } else {\n        print(\"An integer value could not be found for \\(numberSymbol).\")\n    }\n\n```\n\n- fallthrough\n\n``` swift\n\n    let integerToDescribe = 5\n    var description = \"The number \\(integerToDescribe) is\"\n    switch integerToDescribe {\n        case 2, 3, 5, 7, 11, 13, 17, 19:\n            description += \" a prime number, and also\"\n            fallthrough\n        default:\n            description += \" an integer.\"\n    }\n    print(description)\n```\n\n- guard\n\n``` swift\n    func greet(person: [String: String]) {\n        guard let name = person[\"name\"] else {\n            return\n        }\n        print(\"Hello \\(name)\")\n\n        guard let location = person[\"location\"] else {\n            print(\"I hope the weather is nice near you.\")\n            return\n        }\n        print(\"I hope the weather is nice in \\(location).\")\n    }\n    greet([\"name\": \"John\"])\n```\n\n- 函数\n\n``` swift\n    func sayHello(personName: String, alreadyGreeted: Bool) -> String {\n        if alreadyGreeted {\n            return sayHelloAgain(personName)\n        } else {\n            return sayHello(personName)\n        }\n    }\n    print(sayHello(\"Tim\", alreadyGreeted: true))\n    // prints \"Hello again, Tim!\" \n\n    func minMax(array: [Int]) -> (min: Int, max: Int) {\n        var currentMin = array[0]\n        var currentMax = array[0]\n        for value in array[1..<array.count] {\n            if value < currentMin {\n                currentMin = value\n            } else if value > currentMax {\n                currentMax = value\n            }\n        }\n        return (currentMin, currentMax)\n    }\n    let bounds = minMax([8, -6, 2, 109, 3, 71])\n    print(\"min is \\(bounds.min) and max is \\(bounds.max)\")\n    // prints \"min is -6 and max is 109\"\n\n    func sayHello(to person: String, and anotherPerson: String) -> String {\n        return \"Hello \\(person) and \\(anotherPerson)!\"\n    }\n    print(sayHello(to: \"Bill\", and: \"Ted\"))\n    // prints \"Hello Bill and Ted!\"\n\n\n    func someFunction(parameterWithDefault: Int = 12) {\n        // function body goes here\n        // if no arguments are passed to the function call,\n        // value of parameterWithDefault is 12\n    }\n    someFunction(6) // parameterWithDefault is 6\n\n    func arithmeticMean(numbers: Double...) -> Double {\n        var total: Double = 0\n        for number in numbers {\n            total += number\n        }\n        return total / Double(numbers.count)\n    }\n    arithmeticMean(1, 2, 3, 4, 5)\n```\n\n## 枚举类型\n\n``` swift\n\n    enum CompassPoint {\n        case North\n        case South\n        case East\n        case West\n    }\n\n    enum Planet {\n        case Mercury, Venus, Earth, Mars, Jupiter, Saturn, Uranus, Neptune\n    }\n\n    var directionToHead = CompassPoint.West\n    directionToHead = .East\n```\n\n- 类和结构体\n\n    - 结构体和枚举是值类型\n        值类型被赋予给一个变量、常量或者被传递给一个函数的时候，其值会被拷贝。\n        let vga = Resolution(width:640, height: 480)\n\n    - 类是引用类型\n        与值类型不同，引用类型在被赋予到一个变量、常量或者被传递到一个函数时，其值不会被拷贝。因此，引用的是已存在的实例本身而不是其拷贝。\n\n\n- 属性\n\n    - 存储属性\n\n        \n        .. code-block:: swift\n\n            struct FixedLengthRange {\n                var firstValue: Int\n                let length: Int\n            }\n            var rangeOfThreeItems = FixedLengthRange(firstValue: 0, length: 3)\n            // 该区间表示整数0，1，2\n            rangeOfThreeItems.firstValue = 6\n            // 该区间现在表示整数6，7，8\n\n    \n        常量结构体的存储属性不可以修改\n\n    - 延迟存储属性\n\n        .. code-block:: swift\n\n            class DataImporter {\n                var fileName = \"data.txt\"\n                // 这里会提供数据导入功能\n            }\n\n            class DataManager {\n                lazy var importer = DataImporter()\n                var data = [String]()\n                // 这里会提供数据管理功能\n            }\n\n            let manager = DataManager()\n            manager.data.append(\"Some data\")\n            manager.data.append(\"Some more data\")\n            // DataImporter 实例的 importer 属性还没有被创建\n            print(manager.importer.fileName)\n            // DataImporter 实例的 importer 属性现在被创建了\n            // 输出 \"data.txt”\n\n            注意:\n            如果一个被标记为 lazy 的属性在没有初始化时就同时被多个线程访问，则无法保证该属性只会被初始化一次。\n\n    - 计算属性\n\n        .. code-block:: swift\n        \n            struct Point {\n                var x = 0.0, y = 0.0\n            }\n            struct Size {\n                var width = 0.0, height = 0.0\n            }\n            struct Rect {\n                var origin = Point()\n                var size = Size()\n                var center: Point {\n                    get {\n                        let centerX = origin.x + (size.width / 2)\n                        let centerY = origin.y + (size.height / 2)\n                        return Point(x: centerX, y: centerY)\n                    }\n                    set(newCenter) {\n                        origin.x = newCenter.x - (size.width / 2)\n                        origin.y = newCenter.y - (size.height / 2)\n                    }\n                }\n            }\n            var square = Rect(origin: Point(x: 0.0, y: 0.0),\n                size: Size(width: 10.0, height: 10.0))\n            let initialSquareCenter = square.center\n            square.center = Point(x: 15.0, y: 15.0)\n            print(\"square.origin is now at (\\(square.origin.x), \\(square.origin.y))\")\n            // 输出 \"square.origin is now at (10.0, 10.0)”\n\n\n    - 只读计算属性\n\n        .. code-block:: swift\n\n            struct Cuboid {\n                var width = 0.0, height = 0.0, depth = 0.0\n                var volume: Double {\n                    return width * height * depth\n                }\n            }\n            let fourByFiveByTwo = Cuboid(width: 4.0, height: 5.0, depth: 2.0)\n            print(\"the volume of fourByFiveByTwo is \\(fourByFiveByTwo.volume)\")\n            // 输出 \"the volume of fourByFiveByTwo is 40.0\"\n\n    - 属性观察器\n\n        属性观察器监控和响应属性值的变化，每次属性被设置值的时候都会调用属性观察器，即使新值和当前值相同的时候也不例外。\n        可以为除了延迟存储属性之外的其他存储属性添加属性观察器，也可以通过重写属性的方式为继承的属性（包括存储属性和计算属性）添加属性观察器。\n        你不必为非重写的计算属性添加属性观察器，因为可以通过它的 setter 直接监控和响应值的变化。\n        可以为属性添加如下的一个或全部观察器：\n        \n            - willSet 在新的值被设置之前调用\n            - didSet 在新的值被设置之后立即调用\n\n        .. code-block:: swift\n\n            class StepCounter {\n                var totalSteps: Int = 0 {\n                    willSet(newTotalSteps) {\n                        print(\"About to set totalSteps to \\(newTotalSteps)\")\n                    }\n                    didSet {\n                        if totalSteps > oldValue  {\n                            print(\"Added \\(totalSteps - oldValue) steps\")\n                        }\n                    }\n                }\n            }\n            let stepCounter = StepCounter()\n            stepCounter.totalSteps = 200\n            // About to set totalSteps to 200\n            // Added 200 steps\n            stepCounter.totalSteps = 360\n            // About to set totalSteps to 360\n            // Added 160 steps\n            stepCounter.totalSteps = 896\n            // About to set totalSteps to 896\n            // Added 536 steps\n\n    - 全局变量和局部变量\n\n        计算属性和属性观察器所描述的功能也可以用于全局变量和局部变量。全局变量是在函数、方法、闭包或任何类型之外定义的变量。局部变量是在函数、方法或闭包内部定义的变量。\n\n        注意:\n            - 全局的常量或变量都是延迟计算的，跟延迟存储属性相似，不同的地方在于，全局的常量或变量不需要标记lazy修饰符。\n            - 局部范围的常量或变量从不延迟计算。\n\n    - 类型属性\n\n        实例属性属于一个特定类型的实例，每创建一个实例，实例都拥有属于自己的一套属性值，实例之间的属性相互独立。也可以为类型本身定义属性，无论创建了多少个该类型的实例，这些属性都只有唯一一份。这种属性就是类型属性。\n\n        .. code-block:: swift\n\n            struct SomeStructure {\n                static var storedTypeProperty = \"Some value.\"\n                static var computedTypeProperty: Int {\n                    return 1\n                }\n            }\n\n            enum SomeEnumeration {\n                static var storedTypeProperty = \"Some value.\"\n                static var computedTypeProperty: Int {\n                    return 6\n                }\n            }\n\n            class SomeClass {\n                static var storedTypeProperty = \"Some value.\"\n                static var computedTypeProperty: Int {\n                    return 27\n                }\n                class var overrideableComputedTypeProperty: Int {\n                    return 107\n                }\n            }\n\n            print(SomeStructure.storedTypeProperty)\n            // 输出 \"Some value.\"\n            SomeStructure.storedTypeProperty = \"Another value.\"\n            print(SomeStructure.storedTypeProperty)\n            // 输出 \"Another value.”\n            print(SomeEnumeration.computedTypeProperty)\n            // 输出 \"6\"\n            print(SomeClass.computedTypeProperty)\n            // 输出 \"27\"\n\n    - 方法\n\n        - 实例方法\n\n            .. code-block:: swift\n\n                class Counter {\n                    var count = 0\n                    func increment() {\n                        ++count\n                    }\n                    func incrementBy(amount: Int) {\n                        count += amount\n                    }\n                    func reset() {\n                        count = 0\n                    }\n                }\n\n\n            结构体和枚举是值类型。默认情况下，值类型的属性不能在它的实例方法中被修改。\n\n            - 在实例方法中修改值类型\n\n                .. code-block:: swift\n\n                    struct Point {\n                        var x = 0.0, y = 0.0\n                        mutating func moveByX(deltaX: Double, y deltaY: Double) {\n                            x += deltaX\n                            y += deltaY\n                        }\n                    }\n                    var somePoint = Point(x: 1.0, y: 1.0)\n                    somePoint.moveByX(2.0, y: 3.0)\n                    print(\"The point is now at (\\(somePoint.x), \\(somePoint.y))\")\n                    // 打印输出: \"The point is now at (3.0, 4.0)\"\n\n        - 类型方法\n\n            .. code-block:: swift\n\n                class Player {\n                    var tracker = LevelTracker()\n                    let playerName: String\n                    func completedLevel(level: Int) {\n                        LevelTracker.unlockLevel(level + 1)\n                        tracker.advanceToLevel(level + 1)\n                    }\n                    init(name: String) {\n                        playerName = name\n                    }\n                }\n\n                var player = Player(name: \"Argyrios\")\n                player.completedLevel(1)\n                print(\"highest unlocked level is now \\(LevelTracker.highestUnlockedLevel)\")\n                // 打印输出：highest unlocked level is now 2\n\n            如果你创建了第二个玩家，并尝试让他开始一个没有被任何玩家解锁的等级，那么试图设置玩家当前等级将会失败：\n\n            .. code-block:: swift\n\n                player = Player(name: \"Beto\")\n                if player.tracker.advanceToLevel(6) {\n                    print(\"player is now on level 6\")\n                } else {\n                    print(\"level 6 has not yet been unlocked\")\n                }\n                // 打印输出：level 6 has not yet been unlocked\n\n- 继承\n\n    - 基类和子类\n\n        .. code-block:: swift\n\n            class Vehicle {\n                var currentSpeed = 0.0\n                var description: String {\n                    return \"traveling at \\(currentSpeed) miles per hour\"\n                }\n                func makeNoise() {\n                    // 什么也不做-因为车辆不一定会有噪音\n                }\n            }\n\n            class Bicycle: Vehicle {\n                var hasBasket = false\n            }\n\n            class Train: Vehicle {\n                override func makeNoise() {\n                    print(\"Choo Choo\")\n                }\n            }\n\n            class Car: Vehicle {\n                var gear = 1\n                override var description: String {\n                    return super.description + \" in gear \\(gear)\"\n                }\n            }\n\n            let car = Car()\n            car.currentSpeed = 25.0\n            car.gear = 3\n            print(\"Car: \\(car.description)\")\n            // Car: traveling at 25.0 miles per hour in gear 3\n\n            class AutomaticCar: Car {\n                override var currentSpeed: Double {\n                    didSet {\n                        gear = Int(currentSpeed / 10.0) + 1\n                    }\n                }\n            }\n\n            let automatic = AutomaticCar()\n            automatic.currentSpeed = 35.0\n            print(\"AutomaticCar: \\(automatic.description)\")\n            // AutomaticCar: traveling at 35.0 miles per hour in gear 4\n\n    - 防止重写\n\n        你可以通过把方法，属性或下标标记为final来防止它们被重写，只需要在声明关键字前加上final修饰符即可（例如：final var，final func，final class func，以及final subscript）。  \n        如果你重写了final方法，属性或下标，在编译时会报错。在类扩展中的方法，属性或下标也可以在扩展的定义里标记为 final 的。  \n        你可以通过在关键字class前添加final修饰符（final class）来将整个类标记为 final 的。这样的类是不可被继承的，试图继承这样的类会导致编译报错。\n","source":"_posts/2016/4/Swift语言学习笔记.md","raw":"---\ntitle: Swift语言学习笔记\ndate: 2016-04-19 00:00:00\ncomments: true\ntags:\n    - Swift\n    - 学习笔记\ncategories:\n    - Swift\n---\n\n\n## 如何声明常量、变量\n\n``` swift\n    let count = 0   // let声明常量\n    var summary = 0 // var声明变量\n    var foo = 10, bar = 20 // 单行中声明多个变量或者常量使用逗号分隔\n    var message: String // 类型在变量或者常量名称后面标注，中间用冒号分隔\n```\n\n\n## 如何打印变量或者常量的值\n\n``` swift\n    let msg = \"hello, world!\"\n    print(msg)\n```\n\n## 注释\n\n- 单行注释使用//，多行注释使用 ... , 可以嵌套。\n\n## 数据类型\n- 整型\n\n    - Int8    有符号整型\n    - UInt8   无符号整型\n    - Int     有符号整型\n    - UInt    无符号整型\n    - 0b10001 二进制\n    - 0x20    八进制\n    - 0x11    十六进制\n\n- 浮点数\n\n    - Double  64位浮点数\n    - Float   32位浮点数\n\n- 字符串\n\n\n- 布尔值\n\n    - true\n    - false\n\n\n- 元组\n    let http404Error = (404, \"Not Found\")\n\n- 可选类型 ?\n    有值或者没有值\n\n- nil\n    nil表示没有值\n\n- 隐式解析可选类型 !\n    String!\n    \n- 类型别名\n    typealias Number = UInt\n\n- 可选绑定\n\n``` swift\n    if let constantName = someOptional {\n        statements\n    }\n```\n        \n## 数组\n\n``` swift\n    var arr = [Int]() //创建数组\n    arr.append(10)  // 向数组中添加元素\n    print(\"arr is of type [Int] with \\(arr.count) items.\")\n    // arr is of type [Int] with 1 items.\n    var items = [Int](count: 10, repeatedValue:1)  // 创建一个大小为10的数组，默认都是1\n    var shoppingList: [String] = [\"Eggs\", \"Milk\"] // shoppingList 已经被构造并且拥有两个初始项。\n    print(shoppingList[0])\n    shoppingList.append(\"Flour\")\n    shoppingList += [\"Baking Powder\"]\n    shoppingList += [\"Chocolate Spread\", \"Cheese\", \"Butter\"]\n    shoppingList[4...6] = [\"Bananas\", \"Apples\"]\n    shoppingList.insert(\"Maple Syrup\", atIndex: 0)\n    shoppingList.removeAtIndex(0)\n    shoppingList.removeLast(0)\n    \n    for item in shoppingList {\n        print item\n    }\n    for (index, value) in shoppingList.enumerate() {\n        print(\"Item \\(String(index + 1)): \\(value)\")\n    }\n```\n\n## 集合\n\n``` swift\n        \n    var letters = Set<Character>()  // 声明一个集合\n    letters.insert(\"a\")  // 往集合中添加值\n    letters = []  // 集合置空\n    var favoriteGenres: Set<String> = [\"Rock\", \"Classical\", \"Hip hop\"]\n    favoriteGenres.remove(\"Rock\")\n    if favoriteGenres.contains(\"Funk\"){\n        print(\"Funk in favoriteGenres\")\n    }\n\n    for genre in favoriteGenres {\n        print(\"\\(genre)\")\n    }\n\n```\n\n- 其它方法\n\n    - 使用intersect(_:)方法根据两个集合中都包含的值创建的一个新的集合。\n    - 使用exclusiveOr(_:)方法根据在一个集合中但不在两个集合中的值创建一个新的集合。\n    - 使用union(_:)方法根据两个集合的值创建一个新的集合。\n    - 使用subtract(_:)方法根据不在该集合中的值创建一个新的集合。\n    - 使用“是否相等”运算符(==)来判断两个集合是否包含全部相同的值。\n    - 使用isSubsetOf(_:)方法来判断一个集合中的值是否也被包含在另外一个集合中。\n    - 使用isSupersetOf(_:)方法来判断一个集合中包含另一个集合中所有的值。\n    - 使用isStrictSubsetOf(_:)或者isStrictSupersetOf(_:)方法来判断一个集合是否是另外一个集合的子集合或者父集合并且两个集合并不相等。\n    - 使用isDisjointWith(_:)方法来判断两个集合是否不含有相同的值(是否没有交集)。\n\n## 字典\n\n``` swift\n    var namesOfIntegers = [Int: String]() // 创建一个空字典\n    namesOfIntegers[16] = \"sixteen\"\n    namesOfIntegers = [:]\n    var airports: [String: String] = [\"YYZ\": \"Toronto Pearson\", \"DUB\": \"Dublin\"] // 使用字典字面量创建字典\n    var d = [\"foo\": \"bar\"]\n    d[\"foo\"] = nil\n\n    if let removedValue = airports.removeValueForKey(\"DUB\") {\n        print(\"The removed airport's name is \\(removedValue).\")\n    } else {\n        print(\"The airports dictionary does not contain a value for DUB.\")\n    }\n    for (airportCode, airportName) in airports {\n        print(\"\\(airportCode): \\(airportName)\")\n    }\n    for airportCode in airports.keys {\n        print(\"Airport code: \\(airportCode)\")\n    }\n    for airportName in airports.values {\n        print(\"Airport name: \\(airportName)\")\n    }\n    let airportCodes = [String](airports.keys)\n    let airportNames = [String](airports.values)\n```\n\n\n## 控制流\n\n- for\n\n```swift\n    for index in 1...5 {\n        print(\"\\(index) times 5 is \\(index * 5)\")\n    }\n\n    let names = [\"Anna\", \"Alex\", \"Brian\", \"Jack\"]\n    for name in names {\n        print(\"Hello, \\(name)!\")\n    }\n\n    let numberOfLegs = [\"spider\": 8, \"ant\": 6, \"cat\": 4]\n    for (animalName, legCount) in numberOfLegs {\n        print(\"\\(animalName)s have \\(legCount) legs\")\n    }\n```\n\n- while\n\n``` swift\n    var i = 0\n    var length = 10\n    while i < length {\n        print (i)\n        i++\n    } \n\n```\n\n- repeat-while (do-while)\n\n``` swift\n    var i = 0\n    var length = 10\n    repeat {\n        print(i)\n        i++\n    } while i < 10;\n```\n\n- if\n\n``` swift\n\n    var i = 0\n    if i == 0 {\n        print(\"i = 0\")\n    } else if i > 0 {\n        print(\"i > 0\")\n    } else {\n        print(\"i < 0\")\n    }\n\n```\n\n- switch\n\n``` swift\n\n    let someCharacter: Character = \"e\"\n\n    switch someCharacter {\n        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            print(\"\\(someCharacter) is a vowel\")\n        case \"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\n        \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\":\n            print(\"\\(someCharacter) is a consonant\")\n        default:\n            print(\"\\(someCharacter) is not a vowel or a consonant\")\n    }\n\n    let approximateCount = 62\n    let countedThings = \"moons orbiting Saturn\"\n    var naturalCount: String\n    switch approximateCount {\n        case 0:\n            naturalCount = \"no\"\n        case 1..<5:\n            naturalCount = \"a few\"\n        case 5..<12:\n            naturalCount = \"several\"\n        case 12..<100:\n            naturalCount = \"dozens of\"\n        case 100..<1000:\n            naturalCount = \"hundreds of\"\n        default:\n            naturalCount = \"many\"\n    }\n    print(\"There are \\(naturalCount) \\(countedThings).\")\n\n    let somePoint = (1, 1)\n    switch somePoint {\n        case (0, 0):\n            print(\"(0, 0) is at the origin\")\n        case (_, 0):\n            print(\"(\\(somePoint.0), 0) is on the x-axis\")\n        case (0, _):\n            print(\"(0, \\(somePoint.1)) is on the y-axis\")\n        case (-2...2, -2...2):\n            print(\"(\\(somePoint.0), \\(somePoint.1)) is inside the box\")\n        default:\n            print(\"(\\(somePoint.0), \\(somePoint.1)) is outside of the box\")\n    }\n\n    let anotherPoint = (2, 0)\n    switch anotherPoint {\n        case (let x, 0):\n            print(\"on the x-axis with an x value of \\(x)\")\n        case (0, let y):\n            print(\"on the y-axis with a y value of \\(y)\")\n        case let (x, y):\n            print(\"somewhere else at (\\(x), \\(y))\")\n    }\n\n    let yetAnotherPoint = (1, -1)\n    switch yetAnotherPoint {\n        case let (x, y) where x == y:\n            print(\"(\\(x), \\(y)) is on the line x == y\")\n        case let (x, y) where x == -y:\n            print(\"(\\(x), \\(y)) is on the line x == -y\")\n        case let (x, y):\n            print(\"(\\(x), \\(y)) is just some arbitrary point\")\n    }\n\n```\n\n- break\n\n``` swift\n\n    let numberSymbol: Character = \"三\"  // 简体中文里的数字 3\n    var possibleIntegerValue: Int?\n    switch numberSymbol {\n        case \"1\", \"١\", \"一\", \"๑\":\n            possibleIntegerValue = 1\n        case \"2\", \"٢\", \"二\", \"๒\":\n            possibleIntegerValue = 2\n        case \"3\", \"٣\", \"三\", \"๓\":\n            possibleIntegerValue = 3\n        case \"4\", \"٤\", \"四\", \"๔\":\n            possibleIntegerValue = 4\n        default:\n            break\n    }\n    if let integerValue = possibleIntegerValue {\n        print(\"The integer value of \\(numberSymbol) is \\(integerValue).\")\n    } else {\n        print(\"An integer value could not be found for \\(numberSymbol).\")\n    }\n\n```\n\n- fallthrough\n\n``` swift\n\n    let integerToDescribe = 5\n    var description = \"The number \\(integerToDescribe) is\"\n    switch integerToDescribe {\n        case 2, 3, 5, 7, 11, 13, 17, 19:\n            description += \" a prime number, and also\"\n            fallthrough\n        default:\n            description += \" an integer.\"\n    }\n    print(description)\n```\n\n- guard\n\n``` swift\n    func greet(person: [String: String]) {\n        guard let name = person[\"name\"] else {\n            return\n        }\n        print(\"Hello \\(name)\")\n\n        guard let location = person[\"location\"] else {\n            print(\"I hope the weather is nice near you.\")\n            return\n        }\n        print(\"I hope the weather is nice in \\(location).\")\n    }\n    greet([\"name\": \"John\"])\n```\n\n- 函数\n\n``` swift\n    func sayHello(personName: String, alreadyGreeted: Bool) -> String {\n        if alreadyGreeted {\n            return sayHelloAgain(personName)\n        } else {\n            return sayHello(personName)\n        }\n    }\n    print(sayHello(\"Tim\", alreadyGreeted: true))\n    // prints \"Hello again, Tim!\" \n\n    func minMax(array: [Int]) -> (min: Int, max: Int) {\n        var currentMin = array[0]\n        var currentMax = array[0]\n        for value in array[1..<array.count] {\n            if value < currentMin {\n                currentMin = value\n            } else if value > currentMax {\n                currentMax = value\n            }\n        }\n        return (currentMin, currentMax)\n    }\n    let bounds = minMax([8, -6, 2, 109, 3, 71])\n    print(\"min is \\(bounds.min) and max is \\(bounds.max)\")\n    // prints \"min is -6 and max is 109\"\n\n    func sayHello(to person: String, and anotherPerson: String) -> String {\n        return \"Hello \\(person) and \\(anotherPerson)!\"\n    }\n    print(sayHello(to: \"Bill\", and: \"Ted\"))\n    // prints \"Hello Bill and Ted!\"\n\n\n    func someFunction(parameterWithDefault: Int = 12) {\n        // function body goes here\n        // if no arguments are passed to the function call,\n        // value of parameterWithDefault is 12\n    }\n    someFunction(6) // parameterWithDefault is 6\n\n    func arithmeticMean(numbers: Double...) -> Double {\n        var total: Double = 0\n        for number in numbers {\n            total += number\n        }\n        return total / Double(numbers.count)\n    }\n    arithmeticMean(1, 2, 3, 4, 5)\n```\n\n## 枚举类型\n\n``` swift\n\n    enum CompassPoint {\n        case North\n        case South\n        case East\n        case West\n    }\n\n    enum Planet {\n        case Mercury, Venus, Earth, Mars, Jupiter, Saturn, Uranus, Neptune\n    }\n\n    var directionToHead = CompassPoint.West\n    directionToHead = .East\n```\n\n- 类和结构体\n\n    - 结构体和枚举是值类型\n        值类型被赋予给一个变量、常量或者被传递给一个函数的时候，其值会被拷贝。\n        let vga = Resolution(width:640, height: 480)\n\n    - 类是引用类型\n        与值类型不同，引用类型在被赋予到一个变量、常量或者被传递到一个函数时，其值不会被拷贝。因此，引用的是已存在的实例本身而不是其拷贝。\n\n\n- 属性\n\n    - 存储属性\n\n        \n        .. code-block:: swift\n\n            struct FixedLengthRange {\n                var firstValue: Int\n                let length: Int\n            }\n            var rangeOfThreeItems = FixedLengthRange(firstValue: 0, length: 3)\n            // 该区间表示整数0，1，2\n            rangeOfThreeItems.firstValue = 6\n            // 该区间现在表示整数6，7，8\n\n    \n        常量结构体的存储属性不可以修改\n\n    - 延迟存储属性\n\n        .. code-block:: swift\n\n            class DataImporter {\n                var fileName = \"data.txt\"\n                // 这里会提供数据导入功能\n            }\n\n            class DataManager {\n                lazy var importer = DataImporter()\n                var data = [String]()\n                // 这里会提供数据管理功能\n            }\n\n            let manager = DataManager()\n            manager.data.append(\"Some data\")\n            manager.data.append(\"Some more data\")\n            // DataImporter 实例的 importer 属性还没有被创建\n            print(manager.importer.fileName)\n            // DataImporter 实例的 importer 属性现在被创建了\n            // 输出 \"data.txt”\n\n            注意:\n            如果一个被标记为 lazy 的属性在没有初始化时就同时被多个线程访问，则无法保证该属性只会被初始化一次。\n\n    - 计算属性\n\n        .. code-block:: swift\n        \n            struct Point {\n                var x = 0.0, y = 0.0\n            }\n            struct Size {\n                var width = 0.0, height = 0.0\n            }\n            struct Rect {\n                var origin = Point()\n                var size = Size()\n                var center: Point {\n                    get {\n                        let centerX = origin.x + (size.width / 2)\n                        let centerY = origin.y + (size.height / 2)\n                        return Point(x: centerX, y: centerY)\n                    }\n                    set(newCenter) {\n                        origin.x = newCenter.x - (size.width / 2)\n                        origin.y = newCenter.y - (size.height / 2)\n                    }\n                }\n            }\n            var square = Rect(origin: Point(x: 0.0, y: 0.0),\n                size: Size(width: 10.0, height: 10.0))\n            let initialSquareCenter = square.center\n            square.center = Point(x: 15.0, y: 15.0)\n            print(\"square.origin is now at (\\(square.origin.x), \\(square.origin.y))\")\n            // 输出 \"square.origin is now at (10.0, 10.0)”\n\n\n    - 只读计算属性\n\n        .. code-block:: swift\n\n            struct Cuboid {\n                var width = 0.0, height = 0.0, depth = 0.0\n                var volume: Double {\n                    return width * height * depth\n                }\n            }\n            let fourByFiveByTwo = Cuboid(width: 4.0, height: 5.0, depth: 2.0)\n            print(\"the volume of fourByFiveByTwo is \\(fourByFiveByTwo.volume)\")\n            // 输出 \"the volume of fourByFiveByTwo is 40.0\"\n\n    - 属性观察器\n\n        属性观察器监控和响应属性值的变化，每次属性被设置值的时候都会调用属性观察器，即使新值和当前值相同的时候也不例外。\n        可以为除了延迟存储属性之外的其他存储属性添加属性观察器，也可以通过重写属性的方式为继承的属性（包括存储属性和计算属性）添加属性观察器。\n        你不必为非重写的计算属性添加属性观察器，因为可以通过它的 setter 直接监控和响应值的变化。\n        可以为属性添加如下的一个或全部观察器：\n        \n            - willSet 在新的值被设置之前调用\n            - didSet 在新的值被设置之后立即调用\n\n        .. code-block:: swift\n\n            class StepCounter {\n                var totalSteps: Int = 0 {\n                    willSet(newTotalSteps) {\n                        print(\"About to set totalSteps to \\(newTotalSteps)\")\n                    }\n                    didSet {\n                        if totalSteps > oldValue  {\n                            print(\"Added \\(totalSteps - oldValue) steps\")\n                        }\n                    }\n                }\n            }\n            let stepCounter = StepCounter()\n            stepCounter.totalSteps = 200\n            // About to set totalSteps to 200\n            // Added 200 steps\n            stepCounter.totalSteps = 360\n            // About to set totalSteps to 360\n            // Added 160 steps\n            stepCounter.totalSteps = 896\n            // About to set totalSteps to 896\n            // Added 536 steps\n\n    - 全局变量和局部变量\n\n        计算属性和属性观察器所描述的功能也可以用于全局变量和局部变量。全局变量是在函数、方法、闭包或任何类型之外定义的变量。局部变量是在函数、方法或闭包内部定义的变量。\n\n        注意:\n            - 全局的常量或变量都是延迟计算的，跟延迟存储属性相似，不同的地方在于，全局的常量或变量不需要标记lazy修饰符。\n            - 局部范围的常量或变量从不延迟计算。\n\n    - 类型属性\n\n        实例属性属于一个特定类型的实例，每创建一个实例，实例都拥有属于自己的一套属性值，实例之间的属性相互独立。也可以为类型本身定义属性，无论创建了多少个该类型的实例，这些属性都只有唯一一份。这种属性就是类型属性。\n\n        .. code-block:: swift\n\n            struct SomeStructure {\n                static var storedTypeProperty = \"Some value.\"\n                static var computedTypeProperty: Int {\n                    return 1\n                }\n            }\n\n            enum SomeEnumeration {\n                static var storedTypeProperty = \"Some value.\"\n                static var computedTypeProperty: Int {\n                    return 6\n                }\n            }\n\n            class SomeClass {\n                static var storedTypeProperty = \"Some value.\"\n                static var computedTypeProperty: Int {\n                    return 27\n                }\n                class var overrideableComputedTypeProperty: Int {\n                    return 107\n                }\n            }\n\n            print(SomeStructure.storedTypeProperty)\n            // 输出 \"Some value.\"\n            SomeStructure.storedTypeProperty = \"Another value.\"\n            print(SomeStructure.storedTypeProperty)\n            // 输出 \"Another value.”\n            print(SomeEnumeration.computedTypeProperty)\n            // 输出 \"6\"\n            print(SomeClass.computedTypeProperty)\n            // 输出 \"27\"\n\n    - 方法\n\n        - 实例方法\n\n            .. code-block:: swift\n\n                class Counter {\n                    var count = 0\n                    func increment() {\n                        ++count\n                    }\n                    func incrementBy(amount: Int) {\n                        count += amount\n                    }\n                    func reset() {\n                        count = 0\n                    }\n                }\n\n\n            结构体和枚举是值类型。默认情况下，值类型的属性不能在它的实例方法中被修改。\n\n            - 在实例方法中修改值类型\n\n                .. code-block:: swift\n\n                    struct Point {\n                        var x = 0.0, y = 0.0\n                        mutating func moveByX(deltaX: Double, y deltaY: Double) {\n                            x += deltaX\n                            y += deltaY\n                        }\n                    }\n                    var somePoint = Point(x: 1.0, y: 1.0)\n                    somePoint.moveByX(2.0, y: 3.0)\n                    print(\"The point is now at (\\(somePoint.x), \\(somePoint.y))\")\n                    // 打印输出: \"The point is now at (3.0, 4.0)\"\n\n        - 类型方法\n\n            .. code-block:: swift\n\n                class Player {\n                    var tracker = LevelTracker()\n                    let playerName: String\n                    func completedLevel(level: Int) {\n                        LevelTracker.unlockLevel(level + 1)\n                        tracker.advanceToLevel(level + 1)\n                    }\n                    init(name: String) {\n                        playerName = name\n                    }\n                }\n\n                var player = Player(name: \"Argyrios\")\n                player.completedLevel(1)\n                print(\"highest unlocked level is now \\(LevelTracker.highestUnlockedLevel)\")\n                // 打印输出：highest unlocked level is now 2\n\n            如果你创建了第二个玩家，并尝试让他开始一个没有被任何玩家解锁的等级，那么试图设置玩家当前等级将会失败：\n\n            .. code-block:: swift\n\n                player = Player(name: \"Beto\")\n                if player.tracker.advanceToLevel(6) {\n                    print(\"player is now on level 6\")\n                } else {\n                    print(\"level 6 has not yet been unlocked\")\n                }\n                // 打印输出：level 6 has not yet been unlocked\n\n- 继承\n\n    - 基类和子类\n\n        .. code-block:: swift\n\n            class Vehicle {\n                var currentSpeed = 0.0\n                var description: String {\n                    return \"traveling at \\(currentSpeed) miles per hour\"\n                }\n                func makeNoise() {\n                    // 什么也不做-因为车辆不一定会有噪音\n                }\n            }\n\n            class Bicycle: Vehicle {\n                var hasBasket = false\n            }\n\n            class Train: Vehicle {\n                override func makeNoise() {\n                    print(\"Choo Choo\")\n                }\n            }\n\n            class Car: Vehicle {\n                var gear = 1\n                override var description: String {\n                    return super.description + \" in gear \\(gear)\"\n                }\n            }\n\n            let car = Car()\n            car.currentSpeed = 25.0\n            car.gear = 3\n            print(\"Car: \\(car.description)\")\n            // Car: traveling at 25.0 miles per hour in gear 3\n\n            class AutomaticCar: Car {\n                override var currentSpeed: Double {\n                    didSet {\n                        gear = Int(currentSpeed / 10.0) + 1\n                    }\n                }\n            }\n\n            let automatic = AutomaticCar()\n            automatic.currentSpeed = 35.0\n            print(\"AutomaticCar: \\(automatic.description)\")\n            // AutomaticCar: traveling at 35.0 miles per hour in gear 4\n\n    - 防止重写\n\n        你可以通过把方法，属性或下标标记为final来防止它们被重写，只需要在声明关键字前加上final修饰符即可（例如：final var，final func，final class func，以及final subscript）。  \n        如果你重写了final方法，属性或下标，在编译时会报错。在类扩展中的方法，属性或下标也可以在扩展的定义里标记为 final 的。  \n        你可以通过在关键字class前添加final修饰符（final class）来将整个类标记为 final 的。这样的类是不可被继承的，试图继承这样的类会导致编译报错。\n","slug":"2016/4/Swift语言学习笔记","published":1,"updated":"2016-06-12T01:52:21.000Z","_id":"cip959m2g000lc5bjt960n729","layout":"post","photos":[],"link":"","content":"<h2 id=\"如何声明常量、变量\"><a href=\"#如何声明常量、变量\" class=\"headerlink\" title=\"如何声明常量、变量\"></a>如何声明常量、变量</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"built_in\">count</span> = <span class=\"number\">0</span>   <span class=\"comment\">// let声明常量</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> summary = <span class=\"number\">0</span> <span class=\"comment\">// var声明变量</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"number\">10</span>, bar = <span class=\"number\">20</span> <span class=\"comment\">// 单行中声明多个变量或者常量使用逗号分隔</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> message: <span class=\"type\">String</span> <span class=\"comment\">// 类型在变量或者常量名称后面标注，中间用冒号分隔</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"如何打印变量或者常量的值\"><a href=\"#如何打印变量或者常量的值\" class=\"headerlink\" title=\"如何打印变量或者常量的值\"></a>如何打印变量或者常量的值</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> msg = <span class=\"string\">\"hello, world!\"</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(msg)</span><br></pre></td></tr></table></figure>\n<h2 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h2><ul>\n<li>单行注释使用//，多行注释使用 … , 可以嵌套。</li>\n</ul>\n<h2 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h2><ul>\n<li><p>整型</p>\n<ul>\n<li>Int8    有符号整型</li>\n<li>UInt8   无符号整型</li>\n<li>Int     有符号整型</li>\n<li>UInt    无符号整型</li>\n<li>0b10001 二进制</li>\n<li>0x20    八进制</li>\n<li>0x11    十六进制</li>\n</ul>\n</li>\n<li><p>浮点数</p>\n<ul>\n<li>Double  64位浮点数</li>\n<li>Float   32位浮点数</li>\n</ul>\n</li>\n<li><p>字符串</p>\n</li>\n</ul>\n<ul>\n<li><p>布尔值</p>\n<ul>\n<li>true</li>\n<li>false</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>元组<br>  let http404Error = (404, “Not Found”)</p>\n</li>\n<li><p>可选类型 ?<br>  有值或者没有值</p>\n</li>\n<li><p>nil<br>  nil表示没有值</p>\n</li>\n<li><p>隐式解析可选类型 !<br>  String!</p>\n</li>\n<li><p>类型别名<br>  typealias Number = UInt</p>\n</li>\n<li><p>可选绑定</p>\n</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">let</span> constantName = someOptional &#123;</span><br><span class=\"line\">    statements</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"type\">Int</span>]() <span class=\"comment\">//创建数组</span></span><br><span class=\"line\">arr.append(<span class=\"number\">10</span>)  <span class=\"comment\">// 向数组中添加元素</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"arr is of type [Int] with \\(arr.count) items.\"</span>)</span><br><span class=\"line\"><span class=\"comment\">// arr is of type [Int] with 1 items.</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> items = [<span class=\"type\">Int</span>](<span class=\"built_in\">count</span>: <span class=\"number\">10</span>, repeatedValue:<span class=\"number\">1</span>)  <span class=\"comment\">// 创建一个大小为10的数组，默认都是1</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> shoppingList: [<span class=\"type\">String</span>] = [<span class=\"string\">\"Eggs\"</span>, <span class=\"string\">\"Milk\"</span>] <span class=\"comment\">// shoppingList 已经被构造并且拥有两个初始项。</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(shoppingList[<span class=\"number\">0</span>])</span><br><span class=\"line\">shoppingList.append(<span class=\"string\">\"Flour\"</span>)</span><br><span class=\"line\">shoppingList += [<span class=\"string\">\"Baking Powder\"</span>]</span><br><span class=\"line\">shoppingList += [<span class=\"string\">\"Chocolate Spread\"</span>, <span class=\"string\">\"Cheese\"</span>, <span class=\"string\">\"Butter\"</span>]</span><br><span class=\"line\">shoppingList[<span class=\"number\">4</span>...<span class=\"number\">6</span>] = [<span class=\"string\">\"Bananas\"</span>, <span class=\"string\">\"Apples\"</span>]</span><br><span class=\"line\">shoppingList.insert(<span class=\"string\">\"Maple Syrup\"</span>, atIndex: <span class=\"number\">0</span>)</span><br><span class=\"line\">shoppingList.removeAtIndex(<span class=\"number\">0</span>)</span><br><span class=\"line\">shoppingList.removeLast(<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> shoppingList &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span> item</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (index, value) <span class=\"keyword\">in</span> shoppingList.<span class=\"built_in\">enumerate</span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Item \\(String(index + 1)): \\(value)\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"集合\"><a href=\"#集合\" class=\"headerlink\" title=\"集合\"></a>集合</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">var</span> letters = <span class=\"type\">Set</span>&lt;<span class=\"type\">Character</span>&gt;()  <span class=\"comment\">// 声明一个集合</span></span><br><span class=\"line\">letters.insert(<span class=\"string\">\"a\"</span>)  <span class=\"comment\">// 往集合中添加值</span></span><br><span class=\"line\">letters = []  <span class=\"comment\">// 集合置空</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> favoriteGenres: <span class=\"type\">Set</span>&lt;<span class=\"type\">String</span>&gt; = [<span class=\"string\">\"Rock\"</span>, <span class=\"string\">\"Classical\"</span>, <span class=\"string\">\"Hip hop\"</span>]</span><br><span class=\"line\">favoriteGenres.remove(<span class=\"string\">\"Rock\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> favoriteGenres.<span class=\"built_in\">contains</span>(<span class=\"string\">\"Funk\"</span>)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Funk in favoriteGenres\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> genre <span class=\"keyword\">in</span> favoriteGenres &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"\\(genre)\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>其它方法</p>\n<ul>\n<li>使用intersect(_:)方法根据两个集合中都包含的值创建的一个新的集合。</li>\n<li>使用exclusiveOr(_:)方法根据在一个集合中但不在两个集合中的值创建一个新的集合。</li>\n<li>使用union(_:)方法根据两个集合的值创建一个新的集合。</li>\n<li>使用subtract(_:)方法根据不在该集合中的值创建一个新的集合。</li>\n<li>使用“是否相等”运算符(==)来判断两个集合是否包含全部相同的值。</li>\n<li>使用isSubsetOf(_:)方法来判断一个集合中的值是否也被包含在另外一个集合中。</li>\n<li>使用isSupersetOf(_:)方法来判断一个集合中包含另一个集合中所有的值。</li>\n<li>使用isStrictSubsetOf(<em>:)或者isStrictSupersetOf(</em>:)方法来判断一个集合是否是另外一个集合的子集合或者父集合并且两个集合并不相等。</li>\n<li>使用isDisjointWith(_:)方法来判断两个集合是否不含有相同的值(是否没有交集)。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"字典\"><a href=\"#字典\" class=\"headerlink\" title=\"字典\"></a>字典</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> namesOfIntegers = [<span class=\"type\">Int</span>: <span class=\"type\">String</span>]() <span class=\"comment\">// 创建一个空字典</span></span><br><span class=\"line\">namesOfIntegers[<span class=\"number\">16</span>] = <span class=\"string\">\"sixteen\"</span></span><br><span class=\"line\">namesOfIntegers = [:]</span><br><span class=\"line\"><span class=\"keyword\">var</span> airports: [<span class=\"type\">String</span>: <span class=\"type\">String</span>] = [<span class=\"string\">\"YYZ\"</span>: <span class=\"string\">\"Toronto Pearson\"</span>, <span class=\"string\">\"DUB\"</span>: <span class=\"string\">\"Dublin\"</span>] <span class=\"comment\">// 使用字典字面量创建字典</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> d = [<span class=\"string\">\"foo\"</span>: <span class=\"string\">\"bar\"</span>]</span><br><span class=\"line\">d[<span class=\"string\">\"foo\"</span>] = <span class=\"literal\">nil</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">let</span> removedValue = airports.removeValueForKey(<span class=\"string\">\"DUB\"</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"The removed airport's name is \\(removedValue).\"</span>)</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"The airports dictionary does not contain a value for DUB.\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (airportCode, airportName) <span class=\"keyword\">in</span> airports &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"\\(airportCode): \\(airportName)\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> airportCode <span class=\"keyword\">in</span> airports.keys &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Airport code: \\(airportCode)\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> airportName <span class=\"keyword\">in</span> airports.values &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Airport name: \\(airportName)\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> airportCodes = [<span class=\"type\">String</span>](airports.keys)</span><br><span class=\"line\"><span class=\"keyword\">let</span> airportNames = [<span class=\"type\">String</span>](airports.values)</span><br></pre></td></tr></table></figure>\n<h2 id=\"控制流\"><a href=\"#控制流\" class=\"headerlink\" title=\"控制流\"></a>控制流</h2><ul>\n<li>for</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> index <span class=\"keyword\">in</span> <span class=\"number\">1</span>...<span class=\"number\">5</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"\\(index) times 5 is \\(index * 5)\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> names = [<span class=\"string\">\"Anna\"</span>, <span class=\"string\">\"Alex\"</span>, <span class=\"string\">\"Brian\"</span>, <span class=\"string\">\"Jack\"</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> names &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Hello, \\(name)!\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> numberOfLegs = [<span class=\"string\">\"spider\"</span>: <span class=\"number\">8</span>, <span class=\"string\">\"ant\"</span>: <span class=\"number\">6</span>, <span class=\"string\">\"cat\"</span>: <span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> (animalName, legCount) <span class=\"keyword\">in</span> numberOfLegs &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"\\(animalName)s have \\(legCount) legs\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>while</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> i = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> length = <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> i &lt; length &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span> (i)</span><br><span class=\"line\">    i++</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>repeat-while (do-while)</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> i = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> length = <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"keyword\">repeat</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">    i++</span><br><span class=\"line\">&#125; <span class=\"keyword\">while</span> i &lt; <span class=\"number\">10</span>;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>if</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> i = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> i == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"i = 0\"</span>)</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> i &gt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"i &gt; 0\"</span>)</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"i &lt; 0\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>switch</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> someCharacter: <span class=\"type\">Character</span> = <span class=\"string\">\"e\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">switch</span> someCharacter &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"a\"</span>, <span class=\"string\">\"e\"</span>, <span class=\"string\">\"i\"</span>, <span class=\"string\">\"o\"</span>, <span class=\"string\">\"u\"</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"\\(someCharacter) is a vowel\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"b\"</span>, <span class=\"string\">\"c\"</span>, <span class=\"string\">\"d\"</span>, <span class=\"string\">\"f\"</span>, <span class=\"string\">\"g\"</span>, <span class=\"string\">\"h\"</span>, <span class=\"string\">\"j\"</span>, <span class=\"string\">\"k\"</span>, <span class=\"string\">\"l\"</span>, <span class=\"string\">\"m\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"n\"</span>, <span class=\"string\">\"p\"</span>, <span class=\"string\">\"q\"</span>, <span class=\"string\">\"r\"</span>, <span class=\"string\">\"s\"</span>, <span class=\"string\">\"t\"</span>, <span class=\"string\">\"v\"</span>, <span class=\"string\">\"w\"</span>, <span class=\"string\">\"x\"</span>, <span class=\"string\">\"y\"</span>, <span class=\"string\">\"z\"</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"\\(someCharacter) is a consonant\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"\\(someCharacter) is not a vowel or a consonant\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> approximateCount = <span class=\"number\">62</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> countedThings = <span class=\"string\">\"moons orbiting Saturn\"</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> naturalCount: <span class=\"type\">String</span></span><br><span class=\"line\"><span class=\"keyword\">switch</span> approximateCount &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">0</span>:</span><br><span class=\"line\">        naturalCount = <span class=\"string\">\"no\"</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">1</span>..&lt;<span class=\"number\">5</span>:</span><br><span class=\"line\">        naturalCount = <span class=\"string\">\"a few\"</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">5</span>..&lt;<span class=\"number\">12</span>:</span><br><span class=\"line\">        naturalCount = <span class=\"string\">\"several\"</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">12</span>..&lt;<span class=\"number\">100</span>:</span><br><span class=\"line\">        naturalCount = <span class=\"string\">\"dozens of\"</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">100</span>..&lt;<span class=\"number\">1000</span>:</span><br><span class=\"line\">        naturalCount = <span class=\"string\">\"hundreds of\"</span></span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        naturalCount = <span class=\"string\">\"many\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"There are \\(naturalCount) \\(countedThings).\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> somePoint = (<span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"keyword\">switch</span> somePoint &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> (<span class=\"number\">0</span>, <span class=\"number\">0</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"(0, 0) is at the origin\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">case</span> (<span class=\"number\">_</span>, <span class=\"number\">0</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"(\\(somePoint.0), 0) is on the x-axis\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">case</span> (<span class=\"number\">0</span>, <span class=\"number\">_</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"(0, \\(somePoint.1)) is on the y-axis\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">case</span> (-<span class=\"number\">2</span>...<span class=\"number\">2</span>, -<span class=\"number\">2</span>...<span class=\"number\">2</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"(\\(somePoint.0), \\(somePoint.1)) is inside the box\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"(\\(somePoint.0), \\(somePoint.1)) is outside of the box\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> anotherPoint = (<span class=\"number\">2</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"keyword\">switch</span> anotherPoint &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> (<span class=\"keyword\">let</span> x, <span class=\"number\">0</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"on the x-axis with an x value of \\(x)\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">case</span> (<span class=\"number\">0</span>, <span class=\"keyword\">let</span> y):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"on the y-axis with a y value of \\(y)\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"keyword\">let</span> (x, y):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"somewhere else at (\\(x), \\(y))\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> yetAnotherPoint = (<span class=\"number\">1</span>, -<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"keyword\">switch</span> yetAnotherPoint &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"keyword\">let</span> (x, y) <span class=\"keyword\">where</span> x == y:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"(\\(x), \\(y)) is on the line x == y\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"keyword\">let</span> (x, y) <span class=\"keyword\">where</span> x == -y:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"(\\(x), \\(y)) is on the line x == -y\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"keyword\">let</span> (x, y):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"(\\(x), \\(y)) is just some arbitrary point\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>break</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> numberSymbol: <span class=\"type\">Character</span> = <span class=\"string\">\"三\"</span>  <span class=\"comment\">// 简体中文里的数字 3</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> possibleIntegerValue: <span class=\"type\">Int</span>?</span><br><span class=\"line\"><span class=\"keyword\">switch</span> numberSymbol &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"1\"</span>, <span class=\"string\">\"١\"</span>, <span class=\"string\">\"一\"</span>, <span class=\"string\">\"๑\"</span>:</span><br><span class=\"line\">        possibleIntegerValue = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"2\"</span>, <span class=\"string\">\"٢\"</span>, <span class=\"string\">\"二\"</span>, <span class=\"string\">\"๒\"</span>:</span><br><span class=\"line\">        possibleIntegerValue = <span class=\"number\">2</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"3\"</span>, <span class=\"string\">\"٣\"</span>, <span class=\"string\">\"三\"</span>, <span class=\"string\">\"๓\"</span>:</span><br><span class=\"line\">        possibleIntegerValue = <span class=\"number\">3</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"4\"</span>, <span class=\"string\">\"٤\"</span>, <span class=\"string\">\"四\"</span>, <span class=\"string\">\"๔\"</span>:</span><br><span class=\"line\">        possibleIntegerValue = <span class=\"number\">4</span></span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">let</span> integerValue = possibleIntegerValue &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"The integer value of \\(numberSymbol) is \\(integerValue).\"</span>)</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"An integer value could not be found for \\(numberSymbol).\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>fallthrough</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> integerToDescribe = <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> description = <span class=\"string\">\"The number \\(integerToDescribe) is\"</span></span><br><span class=\"line\"><span class=\"keyword\">switch</span> integerToDescribe &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">17</span>, <span class=\"number\">19</span>:</span><br><span class=\"line\">        description += <span class=\"string\">\" a prime number, and also\"</span></span><br><span class=\"line\">        <span class=\"keyword\">fallthrough</span></span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        description += <span class=\"string\">\" an integer.\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(description)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>guard</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">greet</span><span class=\"params\">(person: [String: String])</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> name = person[<span class=\"string\">\"name\"</span>] <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Hello \\(name)\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> location = person[<span class=\"string\">\"location\"</span>] <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"I hope the weather is nice near you.\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"I hope the weather is nice in \\(location).\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">greet([<span class=\"string\">\"name\"</span>: <span class=\"string\">\"John\"</span>])</span><br></pre></td></tr></table></figure>\n<ul>\n<li>函数</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sayHello</span><span class=\"params\">(personName: String, alreadyGreeted: Bool)</span></span> -&gt; <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> alreadyGreeted &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sayHelloAgain(personName)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sayHello(personName)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(sayHello(<span class=\"string\">\"Tim\"</span>, alreadyGreeted: <span class=\"literal\">true</span>))</span><br><span class=\"line\"><span class=\"comment\">// prints \"Hello again, Tim!\" </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">minMax</span><span class=\"params\">(array: [Int])</span></span> -&gt; (<span class=\"built_in\">min</span>: <span class=\"type\">Int</span>, <span class=\"built_in\">max</span>: <span class=\"type\">Int</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> currentMin = array[<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"keyword\">var</span> currentMax = array[<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> value <span class=\"keyword\">in</span> array[<span class=\"number\">1</span>..&lt;array.<span class=\"built_in\">count</span>] &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> value &lt; currentMin &#123;</span><br><span class=\"line\">            currentMin = value</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> value &gt; currentMax &#123;</span><br><span class=\"line\">            currentMax = value</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (currentMin, currentMax)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> bounds = minMax([<span class=\"number\">8</span>, -<span class=\"number\">6</span>, <span class=\"number\">2</span>, <span class=\"number\">109</span>, <span class=\"number\">3</span>, <span class=\"number\">71</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"min is \\(bounds.min) and max is \\(bounds.max)\"</span>)</span><br><span class=\"line\"><span class=\"comment\">// prints \"min is -6 and max is 109\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sayHello</span><span class=\"params\">(to person: String, and anotherPerson: String)</span></span> -&gt; <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"Hello \\(person) and \\(anotherPerson)!\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(sayHello(to: <span class=\"string\">\"Bill\"</span>, and: <span class=\"string\">\"Ted\"</span>))</span><br><span class=\"line\"><span class=\"comment\">// prints \"Hello Bill and Ted!\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">someFunction</span><span class=\"params\">(parameterWithDefault: Int = <span class=\"number\">12</span>)</span></span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// function body goes here</span></span><br><span class=\"line\">    <span class=\"comment\">// if no arguments are passed to the function call,</span></span><br><span class=\"line\">    <span class=\"comment\">// value of parameterWithDefault is 12</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">someFunction(<span class=\"number\">6</span>) <span class=\"comment\">// parameterWithDefault is 6</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">arithmeticMean</span><span class=\"params\">(numbers: Double...)</span></span> -&gt; <span class=\"type\">Double</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> total: <span class=\"type\">Double</span> = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> number <span class=\"keyword\">in</span> numbers &#123;</span><br><span class=\"line\">        total += number</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> total / <span class=\"type\">Double</span>(numbers.<span class=\"built_in\">count</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">arithmeticMean(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"枚举类型\"><a href=\"#枚举类型\" class=\"headerlink\" title=\"枚举类型\"></a>枚举类型</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">CompassPoint</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">North</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">South</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">East</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">West</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">Planet</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Mercury</span>, <span class=\"type\">Venus</span>, <span class=\"type\">Earth</span>, <span class=\"type\">Mars</span>, <span class=\"type\">Jupiter</span>, <span class=\"type\">Saturn</span>, <span class=\"type\">Uranus</span>, <span class=\"type\">Neptune</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> directionToHead = <span class=\"type\">CompassPoint</span>.<span class=\"type\">West</span></span><br><span class=\"line\">directionToHead = .<span class=\"type\">East</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>类和结构体</p>\n<ul>\n<li><p>结构体和枚举是值类型<br>  值类型被赋予给一个变量、常量或者被传递给一个函数的时候，其值会被拷贝。<br>  let vga = Resolution(width:640, height: 480)</p>\n</li>\n<li><p>类是引用类型<br>  与值类型不同，引用类型在被赋予到一个变量、常量或者被传递到一个函数时，其值不会被拷贝。因此，引用的是已存在的实例本身而不是其拷贝。</p>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>属性</p>\n<ul>\n<li>存储属性</li>\n</ul>\n</li>\n</ul>\n<pre><code>    .. code-block:: swift\n\n        struct FixedLengthRange {\n            var firstValue: Int\n            let length: Int\n        }\n        var rangeOfThreeItems = FixedLengthRange(firstValue: 0, length: 3)\n        // 该区间表示整数0，1，2\n        rangeOfThreeItems.firstValue = 6\n        // 该区间现在表示整数6，7，8\n\n\n    常量结构体的存储属性不可以修改\n\n- 延迟存储属性\n\n    .. code-block:: swift\n\n        class DataImporter {\n            var fileName = &quot;data.txt&quot;\n            // 这里会提供数据导入功能\n        }\n\n        class DataManager {\n            lazy var importer = DataImporter()\n            var data = [String]()\n            // 这里会提供数据管理功能\n        }\n\n        let manager = DataManager()\n        manager.data.append(&quot;Some data&quot;)\n        manager.data.append(&quot;Some more data&quot;)\n        // DataImporter 实例的 importer 属性还没有被创建\n        print(manager.importer.fileName)\n        // DataImporter 实例的 importer 属性现在被创建了\n        // 输出 &quot;data.txt”\n\n        注意:\n        如果一个被标记为 lazy 的属性在没有初始化时就同时被多个线程访问，则无法保证该属性只会被初始化一次。\n\n- 计算属性\n\n    .. code-block:: swift\n\n        struct Point {\n            var x = 0.0, y = 0.0\n        }\n        struct Size {\n            var width = 0.0, height = 0.0\n        }\n        struct Rect {\n            var origin = Point()\n            var size = Size()\n            var center: Point {\n                get {\n                    let centerX = origin.x + (size.width / 2)\n                    let centerY = origin.y + (size.height / 2)\n                    return Point(x: centerX, y: centerY)\n                }\n                set(newCenter) {\n                    origin.x = newCenter.x - (size.width / 2)\n                    origin.y = newCenter.y - (size.height / 2)\n                }\n            }\n        }\n        var square = Rect(origin: Point(x: 0.0, y: 0.0),\n            size: Size(width: 10.0, height: 10.0))\n        let initialSquareCenter = square.center\n        square.center = Point(x: 15.0, y: 15.0)\n        print(&quot;square.origin is now at (\\(square.origin.x), \\(square.origin.y))&quot;)\n        // 输出 &quot;square.origin is now at (10.0, 10.0)”\n\n\n- 只读计算属性\n\n    .. code-block:: swift\n\n        struct Cuboid {\n            var width = 0.0, height = 0.0, depth = 0.0\n            var volume: Double {\n                return width * height * depth\n            }\n        }\n        let fourByFiveByTwo = Cuboid(width: 4.0, height: 5.0, depth: 2.0)\n        print(&quot;the volume of fourByFiveByTwo is \\(fourByFiveByTwo.volume)&quot;)\n        // 输出 &quot;the volume of fourByFiveByTwo is 40.0&quot;\n\n- 属性观察器\n\n    属性观察器监控和响应属性值的变化，每次属性被设置值的时候都会调用属性观察器，即使新值和当前值相同的时候也不例外。\n    可以为除了延迟存储属性之外的其他存储属性添加属性观察器，也可以通过重写属性的方式为继承的属性（包括存储属性和计算属性）添加属性观察器。\n    你不必为非重写的计算属性添加属性观察器，因为可以通过它的 setter 直接监控和响应值的变化。\n    可以为属性添加如下的一个或全部观察器：\n\n        - willSet 在新的值被设置之前调用\n        - didSet 在新的值被设置之后立即调用\n\n    .. code-block:: swift\n\n        class StepCounter {\n            var totalSteps: Int = 0 {\n                willSet(newTotalSteps) {\n                    print(&quot;About to set totalSteps to \\(newTotalSteps)&quot;)\n                }\n                didSet {\n                    if totalSteps &gt; oldValue  {\n                        print(&quot;Added \\(totalSteps - oldValue) steps&quot;)\n                    }\n                }\n            }\n        }\n        let stepCounter = StepCounter()\n        stepCounter.totalSteps = 200\n        // About to set totalSteps to 200\n        // Added 200 steps\n        stepCounter.totalSteps = 360\n        // About to set totalSteps to 360\n        // Added 160 steps\n        stepCounter.totalSteps = 896\n        // About to set totalSteps to 896\n        // Added 536 steps\n\n- 全局变量和局部变量\n\n    计算属性和属性观察器所描述的功能也可以用于全局变量和局部变量。全局变量是在函数、方法、闭包或任何类型之外定义的变量。局部变量是在函数、方法或闭包内部定义的变量。\n\n    注意:\n        - 全局的常量或变量都是延迟计算的，跟延迟存储属性相似，不同的地方在于，全局的常量或变量不需要标记lazy修饰符。\n        - 局部范围的常量或变量从不延迟计算。\n\n- 类型属性\n\n    实例属性属于一个特定类型的实例，每创建一个实例，实例都拥有属于自己的一套属性值，实例之间的属性相互独立。也可以为类型本身定义属性，无论创建了多少个该类型的实例，这些属性都只有唯一一份。这种属性就是类型属性。\n\n    .. code-block:: swift\n\n        struct SomeStructure {\n            static var storedTypeProperty = &quot;Some value.&quot;\n            static var computedTypeProperty: Int {\n                return 1\n            }\n        }\n\n        enum SomeEnumeration {\n            static var storedTypeProperty = &quot;Some value.&quot;\n            static var computedTypeProperty: Int {\n                return 6\n            }\n        }\n\n        class SomeClass {\n            static var storedTypeProperty = &quot;Some value.&quot;\n            static var computedTypeProperty: Int {\n                return 27\n            }\n            class var overrideableComputedTypeProperty: Int {\n                return 107\n            }\n        }\n\n        print(SomeStructure.storedTypeProperty)\n        // 输出 &quot;Some value.&quot;\n        SomeStructure.storedTypeProperty = &quot;Another value.&quot;\n        print(SomeStructure.storedTypeProperty)\n        // 输出 &quot;Another value.”\n        print(SomeEnumeration.computedTypeProperty)\n        // 输出 &quot;6&quot;\n        print(SomeClass.computedTypeProperty)\n        // 输出 &quot;27&quot;\n\n- 方法\n\n    - 实例方法\n\n        .. code-block:: swift\n\n            class Counter {\n                var count = 0\n                func increment() {\n                    ++count\n                }\n                func incrementBy(amount: Int) {\n                    count += amount\n                }\n                func reset() {\n                    count = 0\n                }\n            }\n\n\n        结构体和枚举是值类型。默认情况下，值类型的属性不能在它的实例方法中被修改。\n\n        - 在实例方法中修改值类型\n\n            .. code-block:: swift\n\n                struct Point {\n                    var x = 0.0, y = 0.0\n                    mutating func moveByX(deltaX: Double, y deltaY: Double) {\n                        x += deltaX\n                        y += deltaY\n                    }\n                }\n                var somePoint = Point(x: 1.0, y: 1.0)\n                somePoint.moveByX(2.0, y: 3.0)\n                print(&quot;The point is now at (\\(somePoint.x), \\(somePoint.y))&quot;)\n                // 打印输出: &quot;The point is now at (3.0, 4.0)&quot;\n\n    - 类型方法\n\n        .. code-block:: swift\n\n            class Player {\n                var tracker = LevelTracker()\n                let playerName: String\n                func completedLevel(level: Int) {\n                    LevelTracker.unlockLevel(level + 1)\n                    tracker.advanceToLevel(level + 1)\n                }\n                init(name: String) {\n                    playerName = name\n                }\n            }\n\n            var player = Player(name: &quot;Argyrios&quot;)\n            player.completedLevel(1)\n            print(&quot;highest unlocked level is now \\(LevelTracker.highestUnlockedLevel)&quot;)\n            // 打印输出：highest unlocked level is now 2\n\n        如果你创建了第二个玩家，并尝试让他开始一个没有被任何玩家解锁的等级，那么试图设置玩家当前等级将会失败：\n\n        .. code-block:: swift\n\n            player = Player(name: &quot;Beto&quot;)\n            if player.tracker.advanceToLevel(6) {\n                print(&quot;player is now on level 6&quot;)\n            } else {\n                print(&quot;level 6 has not yet been unlocked&quot;)\n            }\n            // 打印输出：level 6 has not yet been unlocked\n</code></pre><ul>\n<li><p>继承</p>\n<ul>\n<li><p>基类和子类</p>\n<p>  .. code-block:: swift</p>\n<pre><code>class Vehicle {\n    var currentSpeed = 0.0\n    var description: String {\n        return &quot;traveling at \\(currentSpeed) miles per hour&quot;\n    }\n    func makeNoise() {\n        // 什么也不做-因为车辆不一定会有噪音\n    }\n}\n\nclass Bicycle: Vehicle {\n    var hasBasket = false\n}\n\nclass Train: Vehicle {\n    override func makeNoise() {\n        print(&quot;Choo Choo&quot;)\n    }\n}\n\nclass Car: Vehicle {\n    var gear = 1\n    override var description: String {\n        return super.description + &quot; in gear \\(gear)&quot;\n    }\n}\n\nlet car = Car()\ncar.currentSpeed = 25.0\ncar.gear = 3\nprint(&quot;Car: \\(car.description)&quot;)\n// Car: traveling at 25.0 miles per hour in gear 3\n\nclass AutomaticCar: Car {\n    override var currentSpeed: Double {\n        didSet {\n            gear = Int(currentSpeed / 10.0) + 1\n        }\n    }\n}\n\nlet automatic = AutomaticCar()\nautomatic.currentSpeed = 35.0\nprint(&quot;AutomaticCar: \\(automatic.description)&quot;)\n// AutomaticCar: traveling at 35.0 miles per hour in gear 4\n</code></pre></li>\n<li><p>防止重写</p>\n<p>  你可以通过把方法，属性或下标标记为final来防止它们被重写，只需要在声明关键字前加上final修饰符即可（例如：final var，final func，final class func，以及final subscript）。<br>  如果你重写了final方法，属性或下标，在编译时会报错。在类扩展中的方法，属性或下标也可以在扩展的定义里标记为 final 的。<br>  你可以通过在关键字class前添加final修饰符（final class）来将整个类标记为 final 的。这样的类是不可被继承的，试图继承这样的类会导致编译报错。</p>\n</li>\n</ul>\n</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"如何声明常量、变量\"><a href=\"#如何声明常量、变量\" class=\"headerlink\" title=\"如何声明常量、变量\"></a>如何声明常量、变量</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"built_in\">count</span> = <span class=\"number\">0</span>   <span class=\"comment\">// let声明常量</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> summary = <span class=\"number\">0</span> <span class=\"comment\">// var声明变量</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"number\">10</span>, bar = <span class=\"number\">20</span> <span class=\"comment\">// 单行中声明多个变量或者常量使用逗号分隔</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> message: <span class=\"type\">String</span> <span class=\"comment\">// 类型在变量或者常量名称后面标注，中间用冒号分隔</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"如何打印变量或者常量的值\"><a href=\"#如何打印变量或者常量的值\" class=\"headerlink\" title=\"如何打印变量或者常量的值\"></a>如何打印变量或者常量的值</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> msg = <span class=\"string\">\"hello, world!\"</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(msg)</span><br></pre></td></tr></table></figure>\n<h2 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h2><ul>\n<li>单行注释使用//，多行注释使用 … , 可以嵌套。</li>\n</ul>\n<h2 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h2><ul>\n<li><p>整型</p>\n<ul>\n<li>Int8    有符号整型</li>\n<li>UInt8   无符号整型</li>\n<li>Int     有符号整型</li>\n<li>UInt    无符号整型</li>\n<li>0b10001 二进制</li>\n<li>0x20    八进制</li>\n<li>0x11    十六进制</li>\n</ul>\n</li>\n<li><p>浮点数</p>\n<ul>\n<li>Double  64位浮点数</li>\n<li>Float   32位浮点数</li>\n</ul>\n</li>\n<li><p>字符串</p>\n</li>\n</ul>\n<ul>\n<li><p>布尔值</p>\n<ul>\n<li>true</li>\n<li>false</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>元组<br>  let http404Error = (404, “Not Found”)</p>\n</li>\n<li><p>可选类型 ?<br>  有值或者没有值</p>\n</li>\n<li><p>nil<br>  nil表示没有值</p>\n</li>\n<li><p>隐式解析可选类型 !<br>  String!</p>\n</li>\n<li><p>类型别名<br>  typealias Number = UInt</p>\n</li>\n<li><p>可选绑定</p>\n</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">let</span> constantName = someOptional &#123;</span><br><span class=\"line\">    statements</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"type\">Int</span>]() <span class=\"comment\">//创建数组</span></span><br><span class=\"line\">arr.append(<span class=\"number\">10</span>)  <span class=\"comment\">// 向数组中添加元素</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"arr is of type [Int] with \\(arr.count) items.\"</span>)</span><br><span class=\"line\"><span class=\"comment\">// arr is of type [Int] with 1 items.</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> items = [<span class=\"type\">Int</span>](<span class=\"built_in\">count</span>: <span class=\"number\">10</span>, repeatedValue:<span class=\"number\">1</span>)  <span class=\"comment\">// 创建一个大小为10的数组，默认都是1</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> shoppingList: [<span class=\"type\">String</span>] = [<span class=\"string\">\"Eggs\"</span>, <span class=\"string\">\"Milk\"</span>] <span class=\"comment\">// shoppingList 已经被构造并且拥有两个初始项。</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(shoppingList[<span class=\"number\">0</span>])</span><br><span class=\"line\">shoppingList.append(<span class=\"string\">\"Flour\"</span>)</span><br><span class=\"line\">shoppingList += [<span class=\"string\">\"Baking Powder\"</span>]</span><br><span class=\"line\">shoppingList += [<span class=\"string\">\"Chocolate Spread\"</span>, <span class=\"string\">\"Cheese\"</span>, <span class=\"string\">\"Butter\"</span>]</span><br><span class=\"line\">shoppingList[<span class=\"number\">4</span>...<span class=\"number\">6</span>] = [<span class=\"string\">\"Bananas\"</span>, <span class=\"string\">\"Apples\"</span>]</span><br><span class=\"line\">shoppingList.insert(<span class=\"string\">\"Maple Syrup\"</span>, atIndex: <span class=\"number\">0</span>)</span><br><span class=\"line\">shoppingList.removeAtIndex(<span class=\"number\">0</span>)</span><br><span class=\"line\">shoppingList.removeLast(<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> shoppingList &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span> item</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (index, value) <span class=\"keyword\">in</span> shoppingList.<span class=\"built_in\">enumerate</span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Item \\(String(index + 1)): \\(value)\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"集合\"><a href=\"#集合\" class=\"headerlink\" title=\"集合\"></a>集合</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">var</span> letters = <span class=\"type\">Set</span>&lt;<span class=\"type\">Character</span>&gt;()  <span class=\"comment\">// 声明一个集合</span></span><br><span class=\"line\">letters.insert(<span class=\"string\">\"a\"</span>)  <span class=\"comment\">// 往集合中添加值</span></span><br><span class=\"line\">letters = []  <span class=\"comment\">// 集合置空</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> favoriteGenres: <span class=\"type\">Set</span>&lt;<span class=\"type\">String</span>&gt; = [<span class=\"string\">\"Rock\"</span>, <span class=\"string\">\"Classical\"</span>, <span class=\"string\">\"Hip hop\"</span>]</span><br><span class=\"line\">favoriteGenres.remove(<span class=\"string\">\"Rock\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> favoriteGenres.<span class=\"built_in\">contains</span>(<span class=\"string\">\"Funk\"</span>)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Funk in favoriteGenres\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> genre <span class=\"keyword\">in</span> favoriteGenres &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"\\(genre)\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>其它方法</p>\n<ul>\n<li>使用intersect(_:)方法根据两个集合中都包含的值创建的一个新的集合。</li>\n<li>使用exclusiveOr(_:)方法根据在一个集合中但不在两个集合中的值创建一个新的集合。</li>\n<li>使用union(_:)方法根据两个集合的值创建一个新的集合。</li>\n<li>使用subtract(_:)方法根据不在该集合中的值创建一个新的集合。</li>\n<li>使用“是否相等”运算符(==)来判断两个集合是否包含全部相同的值。</li>\n<li>使用isSubsetOf(_:)方法来判断一个集合中的值是否也被包含在另外一个集合中。</li>\n<li>使用isSupersetOf(_:)方法来判断一个集合中包含另一个集合中所有的值。</li>\n<li>使用isStrictSubsetOf(<em>:)或者isStrictSupersetOf(</em>:)方法来判断一个集合是否是另外一个集合的子集合或者父集合并且两个集合并不相等。</li>\n<li>使用isDisjointWith(_:)方法来判断两个集合是否不含有相同的值(是否没有交集)。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"字典\"><a href=\"#字典\" class=\"headerlink\" title=\"字典\"></a>字典</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> namesOfIntegers = [<span class=\"type\">Int</span>: <span class=\"type\">String</span>]() <span class=\"comment\">// 创建一个空字典</span></span><br><span class=\"line\">namesOfIntegers[<span class=\"number\">16</span>] = <span class=\"string\">\"sixteen\"</span></span><br><span class=\"line\">namesOfIntegers = [:]</span><br><span class=\"line\"><span class=\"keyword\">var</span> airports: [<span class=\"type\">String</span>: <span class=\"type\">String</span>] = [<span class=\"string\">\"YYZ\"</span>: <span class=\"string\">\"Toronto Pearson\"</span>, <span class=\"string\">\"DUB\"</span>: <span class=\"string\">\"Dublin\"</span>] <span class=\"comment\">// 使用字典字面量创建字典</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> d = [<span class=\"string\">\"foo\"</span>: <span class=\"string\">\"bar\"</span>]</span><br><span class=\"line\">d[<span class=\"string\">\"foo\"</span>] = <span class=\"literal\">nil</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">let</span> removedValue = airports.removeValueForKey(<span class=\"string\">\"DUB\"</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"The removed airport's name is \\(removedValue).\"</span>)</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"The airports dictionary does not contain a value for DUB.\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (airportCode, airportName) <span class=\"keyword\">in</span> airports &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"\\(airportCode): \\(airportName)\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> airportCode <span class=\"keyword\">in</span> airports.keys &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Airport code: \\(airportCode)\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> airportName <span class=\"keyword\">in</span> airports.values &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Airport name: \\(airportName)\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> airportCodes = [<span class=\"type\">String</span>](airports.keys)</span><br><span class=\"line\"><span class=\"keyword\">let</span> airportNames = [<span class=\"type\">String</span>](airports.values)</span><br></pre></td></tr></table></figure>\n<h2 id=\"控制流\"><a href=\"#控制流\" class=\"headerlink\" title=\"控制流\"></a>控制流</h2><ul>\n<li>for</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> index <span class=\"keyword\">in</span> <span class=\"number\">1</span>...<span class=\"number\">5</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"\\(index) times 5 is \\(index * 5)\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> names = [<span class=\"string\">\"Anna\"</span>, <span class=\"string\">\"Alex\"</span>, <span class=\"string\">\"Brian\"</span>, <span class=\"string\">\"Jack\"</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> names &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Hello, \\(name)!\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> numberOfLegs = [<span class=\"string\">\"spider\"</span>: <span class=\"number\">8</span>, <span class=\"string\">\"ant\"</span>: <span class=\"number\">6</span>, <span class=\"string\">\"cat\"</span>: <span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> (animalName, legCount) <span class=\"keyword\">in</span> numberOfLegs &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"\\(animalName)s have \\(legCount) legs\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>while</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> i = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> length = <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> i &lt; length &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span> (i)</span><br><span class=\"line\">    i++</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>repeat-while (do-while)</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> i = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> length = <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"keyword\">repeat</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">    i++</span><br><span class=\"line\">&#125; <span class=\"keyword\">while</span> i &lt; <span class=\"number\">10</span>;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>if</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> i = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> i == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"i = 0\"</span>)</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> i &gt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"i &gt; 0\"</span>)</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"i &lt; 0\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>switch</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> someCharacter: <span class=\"type\">Character</span> = <span class=\"string\">\"e\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">switch</span> someCharacter &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"a\"</span>, <span class=\"string\">\"e\"</span>, <span class=\"string\">\"i\"</span>, <span class=\"string\">\"o\"</span>, <span class=\"string\">\"u\"</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"\\(someCharacter) is a vowel\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"b\"</span>, <span class=\"string\">\"c\"</span>, <span class=\"string\">\"d\"</span>, <span class=\"string\">\"f\"</span>, <span class=\"string\">\"g\"</span>, <span class=\"string\">\"h\"</span>, <span class=\"string\">\"j\"</span>, <span class=\"string\">\"k\"</span>, <span class=\"string\">\"l\"</span>, <span class=\"string\">\"m\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"n\"</span>, <span class=\"string\">\"p\"</span>, <span class=\"string\">\"q\"</span>, <span class=\"string\">\"r\"</span>, <span class=\"string\">\"s\"</span>, <span class=\"string\">\"t\"</span>, <span class=\"string\">\"v\"</span>, <span class=\"string\">\"w\"</span>, <span class=\"string\">\"x\"</span>, <span class=\"string\">\"y\"</span>, <span class=\"string\">\"z\"</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"\\(someCharacter) is a consonant\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"\\(someCharacter) is not a vowel or a consonant\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> approximateCount = <span class=\"number\">62</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> countedThings = <span class=\"string\">\"moons orbiting Saturn\"</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> naturalCount: <span class=\"type\">String</span></span><br><span class=\"line\"><span class=\"keyword\">switch</span> approximateCount &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">0</span>:</span><br><span class=\"line\">        naturalCount = <span class=\"string\">\"no\"</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">1</span>..&lt;<span class=\"number\">5</span>:</span><br><span class=\"line\">        naturalCount = <span class=\"string\">\"a few\"</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">5</span>..&lt;<span class=\"number\">12</span>:</span><br><span class=\"line\">        naturalCount = <span class=\"string\">\"several\"</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">12</span>..&lt;<span class=\"number\">100</span>:</span><br><span class=\"line\">        naturalCount = <span class=\"string\">\"dozens of\"</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">100</span>..&lt;<span class=\"number\">1000</span>:</span><br><span class=\"line\">        naturalCount = <span class=\"string\">\"hundreds of\"</span></span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        naturalCount = <span class=\"string\">\"many\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"There are \\(naturalCount) \\(countedThings).\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> somePoint = (<span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"keyword\">switch</span> somePoint &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> (<span class=\"number\">0</span>, <span class=\"number\">0</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"(0, 0) is at the origin\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">case</span> (<span class=\"number\">_</span>, <span class=\"number\">0</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"(\\(somePoint.0), 0) is on the x-axis\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">case</span> (<span class=\"number\">0</span>, <span class=\"number\">_</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"(0, \\(somePoint.1)) is on the y-axis\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">case</span> (-<span class=\"number\">2</span>...<span class=\"number\">2</span>, -<span class=\"number\">2</span>...<span class=\"number\">2</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"(\\(somePoint.0), \\(somePoint.1)) is inside the box\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"(\\(somePoint.0), \\(somePoint.1)) is outside of the box\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> anotherPoint = (<span class=\"number\">2</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"keyword\">switch</span> anotherPoint &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> (<span class=\"keyword\">let</span> x, <span class=\"number\">0</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"on the x-axis with an x value of \\(x)\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">case</span> (<span class=\"number\">0</span>, <span class=\"keyword\">let</span> y):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"on the y-axis with a y value of \\(y)\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"keyword\">let</span> (x, y):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"somewhere else at (\\(x), \\(y))\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> yetAnotherPoint = (<span class=\"number\">1</span>, -<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"keyword\">switch</span> yetAnotherPoint &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"keyword\">let</span> (x, y) <span class=\"keyword\">where</span> x == y:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"(\\(x), \\(y)) is on the line x == y\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"keyword\">let</span> (x, y) <span class=\"keyword\">where</span> x == -y:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"(\\(x), \\(y)) is on the line x == -y\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"keyword\">let</span> (x, y):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"(\\(x), \\(y)) is just some arbitrary point\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>break</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> numberSymbol: <span class=\"type\">Character</span> = <span class=\"string\">\"三\"</span>  <span class=\"comment\">// 简体中文里的数字 3</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> possibleIntegerValue: <span class=\"type\">Int</span>?</span><br><span class=\"line\"><span class=\"keyword\">switch</span> numberSymbol &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"1\"</span>, <span class=\"string\">\"١\"</span>, <span class=\"string\">\"一\"</span>, <span class=\"string\">\"๑\"</span>:</span><br><span class=\"line\">        possibleIntegerValue = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"2\"</span>, <span class=\"string\">\"٢\"</span>, <span class=\"string\">\"二\"</span>, <span class=\"string\">\"๒\"</span>:</span><br><span class=\"line\">        possibleIntegerValue = <span class=\"number\">2</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"3\"</span>, <span class=\"string\">\"٣\"</span>, <span class=\"string\">\"三\"</span>, <span class=\"string\">\"๓\"</span>:</span><br><span class=\"line\">        possibleIntegerValue = <span class=\"number\">3</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"4\"</span>, <span class=\"string\">\"٤\"</span>, <span class=\"string\">\"四\"</span>, <span class=\"string\">\"๔\"</span>:</span><br><span class=\"line\">        possibleIntegerValue = <span class=\"number\">4</span></span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">let</span> integerValue = possibleIntegerValue &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"The integer value of \\(numberSymbol) is \\(integerValue).\"</span>)</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"An integer value could not be found for \\(numberSymbol).\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>fallthrough</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> integerToDescribe = <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> description = <span class=\"string\">\"The number \\(integerToDescribe) is\"</span></span><br><span class=\"line\"><span class=\"keyword\">switch</span> integerToDescribe &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">17</span>, <span class=\"number\">19</span>:</span><br><span class=\"line\">        description += <span class=\"string\">\" a prime number, and also\"</span></span><br><span class=\"line\">        <span class=\"keyword\">fallthrough</span></span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        description += <span class=\"string\">\" an integer.\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(description)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>guard</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">greet</span><span class=\"params\">(person: [String: String])</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> name = person[<span class=\"string\">\"name\"</span>] <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Hello \\(name)\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> location = person[<span class=\"string\">\"location\"</span>] <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"I hope the weather is nice near you.\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"I hope the weather is nice in \\(location).\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">greet([<span class=\"string\">\"name\"</span>: <span class=\"string\">\"John\"</span>])</span><br></pre></td></tr></table></figure>\n<ul>\n<li>函数</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sayHello</span><span class=\"params\">(personName: String, alreadyGreeted: Bool)</span></span> -&gt; <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> alreadyGreeted &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sayHelloAgain(personName)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sayHello(personName)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(sayHello(<span class=\"string\">\"Tim\"</span>, alreadyGreeted: <span class=\"literal\">true</span>))</span><br><span class=\"line\"><span class=\"comment\">// prints \"Hello again, Tim!\" </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">minMax</span><span class=\"params\">(array: [Int])</span></span> -&gt; (<span class=\"built_in\">min</span>: <span class=\"type\">Int</span>, <span class=\"built_in\">max</span>: <span class=\"type\">Int</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> currentMin = array[<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"keyword\">var</span> currentMax = array[<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> value <span class=\"keyword\">in</span> array[<span class=\"number\">1</span>..&lt;array.<span class=\"built_in\">count</span>] &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> value &lt; currentMin &#123;</span><br><span class=\"line\">            currentMin = value</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> value &gt; currentMax &#123;</span><br><span class=\"line\">            currentMax = value</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (currentMin, currentMax)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> bounds = minMax([<span class=\"number\">8</span>, -<span class=\"number\">6</span>, <span class=\"number\">2</span>, <span class=\"number\">109</span>, <span class=\"number\">3</span>, <span class=\"number\">71</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"min is \\(bounds.min) and max is \\(bounds.max)\"</span>)</span><br><span class=\"line\"><span class=\"comment\">// prints \"min is -6 and max is 109\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sayHello</span><span class=\"params\">(to person: String, and anotherPerson: String)</span></span> -&gt; <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"Hello \\(person) and \\(anotherPerson)!\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(sayHello(to: <span class=\"string\">\"Bill\"</span>, and: <span class=\"string\">\"Ted\"</span>))</span><br><span class=\"line\"><span class=\"comment\">// prints \"Hello Bill and Ted!\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">someFunction</span><span class=\"params\">(parameterWithDefault: Int = <span class=\"number\">12</span>)</span></span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// function body goes here</span></span><br><span class=\"line\">    <span class=\"comment\">// if no arguments are passed to the function call,</span></span><br><span class=\"line\">    <span class=\"comment\">// value of parameterWithDefault is 12</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">someFunction(<span class=\"number\">6</span>) <span class=\"comment\">// parameterWithDefault is 6</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">arithmeticMean</span><span class=\"params\">(numbers: Double...)</span></span> -&gt; <span class=\"type\">Double</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> total: <span class=\"type\">Double</span> = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> number <span class=\"keyword\">in</span> numbers &#123;</span><br><span class=\"line\">        total += number</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> total / <span class=\"type\">Double</span>(numbers.<span class=\"built_in\">count</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">arithmeticMean(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"枚举类型\"><a href=\"#枚举类型\" class=\"headerlink\" title=\"枚举类型\"></a>枚举类型</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">CompassPoint</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">North</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">South</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">East</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">West</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">Planet</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Mercury</span>, <span class=\"type\">Venus</span>, <span class=\"type\">Earth</span>, <span class=\"type\">Mars</span>, <span class=\"type\">Jupiter</span>, <span class=\"type\">Saturn</span>, <span class=\"type\">Uranus</span>, <span class=\"type\">Neptune</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> directionToHead = <span class=\"type\">CompassPoint</span>.<span class=\"type\">West</span></span><br><span class=\"line\">directionToHead = .<span class=\"type\">East</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>类和结构体</p>\n<ul>\n<li><p>结构体和枚举是值类型<br>  值类型被赋予给一个变量、常量或者被传递给一个函数的时候，其值会被拷贝。<br>  let vga = Resolution(width:640, height: 480)</p>\n</li>\n<li><p>类是引用类型<br>  与值类型不同，引用类型在被赋予到一个变量、常量或者被传递到一个函数时，其值不会被拷贝。因此，引用的是已存在的实例本身而不是其拷贝。</p>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>属性</p>\n<ul>\n<li>存储属性</li>\n</ul>\n</li>\n</ul>\n<pre><code>    .. code-block:: swift\n\n        struct FixedLengthRange {\n            var firstValue: Int\n            let length: Int\n        }\n        var rangeOfThreeItems = FixedLengthRange(firstValue: 0, length: 3)\n        // 该区间表示整数0，1，2\n        rangeOfThreeItems.firstValue = 6\n        // 该区间现在表示整数6，7，8\n\n\n    常量结构体的存储属性不可以修改\n\n- 延迟存储属性\n\n    .. code-block:: swift\n\n        class DataImporter {\n            var fileName = &quot;data.txt&quot;\n            // 这里会提供数据导入功能\n        }\n\n        class DataManager {\n            lazy var importer = DataImporter()\n            var data = [String]()\n            // 这里会提供数据管理功能\n        }\n\n        let manager = DataManager()\n        manager.data.append(&quot;Some data&quot;)\n        manager.data.append(&quot;Some more data&quot;)\n        // DataImporter 实例的 importer 属性还没有被创建\n        print(manager.importer.fileName)\n        // DataImporter 实例的 importer 属性现在被创建了\n        // 输出 &quot;data.txt”\n\n        注意:\n        如果一个被标记为 lazy 的属性在没有初始化时就同时被多个线程访问，则无法保证该属性只会被初始化一次。\n\n- 计算属性\n\n    .. code-block:: swift\n\n        struct Point {\n            var x = 0.0, y = 0.0\n        }\n        struct Size {\n            var width = 0.0, height = 0.0\n        }\n        struct Rect {\n            var origin = Point()\n            var size = Size()\n            var center: Point {\n                get {\n                    let centerX = origin.x + (size.width / 2)\n                    let centerY = origin.y + (size.height / 2)\n                    return Point(x: centerX, y: centerY)\n                }\n                set(newCenter) {\n                    origin.x = newCenter.x - (size.width / 2)\n                    origin.y = newCenter.y - (size.height / 2)\n                }\n            }\n        }\n        var square = Rect(origin: Point(x: 0.0, y: 0.0),\n            size: Size(width: 10.0, height: 10.0))\n        let initialSquareCenter = square.center\n        square.center = Point(x: 15.0, y: 15.0)\n        print(&quot;square.origin is now at (\\(square.origin.x), \\(square.origin.y))&quot;)\n        // 输出 &quot;square.origin is now at (10.0, 10.0)”\n\n\n- 只读计算属性\n\n    .. code-block:: swift\n\n        struct Cuboid {\n            var width = 0.0, height = 0.0, depth = 0.0\n            var volume: Double {\n                return width * height * depth\n            }\n        }\n        let fourByFiveByTwo = Cuboid(width: 4.0, height: 5.0, depth: 2.0)\n        print(&quot;the volume of fourByFiveByTwo is \\(fourByFiveByTwo.volume)&quot;)\n        // 输出 &quot;the volume of fourByFiveByTwo is 40.0&quot;\n\n- 属性观察器\n\n    属性观察器监控和响应属性值的变化，每次属性被设置值的时候都会调用属性观察器，即使新值和当前值相同的时候也不例外。\n    可以为除了延迟存储属性之外的其他存储属性添加属性观察器，也可以通过重写属性的方式为继承的属性（包括存储属性和计算属性）添加属性观察器。\n    你不必为非重写的计算属性添加属性观察器，因为可以通过它的 setter 直接监控和响应值的变化。\n    可以为属性添加如下的一个或全部观察器：\n\n        - willSet 在新的值被设置之前调用\n        - didSet 在新的值被设置之后立即调用\n\n    .. code-block:: swift\n\n        class StepCounter {\n            var totalSteps: Int = 0 {\n                willSet(newTotalSteps) {\n                    print(&quot;About to set totalSteps to \\(newTotalSteps)&quot;)\n                }\n                didSet {\n                    if totalSteps &gt; oldValue  {\n                        print(&quot;Added \\(totalSteps - oldValue) steps&quot;)\n                    }\n                }\n            }\n        }\n        let stepCounter = StepCounter()\n        stepCounter.totalSteps = 200\n        // About to set totalSteps to 200\n        // Added 200 steps\n        stepCounter.totalSteps = 360\n        // About to set totalSteps to 360\n        // Added 160 steps\n        stepCounter.totalSteps = 896\n        // About to set totalSteps to 896\n        // Added 536 steps\n\n- 全局变量和局部变量\n\n    计算属性和属性观察器所描述的功能也可以用于全局变量和局部变量。全局变量是在函数、方法、闭包或任何类型之外定义的变量。局部变量是在函数、方法或闭包内部定义的变量。\n\n    注意:\n        - 全局的常量或变量都是延迟计算的，跟延迟存储属性相似，不同的地方在于，全局的常量或变量不需要标记lazy修饰符。\n        - 局部范围的常量或变量从不延迟计算。\n\n- 类型属性\n\n    实例属性属于一个特定类型的实例，每创建一个实例，实例都拥有属于自己的一套属性值，实例之间的属性相互独立。也可以为类型本身定义属性，无论创建了多少个该类型的实例，这些属性都只有唯一一份。这种属性就是类型属性。\n\n    .. code-block:: swift\n\n        struct SomeStructure {\n            static var storedTypeProperty = &quot;Some value.&quot;\n            static var computedTypeProperty: Int {\n                return 1\n            }\n        }\n\n        enum SomeEnumeration {\n            static var storedTypeProperty = &quot;Some value.&quot;\n            static var computedTypeProperty: Int {\n                return 6\n            }\n        }\n\n        class SomeClass {\n            static var storedTypeProperty = &quot;Some value.&quot;\n            static var computedTypeProperty: Int {\n                return 27\n            }\n            class var overrideableComputedTypeProperty: Int {\n                return 107\n            }\n        }\n\n        print(SomeStructure.storedTypeProperty)\n        // 输出 &quot;Some value.&quot;\n        SomeStructure.storedTypeProperty = &quot;Another value.&quot;\n        print(SomeStructure.storedTypeProperty)\n        // 输出 &quot;Another value.”\n        print(SomeEnumeration.computedTypeProperty)\n        // 输出 &quot;6&quot;\n        print(SomeClass.computedTypeProperty)\n        // 输出 &quot;27&quot;\n\n- 方法\n\n    - 实例方法\n\n        .. code-block:: swift\n\n            class Counter {\n                var count = 0\n                func increment() {\n                    ++count\n                }\n                func incrementBy(amount: Int) {\n                    count += amount\n                }\n                func reset() {\n                    count = 0\n                }\n            }\n\n\n        结构体和枚举是值类型。默认情况下，值类型的属性不能在它的实例方法中被修改。\n\n        - 在实例方法中修改值类型\n\n            .. code-block:: swift\n\n                struct Point {\n                    var x = 0.0, y = 0.0\n                    mutating func moveByX(deltaX: Double, y deltaY: Double) {\n                        x += deltaX\n                        y += deltaY\n                    }\n                }\n                var somePoint = Point(x: 1.0, y: 1.0)\n                somePoint.moveByX(2.0, y: 3.0)\n                print(&quot;The point is now at (\\(somePoint.x), \\(somePoint.y))&quot;)\n                // 打印输出: &quot;The point is now at (3.0, 4.0)&quot;\n\n    - 类型方法\n\n        .. code-block:: swift\n\n            class Player {\n                var tracker = LevelTracker()\n                let playerName: String\n                func completedLevel(level: Int) {\n                    LevelTracker.unlockLevel(level + 1)\n                    tracker.advanceToLevel(level + 1)\n                }\n                init(name: String) {\n                    playerName = name\n                }\n            }\n\n            var player = Player(name: &quot;Argyrios&quot;)\n            player.completedLevel(1)\n            print(&quot;highest unlocked level is now \\(LevelTracker.highestUnlockedLevel)&quot;)\n            // 打印输出：highest unlocked level is now 2\n\n        如果你创建了第二个玩家，并尝试让他开始一个没有被任何玩家解锁的等级，那么试图设置玩家当前等级将会失败：\n\n        .. code-block:: swift\n\n            player = Player(name: &quot;Beto&quot;)\n            if player.tracker.advanceToLevel(6) {\n                print(&quot;player is now on level 6&quot;)\n            } else {\n                print(&quot;level 6 has not yet been unlocked&quot;)\n            }\n            // 打印输出：level 6 has not yet been unlocked\n</code></pre><ul>\n<li><p>继承</p>\n<ul>\n<li><p>基类和子类</p>\n<p>  .. code-block:: swift</p>\n<pre><code>class Vehicle {\n    var currentSpeed = 0.0\n    var description: String {\n        return &quot;traveling at \\(currentSpeed) miles per hour&quot;\n    }\n    func makeNoise() {\n        // 什么也不做-因为车辆不一定会有噪音\n    }\n}\n\nclass Bicycle: Vehicle {\n    var hasBasket = false\n}\n\nclass Train: Vehicle {\n    override func makeNoise() {\n        print(&quot;Choo Choo&quot;)\n    }\n}\n\nclass Car: Vehicle {\n    var gear = 1\n    override var description: String {\n        return super.description + &quot; in gear \\(gear)&quot;\n    }\n}\n\nlet car = Car()\ncar.currentSpeed = 25.0\ncar.gear = 3\nprint(&quot;Car: \\(car.description)&quot;)\n// Car: traveling at 25.0 miles per hour in gear 3\n\nclass AutomaticCar: Car {\n    override var currentSpeed: Double {\n        didSet {\n            gear = Int(currentSpeed / 10.0) + 1\n        }\n    }\n}\n\nlet automatic = AutomaticCar()\nautomatic.currentSpeed = 35.0\nprint(&quot;AutomaticCar: \\(automatic.description)&quot;)\n// AutomaticCar: traveling at 35.0 miles per hour in gear 4\n</code></pre></li>\n<li><p>防止重写</p>\n<p>  你可以通过把方法，属性或下标标记为final来防止它们被重写，只需要在声明关键字前加上final修饰符即可（例如：final var，final func，final class func，以及final subscript）。<br>  如果你重写了final方法，属性或下标，在编译时会报错。在类扩展中的方法，属性或下标也可以在扩展的定义里标记为 final 的。<br>  你可以通过在关键字class前添加final修饰符（final class）来将整个类标记为 final 的。这样的类是不可被继承的，试图继承这样的类会导致编译报错。</p>\n</li>\n</ul>\n</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cio53ku4p0000kcbj6v8coppi","category_id":"cio3nw6u50002wcbjn6cc59xn","_id":"cio53ku4z0003kcbj9n214sot"},{"post_id":"cio53ku4p0000kcbj6v8coppi","category_id":"cio3nw6u60004wcbjn0z2mg56","_id":"cio53ku500004kcbjdwmtveq4"},{"post_id":"cio53kukh0005kcbjoqdo27gi","category_id":"cio53kukv0008kcbjzek2m6lw","_id":"cio53kul7000fkcbji242fd90"},{"post_id":"cio53kul1000ckcbj3hhcuvur","category_id":"cio53kukv0008kcbjzek2m6lw","_id":"cio53kulc000jkcbjqwmojfcr"},{"post_id":"cio53kul4000ekcbjsfxpymfw","category_id":"cio53kukv0008kcbjzek2m6lw","_id":"cio53kule000lkcbjjkxlutwv"},{"post_id":"cio53kul7000gkcbjs5unrgmn","category_id":"cio53kukv0008kcbjzek2m6lw","_id":"cio53kulg000pkcbj0qpwtfjv"},{"post_id":"cio53kukw0009kcbja14d28m0","category_id":"cio53kukv0008kcbjzek2m6lw","_id":"cio53kuls000tkcbj6k6jxq7q"},{"post_id":"cio53kuko0006kcbjls1cjfbu","category_id":"cio53kul3000dkcbj5a6l0y29","_id":"cio53kulw000zkcbjj3d6iyee"},{"post_id":"cio53kuko0006kcbjls1cjfbu","category_id":"cio53kulf000nkcbj726hc5cn","_id":"cio53kuly0012kcbj75pn6l5t"},{"post_id":"cio6ggodx0004yqbjun4pz615","category_id":"cio53kukv0008kcbjzek2m6lw","_id":"cio6ggoe40009yqbjw8m6hii8"},{"post_id":"cio6ggode0000yqbje1sagx90","category_id":"cio6ggodw0003yqbj6cjxnxms","_id":"cio6ggoe5000byqbjutarhhxn"},{"post_id":"cio6ggodg0001yqbjvokqpuav","category_id":"cio6ggoe30007yqbjnn3qnm9c","_id":"cio6ggoe6000dyqbjmzeiw8i5"},{"post_id":"cio53kulh000qkcbjfzhudhkd","category_id":"cio53kukv0008kcbjzek2m6lw","_id":"cio6gq4t600013mbjpqvkuk8u"},{"post_id":"cio53kulr000skcbjlhphtovc","category_id":"cio6gt44w00093mbjpxbun2t8","_id":"cio6gt44x000b3mbjb5xpu7ho"},{"post_id":"cio53kult000wkcbjj0mdbes2","category_id":"cio6gxcw8000h3mbjkwa8t53h","_id":"cio6gxcw8000j3mbj76n49d3m"},{"post_id":"cio53kuly0013kcbj8u0t6uio","category_id":"cio6ggoe30007yqbjnn3qnm9c","_id":"cio6gzeg3000l3mbjseuc2pmc"},{"post_id":"cio6h38my000m3mbjrqma2qfo","category_id":"cio6h38n0000o3mbj14efzzi2","_id":"cio6h38n1000q3mbj9239ldym"},{"post_id":"cio8kk9ne000x3mi4zlpm8evx","category_id":"cio6h38n0000o3mbj14efzzi2","_id":"cio8kk9ng000z3mi4ppdwxuuc"},{"post_id":"cio8kkj4c00123mi46im4uykj","category_id":"cio8kkj4e00143mi41ryztlqi","_id":"cio8kkj4f00173mi411aatfgv"},{"post_id":"cio8kkpq100183mi4nrhom4s4","category_id":"cio3nw6u50002wcbjn6cc59xn","_id":"cio8kkpq3001a3mi4s1lbflr3"},{"post_id":"cio8kkpq100183mi4nrhom4s4","category_id":"cio3nw6u60004wcbjn0z2mg56","_id":"cio8kkpq3001b3mi45pdh75cq"},{"post_id":"cio8klni7001d3mi4a7mzg4bn","category_id":"cio8knlgs001m3mi46tdeg3ve","_id":"cio8knlgt001n3mi4037af04w"},{"post_id":"cio8kp0x9001o3mi4j0feyjii","category_id":"cio8kp0xb001q3mi45kc739io","_id":"cio8kp0xd001u3mi4fadhxfnj"},{"post_id":"cio8kp0x9001o3mi4j0feyjii","category_id":"cio8kp0xc001s3mi4pwuquluu","_id":"cio8kp0xd001w3mi44skou1l5"},{"post_id":"cio8l3vnf001z3mi4n87bhwl8","category_id":"cio8l3vni00213mi4wnigvoux","_id":"cio8l3vni00233mi4daw6e0p0"},{"post_id":"cio8l3z8600263mi4qs2b2xwr","category_id":"cio8knlgs001m3mi46tdeg3ve","_id":"cio8l3z8800283mi4yjjh764a"},{"post_id":"cio8l42kj002d3mi4iv2h8o30","category_id":"cio8knlgs001m3mi46tdeg3ve","_id":"cio8l42kk002f3mi43l1zjy3d"},{"post_id":"cip94yaq90000c5bj1ufzcwaw","category_id":"cio53tmqu0001pqbj3fc4pr7o","_id":"cip94yaqc0003c5bj3opl4jsi"},{"post_id":"cip94zm1b0004c5bj12pslk3z","category_id":"cio53tmqu0001pqbj3fc4pr7o","_id":"cip94zm1e0006c5bjf715db5c"},{"post_id":"cip9548yi0009c5bjbj1x8h81","category_id":"cip9548yk000bc5bjagpgw0wn","_id":"cip9548yl000dc5bjlrhcvtu5"},{"post_id":"cip956uej000gc5bjctu102nl","category_id":"cio6h38n0000o3mbj14efzzi2","_id":"cip956uel000ic5bjhh7bg36u"},{"post_id":"cip959m2g000lc5bjt960n729","category_id":"cip959m2i000nc5bjc82m8jwl","_id":"cip959m2j000pc5bjjpjb4a9q"}],"PostTag":[{"post_id":"cio53ku4p0000kcbj6v8coppi","tag_id":"cio3nw6u10001wcbjuu900ig7","_id":"cio53ku4y0001kcbjippbkbls"},{"post_id":"cio53ku4p0000kcbj6v8coppi","tag_id":"cio3nw6u60003wcbje2k44w0f","_id":"cio53ku4z0002kcbj23fxg43p"},{"post_id":"cio53kukh0005kcbjoqdo27gi","tag_id":"cio53kukq0007kcbj3bplfbbl","_id":"cio53kulp000rkcbjbi7yok11"},{"post_id":"cio53kukh0005kcbjoqdo27gi","tag_id":"cio53kul0000bkcbjsw3bwc0q","_id":"cio53kuls000ukcbj64yp4mh7"},{"post_id":"cio53kukh0005kcbjoqdo27gi","tag_id":"cio53kula000hkcbjt95zsadw","_id":"cio53kulv000xkcbjur152ueb"},{"post_id":"cio53kuko0006kcbjls1cjfbu","tag_id":"cio53kulg000okcbj8ro4hs3c","_id":"cio53kum20015kcbj3bc24a3p"},{"post_id":"cio53kuko0006kcbjls1cjfbu","tag_id":"cio53kuls000vkcbjz160a46g","_id":"cio53kum20016kcbjq8pxvezo"},{"post_id":"cio53kuko0006kcbjls1cjfbu","tag_id":"cio53kulx0010kcbjkm2flgxk","_id":"cio53kum20018kcbjrbjoxplu"},{"post_id":"cio53kukw0009kcbja14d28m0","tag_id":"cio53kum10014kcbjdywd91rz","_id":"cio53kum4001akcbj02rfi09c"},{"post_id":"cio53kukw0009kcbja14d28m0","tag_id":"cio53kum20017kcbjcvpc5qfa","_id":"cio53kum4001bkcbjkrww0uf0"},{"post_id":"cio53kul1000ckcbj3hhcuvur","tag_id":"cio53kum10014kcbjdywd91rz","_id":"cio53kum5001fkcbj52q35b4f"},{"post_id":"cio53kul1000ckcbj3hhcuvur","tag_id":"cio53kum4001ckcbjac4qv38h","_id":"cio53kum6001gkcbjrcbgnuv3"},{"post_id":"cio53kul1000ckcbj3hhcuvur","tag_id":"cio53kum5001dkcbjtfao3kwv","_id":"cio53kum6001ikcbjxnimnlqk"},{"post_id":"cio53kul4000ekcbjsfxpymfw","tag_id":"cio53kum10014kcbjdywd91rz","_id":"cio53kum6001lkcbjrguguq9m"},{"post_id":"cio53kul4000ekcbjsfxpymfw","tag_id":"cio53kum6001hkcbjhu0htlju","_id":"cio53kum6001mkcbjgzzjz1q4"},{"post_id":"cio53kul4000ekcbjsfxpymfw","tag_id":"cio53kum6001jkcbjpqu8bcws","_id":"cio53kum7001nkcbj2u558pdz"},{"post_id":"cio53kul7000gkcbjs5unrgmn","tag_id":"cio53kulx0010kcbjkm2flgxk","_id":"cio53kum7001okcbjs8lhyb4l"},{"post_id":"cio53kul7000gkcbjs5unrgmn","tag_id":"cio53kukq0007kcbj3bplfbbl","_id":"cio53kum7001pkcbj4tbbdmkg"},{"post_id":"cio3nd2le00004zbjculqipyf","tag_id":"cio53uzlb0000r5bjciu3twhb","_id":"cio53uzln0001r5bj177ycuk5"},{"post_id":"cio6ggode0000yqbje1sagx90","tag_id":"cio53kum6001hkcbjhu0htlju","_id":"cio6ggoe40008yqbjshzqqw7y"},{"post_id":"cio6ggode0000yqbje1sagx90","tag_id":"cio6ggodi0002yqbjit7pjkq7","_id":"cio6ggoe5000ayqbjroaah57r"},{"post_id":"cio6ggodg0001yqbjvokqpuav","tag_id":"cio6ggoe20006yqbjbsqgs572","_id":"cio6ggoe6000fyqbjul0d41ji"},{"post_id":"cio6ggodg0001yqbjvokqpuav","tag_id":"cio6ggoe5000cyqbjs27p5ogp","_id":"cio6ggoe6000gyqbjt8iuj0a5"},{"post_id":"cio6ggodx0004yqbjun4pz615","tag_id":"cio6ggoe6000eyqbj2x0n41cj","_id":"cio6ggoe7000jyqbjrjvbxvqv"},{"post_id":"cio6ggodx0004yqbjun4pz615","tag_id":"cio6ggoe6000hyqbjsasyki8q","_id":"cio6ggoe7000kyqbjd2y6vc92"},{"post_id":"cio6ggodx0004yqbjun4pz615","tag_id":"cio6ggoe6000iyqbjkja2tepi","_id":"cio6ggoe7000lyqbjahf5tsr6"},{"post_id":"cio53kulh000qkcbjfzhudhkd","tag_id":"cio6gq4t600003mbjmcssleoo","_id":"cio6gq4t700023mbjtnn26zwo"},{"post_id":"cio53kulh000qkcbjfzhudhkd","tag_id":"cio53kum10014kcbjdywd91rz","_id":"cio6gq4t700033mbjnjd3hwsx"},{"post_id":"cio53kulr000skcbjlhphtovc","tag_id":"cio6gt44w00083mbjphf3z1za","_id":"cio6gt44y000d3mbjuhsba1sl"},{"post_id":"cio53kulr000skcbjlhphtovc","tag_id":"cio6gt44x000a3mbjdbowe0h6","_id":"cio6gt44y000e3mbjh9me2lgg"},{"post_id":"cio53kulr000skcbjlhphtovc","tag_id":"cio6gt44x000c3mbj9gaa5g33","_id":"cio6gt44y000f3mbj1z5tvxo4"},{"post_id":"cio53kult000wkcbjj0mdbes2","tag_id":"cio6gxcw7000g3mbjugzsg3e1","_id":"cio6gxcw8000i3mbj28002eko"},{"post_id":"cio53kuly0013kcbj8u0t6uio","tag_id":"cio6ggoe20006yqbjbsqgs572","_id":"cio6gzeg3000k3mbj2zt2wzyl"},{"post_id":"cio6h38my000m3mbjrqma2qfo","tag_id":"cio6h38mz000n3mbjgpkbrug0","_id":"cio6h38n2000r3mbjpjdkayxw"},{"post_id":"cio6h38my000m3mbjrqma2qfo","tag_id":"cio6h38n0000p3mbjusswr2rx","_id":"cio6h38n2000s3mbjjau9k3qx"},{"post_id":"cio6h3cfz000t3mbjevz9orfo","tag_id":"cio53kum6001hkcbjhu0htlju","_id":"cio6h3cg1000v3mbj1clm5iu2"},{"post_id":"cio6h3cfz000t3mbjevz9orfo","tag_id":"cio6h3cg1000u3mbjshkepbfo","_id":"cio6h3cg1000w3mbj0y0l8p7s"},{"post_id":"cio8kk9ne000x3mi4zlpm8evx","tag_id":"cio6h38mz000n3mbjgpkbrug0","_id":"cio8kk9nh00103mi4ozbspgzy"},{"post_id":"cio8kk9ne000x3mi4zlpm8evx","tag_id":"cio8kk9ng000y3mi4y4wjlg67","_id":"cio8kk9nh00113mi4bgi5u6uc"},{"post_id":"cio8kkj4c00123mi46im4uykj","tag_id":"cio8kkj4d00133mi4uzl8cqba","_id":"cio8kkj4e00153mi4k9z2ky5s"},{"post_id":"cio8kkj4c00123mi46im4uykj","tag_id":"cio6ggoe5000cyqbjs27p5ogp","_id":"cio8kkj4f00163mi4z6t5taoy"},{"post_id":"cio8kkpq100183mi4nrhom4s4","tag_id":"cio8kkpq300193mi4vn7rrvx1","_id":"cio8kkpq3001c3mi44lh4y73r"},{"post_id":"cio8klni7001d3mi4a7mzg4bn","tag_id":"cio8kmq0b001e3mi48ae6enkm","_id":"cio8kmq0d001j3mi48o3z022o"},{"post_id":"cio8klni7001d3mi4a7mzg4bn","tag_id":"cio8kmq0c001g3mi4w0iosswa","_id":"cio8kmq0d001k3mi4of3k07an"},{"post_id":"cio8klni7001d3mi4a7mzg4bn","tag_id":"cio8kmq0c001i3mi4l7yofvwe","_id":"cio8kmq0d001l3mi4fgda43y4"},{"post_id":"cio8kp0x9001o3mi4j0feyjii","tag_id":"cio8kp0xb001p3mi4pn9hlpn0","_id":"cio8kp0xd001v3mi4bpjqml72"},{"post_id":"cio8kp0x9001o3mi4j0feyjii","tag_id":"cio8kp0xc001r3mi4s4ysafzb","_id":"cio8kp0xd001x3mi4ycnhbxki"},{"post_id":"cio8kp0x9001o3mi4j0feyjii","tag_id":"cio8kp0xd001t3mi43xuvn2e5","_id":"cio8kp0xd001y3mi4bxoit6yf"},{"post_id":"cio8l3vnf001z3mi4n87bhwl8","tag_id":"cio8l3vnh00203mi4kyuql6km","_id":"cio8l3vnj00243mi4c3sdk93y"},{"post_id":"cio8l3vnf001z3mi4n87bhwl8","tag_id":"cio8l3vni00223mi4otsznpgo","_id":"cio8l3vnj00253mi4ccncv1dg"},{"post_id":"cio8l3z8600263mi4qs2b2xwr","tag_id":"cio8l3z8800273mi4g823aphj","_id":"cio8l3z89002a3mi404lv1537"},{"post_id":"cio8l3z8600263mi4qs2b2xwr","tag_id":"cio8kp0xc001r3mi4s4ysafzb","_id":"cio8l3z89002b3mi4f08dmk72"},{"post_id":"cio8l3z8600263mi4qs2b2xwr","tag_id":"cio8l3z8800293mi42sjdqspe","_id":"cio8l3z89002c3mi4ehpb08qd"},{"post_id":"cio8l42kj002d3mi4iv2h8o30","tag_id":"cio8l42kk002e3mi4qyzpj9sf","_id":"cio8l42kk002g3mi41dqn2hk0"},{"post_id":"cip94yaq90000c5bj1ufzcwaw","tag_id":"cio53tmqg0000pqbj61o6c2od","_id":"cip94yaqc0001c5bj6q2dinbv"},{"post_id":"cip94yaq90000c5bj1ufzcwaw","tag_id":"cio53tmqv0002pqbjdziixa3v","_id":"cip94yaqc0002c5bjeve8cus3"},{"post_id":"cip94zm1b0004c5bj12pslk3z","tag_id":"cio53tmqg0000pqbj61o6c2od","_id":"cip94zm1f0007c5bjwfjhy543"},{"post_id":"cip94zm1b0004c5bj12pslk3z","tag_id":"cip94zm1e0005c5bj7jg7emuo","_id":"cip94zm1f0008c5bjj3k9hqqr"},{"post_id":"cip9548yi0009c5bjbj1x8h81","tag_id":"cip9548yk000ac5bj87f7qw9a","_id":"cip9548yl000ec5bjxomk2unh"},{"post_id":"cip9548yi0009c5bjbj1x8h81","tag_id":"cip9548yl000cc5bjc9po8git","_id":"cip9548yl000fc5bj3xn9ehgb"},{"post_id":"cip956uej000gc5bjctu102nl","tag_id":"cio6h38mz000n3mbjgpkbrug0","_id":"cip956uel000jc5bjqa2vy1wy"},{"post_id":"cip956uej000gc5bjctu102nl","tag_id":"cip956uek000hc5bjyotaar5w","_id":"cip956uel000kc5bjwxh6mxo6"},{"post_id":"cip959m2g000lc5bjt960n729","tag_id":"cip959m2i000mc5bjjmyjaq5s","_id":"cip959m2k000qc5bjbw1ox1je"},{"post_id":"cip959m2g000lc5bjt960n729","tag_id":"cip959m2j000oc5bjnd56uivd","_id":"cip959m2k000rc5bjv6zczk6j"}],"Tag":[{"name":"Hexo","_id":"cio3nw6u10001wcbjuu900ig7"},{"name":"GitHub","_id":"cio3nw6u60003wcbje2k44w0f"},{"name":"Linux","_id":"cio53kukq0007kcbj3bplfbbl"},{"name":"SSH","_id":"cio53kul0000bkcbjsw3bwc0q"},{"name":"翻墙","_id":"cio53kula000hkcbjt95zsadw"},{"name":"C语言","_id":"cio53kulg000okcbj8ro4hs3c"},{"name":"Dennis Ritchie","_id":"cio53kuls000vkcbjz160a46g"},{"name":"Unix","_id":"cio53kulx0010kcbjkm2flgxk"},{"name":"Ubuntu","_id":"cio53kum10014kcbjdywd91rz"},{"name":"ISO镜像源","_id":"cio53kum20017kcbjcvpc5qfa"},{"name":"背单词","_id":"cio53kum4001ckcbjac4qv38h"},{"name":"语言岛","_id":"cio53kum5001dkcbjtfao3kwv"},{"name":"MySQL","_id":"cio53kum6001hkcbjhu0htlju"},{"name":"编码","_id":"cio53kum6001jkcbjpqu8bcws"},{"name":"Go","_id":"cio53tmqg0000pqbj61o6c2od"},{"name":"Json","_id":"cio53tmqv0002pqbjdziixa3v"},{"name":"Hello","_id":"cio53uzlb0000r5bjciu3twhb"},{"name":"远程登录","_id":"cio6ggodi0002yqbjit7pjkq7"},{"name":"随想","_id":"cio6ggoe20006yqbjbsqgs572"},{"name":"感悟","_id":"cio6ggoe5000cyqbjs27p5ogp"},{"name":"Debian","_id":"cio6ggoe6000eyqbj2x0n41cj"},{"name":"VPS","_id":"cio6ggoe6000hyqbjsasyki8q"},{"name":"php-fpm","_id":"cio6ggoe6000iyqbjkja2tepi"},{"name":"Dropbox","_id":"cio6gq4t600003mbjmcssleoo"},{"name":"Python","_id":"cio6gt44w00083mbjphf3z1za"},{"name":"Pylons","_id":"cio6gt44x000a3mbjdbowe0h6"},{"name":"SQLAlchemy","_id":"cio6gt44x000c3mbj9gaa5g33"},{"name":"饭否","_id":"cio6gxcw7000g3mbjugzsg3e1"},{"name":"Javascript","_id":"cio6h38mz000n3mbjgpkbrug0"},{"name":"日期时间","_id":"cio6h38n0000p3mbjusswr2rx"},{"name":"密码","_id":"cio6h3cg1000u3mbjshkepbfo"},{"name":"IE","_id":"cio8kk9ng000y3mi4y4wjlg67"},{"name":"年终总结","_id":"cio8kkj4d00133mi4uzl8cqba"},{"name":"-regexdict -正则表达式 -Chrome插件","_id":"cio8kkpq300193mi4vn7rrvx1"},{"name":"tornado","_id":"cio8kmq0b001e3mi48ae6enkm"},{"name":"firefox","_id":"cio8kmq0c001g3mi4w0iosswa"},{"name":"fontawesome","_id":"cio8kmq0c001i3mi4l7yofvwe"},{"name":"点在多边形内","_id":"cio8kp0xb001p3mi4pn9hlpn0"},{"name":"python","_id":"cio8kp0xc001r3mi4s4ysafzb"},{"name":"golang","_id":"cio8kp0xd001t3mi43xuvn2e5"},{"name":"shadowsocks","_id":"cio8l3vnh00203mi4kyuql6km"},{"name":"proxychains","_id":"cio8l3vni00223mi4otsznpgo"},{"name":"sphinx","_id":"cio8l3z8800273mi4g823aphj"},{"name":"中文搜索","_id":"cio8l3z8800293mi42sjdqspe"},{"name":"xml转json","_id":"cio8l42kk002e3mi4qyzpj9sf"},{"name":"关键字参数","_id":"cip94zm1e0005c5bj7jg7emuo"},{"name":"MongoDB","_id":"cip9548yk000ac5bj87f7qw9a"},{"name":"auth","_id":"cip9548yl000cc5bjc9po8git"},{"name":"Object","_id":"cip956uek000hc5bjyotaar5w"},{"name":"Swift","_id":"cip959m2i000mc5bjjmyjaq5s"},{"name":"学习笔记","_id":"cip959m2j000oc5bjnd56uivd"}]}}